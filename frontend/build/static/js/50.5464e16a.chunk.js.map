{"version":3,"sources":["pages/vehicle/Form.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/hooks/esm/usePrevious.js","components/PageTitle.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","components/VerticalForm.js","components/FormInput.js","components/Datepicker.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","utils/selectOptionsForm.js"],"names":["api","APICore","Form","props","history","useNavigate","id","useParams","useState","data","setData","brands","setBrands","models","setModels","schemaResolver","yupResolver","yup","shape","brand_id","required","model_id","model_year","name","active","methods","useForm","resolver","defaultValues","handleSubmit","register","control","otherProps","errors","formState","getModels","get","getValues","then","response","getAllOptions","model","error","useEffect","company_id","company","brand","getBrands","defaultData","getData","setValue","breadCrumbItems","label","path","title","xs","Body","onSubmit","formData","ajaxCall","update","post","Object","assign","status","hasOwnProperty","fieldName","setError","type","message","join","e","console","log","noValidate","md","containerClass","options","handleChange","placeholder","className","variant","useEventCallback","fn","ref","useCommittedRef","useCallback","current","apply","arguments","value","useRef","useEventListener","eventTarget","event","listener","capture","handler","target","addEventListener","removeEventListener","useMounted","mounted","isMounted","useCallbackRef","usePrevious","PageTitle","companyId","listProps","Item","href","hidden","insideCompany","map","item","index","WeakMap","_excluded","Anchor","React","_ref","onKeyDown","source","excluded","key","i","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","useButtonProps","tagName","buttonProps","handleKeyDown","trim","role","_jsx","displayName","VerticalForm","children","customMethods","formClass","Array","isArray","child","createElement","PasswordInput","refCallback","showPassword","setShowPassword","InputGroup","Control","as","r","isInvalid","autoComplete","classNames","data-password","onClick","FormInput","labelClassName","smallHtml","comp","Group","Label","Feedback","dangerouslySetInnerHTML","__html","render","field","onChange","classNamePrefix","inputRef","find","option","selectedOption","Check","hideAddon","showTimeSelect","timeFormat","tI","dateFormat","timeCaption","date","DatepickerInput","forwardRef","DatepickerInputWithAddon","readOnly","HyperDatepicker","input","customInput","timeIntervals","inputClass","selected","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","isReactNative","global","navigator","product","isDOM","document","useLayoutEffect","Row","bsPrefix","Component","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","BreadcrumbItem","linkAs","LinkComponent","linkProps","prefix","undefined","defaultProps","Breadcrumb","formattedOptions","items","fieldValue","fieldLabel","getOptionSelected","addedOptionDisappeared","optionSelected","concat","sameParent"],"mappings":"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","file":"static/js/50.5464e16a.chunk.js","sourcesContent":["// @flow\nimport React, {useEffect, useState} from 'react';\nimport PageTitle from \"../../components/PageTitle\";\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\nimport {APICore} from \"../../helpers/api/apiCore\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport {useForm} from \"react-hook-form\";\nimport {FormInput} from \"../../components\";\nimport {getAllOptions} from \"../../utils/selectOptionsForm\";\n\nconst api = new APICore();\n\nconst Form = (props: {company?: any}): React$Element<React$FragmentType> => {\n    const history = useNavigate();\n    const {id} = useParams();\n    const [data, setData] = useState();\n    const [brands, setBrands] = useState([]);\n    const [models, setModels] = useState([]);\n\n    /*\n     * form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            brand_id: yup.number().required('Por favor, digite Marca'),\n            model_id: yup.number().required('Por favor, digite Modelo'),\n            model_year: yup.string().required('Por favor, digite Ano'),\n            name: yup.string().required('Por favor, digite Nome Completo'),\n            active: yup.boolean(),\n        })\n    );\n\n    /*\n     * form methods\n     */\n    const methods = useForm({ resolver: schemaResolver, defaultValues: {} });\n\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    const otherProps = {\n      register,errors,control\n    };\n\n    const onSubmit = (formData) => {\n        let ajaxCall;\n\n        if(id){\n            ajaxCall = api.update('/vehicle/' + id,formData);\n        } else {\n            ajaxCall = api.post('/vehicle',Object.assign(formData,{company_id: props.company?.id}));\n        }\n\n        ajaxCall.then(() => {\n            history(`/panel/company/${props.company?.id}/vehicles/list`);\n        }, (error) => {\n            if(error.response.status === 400 && error.response.data.hasOwnProperty('errors')){\n                for(let fieldName in error.response.data.errors){\n                    if(error.response.data.errors.hasOwnProperty(fieldName)){\n                        methods.setError(fieldName, {type: 'custom', message: error.response.data.errors[fieldName].join('<br>')});\n                    }\n                }\n            }\n        });\n    };\n\n    const getData = () => {\n        const defaultData = {\n            brand_id: null,\n            model_id: null,\n            model_year: null,\n            name: null,\n            active: true\n        };\n\n        if(id){\n            api.get('/vehicle/' + id).then((response) => {\n                const {name,active,model_id, model_year, model: {brand_id}, model, brand} = response.data.data;\n\n                setData({\n                    name,active,model_id, model_year, brand_id, model, brand\n                });\n            },(error) => {\n                setData(defaultData);\n            });\n        } else {\n            setData(defaultData);\n        }\n    };\n\n    const handleChangeBrand = () => {\n        getModels();\n\n        methods.setValue('model_id', null);\n    };\n\n    const getBrands = () => {\n        api.get('/vehicle-brand/active-brands',{company_id: props.company?.id}).then((response) => {\n            setBrands(getAllOptions(response.data.data, data?.brand));\n        },(error) => {\n            setBrands([]);\n        });\n    };\n\n    const getModels = (brand_id?) => {\n        api.get('/vehicle-model/active-vehicle-models',{brand_id: brand_id ?? methods.getValues('brand_id')}).then((response) => {\n            setModels(getAllOptions(response.data.data, data?.model,(brand_id ?? methods.getValues('brand_id')) === data?.brand_id));\n        },(error) => {\n            setModels([]);\n        });\n    };\n\n    useEffect(() => {\n        if(data){\n            getBrands();\n\n            if(id){\n                getModels(data.brand_id);\n            }\n        }\n    }, [data]);\n\n    useEffect(() => {\n        getData();\n    }, [id]);\n\n    useEffect(() => {\n        methods.setValue('name', data?.name ?? null);\n        methods.setValue('active', data?.active ?? true);\n        methods.setValue('model_id', data?.model_id ?? null);\n        methods.setValue('brand_id', data?.brand_id ?? null);\n        methods.setValue('model_year', data?.model_year ?? null);\n    }, [data]);\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Veículos', path: '/vehicles/list' },\n                    { label: 'Cadastro', path: `/vehicles/${id ? id + '/edit' : 'create'}`, active: true },\n                ]}\n                title={'Formulário de Veículos'}\n                company={props.company}\n            />\n            <Row>\n                <Col xs={12}>\n                    <Card>\n                        <Card.Body>\n                            <form onSubmit={handleSubmit(onSubmit, (e) => {console.log(e);})} noValidate>\n                                <Row>\n                                    <Col md={6}>\n                                        <FormInput\n                                            label=\"Marcas\"\n                                            type=\"select\"\n                                            name=\"brand_id\"\n                                            containerClass={'mb-3'}\n                                            options={brands}\n                                            handleChange={handleChangeBrand}\n                                            {...otherProps}\n                                        />\n\n                                        <FormInput\n                                            label=\"Nome\"\n                                            type=\"text\"\n                                            name=\"name\"\n                                            placeholder=\"Digite Nome\"\n                                            containerClass={'mb-3'}\n                                            {...otherProps}\n                                        />\n\n                                        <FormInput\n                                            label=\"Ative\"\n                                            type=\"checkbox\"\n                                            name=\"active\"\n                                            containerClass={'mb-3'}\n                                            {...otherProps}\n                                        />\n                                    </Col>\n\n                                    <Col md={6}>\n                                        <FormInput\n                                            label=\"Modelo\"\n                                            type=\"select\"\n                                            name=\"model_id\"\n                                            containerClass={'mb-3'}\n                                            options={models}\n                                            {...otherProps}\n                                        />\n                                        <FormInput\n                                            label=\"Ano\"\n                                            type=\"text\"\n                                            name=\"model_year\"\n                                            placeholder=\"Digite Ano\"\n                                            containerClass={'mb-3'}\n                                            {...otherProps}\n                                        />\n\n                                    </Col>\n                                </Row>\n\n                                <div className=\"mb-3 mb-0\">\n                                    <Button variant=\"primary\" type=\"submit\">\n                                        Cadastro\n                                    </Button>\n                                </div>\n                            </form>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Form;\n","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\nimport {useParams} from \"react-router-dom\";\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n    company?: any,\n    insideCompany?: boolean\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    const {companyId} = useParams();\n\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/panel/companies\">TUNAP</Breadcrumb.Item>\n                            <Breadcrumb.Item hidden={props.insideCompany === false} href={`/panel/company/${props.company?.id || companyId}/dashboard`}>{props.company?.name || 'Empresa'}</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={props.insideCompany === false ? item.path : `/panel/company/${props.company?.id || companyId}${item.path}`}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","// @flow\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\n\ntype VerticalFromProps = {\n    defaultValues?: Object,\n    resolver?: any,\n    children?: any,\n    onSubmit?: (value: any) => void,\n    customMethods?: any,\n    formClass?: string,\n};\n\nconst VerticalForm = ({\n    defaultValues,\n    resolver,\n    children,\n    onSubmit,\n    customMethods,\n    formClass,\n}: VerticalFromProps): React$Element<any> => {\n    /*\n     * form methods\n     */\n\n    let methods = useForm({ defaultValues, resolver });\n\n    if(customMethods){\n        methods = customMethods;\n    }\n\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit, (e) => {console.log(e);})} className={formClass} noValidate>\n            {Array.isArray(children)\n                ? children.map((child) => {\n                      return child.props && child.props.name\n                          ? React.createElement(child.type, {\n                                ...{\n                                    ...child.props,\n                                    register,\n                                    key: child.props.name,\n                                    errors,\n                                    control,\n                                },\n                            })\n                          : child;\n                  })\n                : children}\n        </form>\n    );\n};\n\nexport default VerticalForm;\n","// @flow\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport {Controller} from \"react-hook-form\";\nimport HyperDatepicker from \"./Datepicker\";\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n    options?: Array<any>,\n    smallHtml?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    options,\n    smallHtml,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : type === 'datepicker' ? 'datepicker' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        <span dangerouslySetInnerHTML={{__html: errors[name]['message']}}/>\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'select' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                        <Controller\n                                            control={otherProps['control']}\n                                            render={({ field: { onChange, value, name, ref } }) => (\n                                                <Select\n                                                    className={\"react-select \" + (errors && errors[name] ? 'is-invalid' : '')}\n                                                    classNamePrefix=\"react-select\"\n                                                    inputRef={ref}\n                                                    name={name}\n                                                    options={options}\n                                                    value={options.find((option) => option.value === value) || null}\n                                                    onChange={(selectedOption) => {\n                                                        onChange(selectedOption.value);\n                                                        if(otherProps.hasOwnProperty('handleChange')){\n                                                            otherProps['handleChange'](selectedOption.value);\n                                                        }\n                                                    }}\n                                                    {...otherProps}\n                                                />\n                                            )}\n                                            name={name}\n                                        />\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                <span dangerouslySetInnerHTML={{__html: errors[name]['message']}}/>\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <>\n                                    {type === 'checkbox' || type === 'radio' || type === 'switch' ? (\n                                        <>\n                                            <Form.Group className={containerClass}>\n                                                <Form.Check\n                                                    type={type}\n                                                    label={label}\n                                                    name={name}\n                                                    id={name}\n                                                    ref={(r) => {\n                                                        if (refCallback) refCallback(r);\n                                                    }}\n                                                    className={className}\n                                                    isInvalid={errors && errors[name] ? true : false}\n                                                    {...(register ? register(name) : {})}\n                                                    {...otherProps}\n                                                />\n\n                                                {errors && errors[name] ? (\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        <span dangerouslySetInnerHTML={{__html: errors[name]['message']}}/>\n                                                    </Form.Control.Feedback>\n                                                ) : null}\n                                            </Form.Group>\n                                        </>\n                                    ) : (\n                                        <>\n                                            {type === 'datepicker' ? (\n                                                <>\n                                                    <Form.Group className={containerClass}>\n                                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n\n                                                        <div className={errors && errors[name] ? 'is-invalid' : ''}>\n                                                            <Controller\n                                                                control={otherProps['control']}\n                                                                render={({ field: { onChange, value, name, ref } }) => (\n                                                                    <HyperDatepicker\n                                                                        hideAddon={true}\n                                                                        showTimeSelect\n                                                                        timeFormat=\"HH:mm\"\n                                                                        tI={1}\n                                                                        dateFormat=\"dd/MM/yyyy h:mm aa\"\n                                                                        timeCaption=\"time\"\n                                                                        name={name}\n                                                                        value={value}\n                                                                        onChange={(date) => {\n                                                                            if(otherProps.hasOwnProperty('handleChange')){\n                                                                                otherProps['handleChange'](date);\n                                                                            }\n                                                                        }}\n                                                                        {...otherProps}\n                                                                    />\n                                                                )}\n                                                                name={name}\n                                                            />\n                                                        </div>\n\n                                                        {errors && errors[name] ? (\n                                                            <Form.Control.Feedback type=\"invalid\">\n                                                                <span dangerouslySetInnerHTML={{__html: errors[name]['message']}}/>\n                                                            </Form.Control.Feedback>\n                                                        ) : null}\n                                                        {smallHtml ? smallHtml : null}\n                                                    </Form.Group>\n                                                </>\n                                            ) : (\n                                                <Form.Group className={containerClass}>\n                                                    {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                                    <Form.Control\n                                                        type={type}\n                                                        placeholder={placeholder}\n                                                        name={name}\n                                                        id={name}\n                                                        as={comp}\n                                                        ref={(r) => {\n                                                            if(refCallback){\n                                                                refCallback(r);\n                                                            }\n                                                        }}\n                                                        className={className}\n                                                        isInvalid={errors && errors[name] ? true : false}\n                                                        {...(register ? register(name) : {})}\n                                                        {...otherProps}\n                                                        autoComplete={name}>\n                                                        {children ? children : null}\n                                                    </Form.Control>\n\n                                                    {errors && errors[name] ? (\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            <span dangerouslySetInnerHTML={{__html: errors[name]['message']}}/>\n                                                        </Form.Control.Feedback>\n                                                    ) : null}\n                                                    {smallHtml ? smallHtml : null}\n                                                </Form.Group>\n                                            )}\n                                        </>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\nimport React, { forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport classNames from 'classnames';\n\ntype DatepickerInputProps = {\n    onClick?: () => void,\n    value?: string,\n};\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef((props: DatepickerInputProps, ref) => {\n    const onDateValueChange = () => {\n        console.log('date value changed');\n    };\n    return (\n        <input\n            type=\"text\"\n            className=\"form-control date\"\n            onClick={props.onClick}\n            value={props.value}\n            onChange={onDateValueChange}\n            ref={ref}\n        />\n    );\n});\n\ntype DatepickerInputWithAddonProps = {\n    onClick?: () => void,\n    value?: string,\n};\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef((props: DatepickerInputWithAddonProps, ref) => (\n    <div className=\"input-group\" ref={ref}>\n        <input\n            type=\"text\"\n            className=\"form-control form-control-light\"\n            onClick={props.onClick}\n            value={props.value}\n            readOnly\n        />\n        <div className=\"input-group-append\">\n            <span className=\"input-group-text bg-primary border-primary text-white\">\n                <i className=\"mdi mdi-calendar-range font-13\"></i>\n            </span>\n        </div>\n    </div>\n));\n\ntype HyperDatepickerProps = {\n    value: Date,\n    onChange: (date: any) => void,\n    hideAddon?: boolean,\n    inputClass?: string,\n    dateFormat?: string,\n    minDate?: Date,\n    maxDate?: Date,\n    showTimeSelect?: boolean,\n    tI?: number,\n    timeCaption?: string,\n    showTimeSelectOnly?: boolean,\n    monthsShown?: number,\n    inline?: boolean,\n};\n\nconst HyperDatepicker = (props: HyperDatepickerProps): React$Element<any> => {\n    // handle custom input\n    const input = (props.hideAddon || false) === true ? <DatepickerInput /> : <DatepickerInputWithAddon />;\n\n    return (\n        <>\n            {/* date picker control */}\n            <DatePicker\n                customInput={input}\n                timeIntervals={props.tI}\n                className={classNames('form-control', props.inputClass)}\n                selected={props.value}\n                onChange={(date) => props.onChange(date)}\n                showTimeSelect={props.showTimeSelect}\n                timeFormat=\"hh:mm a\"\n                timeCaption={props.timeCaption}\n                dateFormat={props.dateFormat || 'MM/dd/yyyy'}\n                minDate={props.minDate}\n                maxDate={props.maxDate}\n                monthsShown={props.monthsShown}\n                showTimeSelectOnly={props.showTimeSelectOnly}\n                inline={props.inline}\n                autoComplete=\"off\"\n            />\n        </>\n    );\n};\n\nexport default HyperDatepicker;\n","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","export const formattedOptions = (items, fieldValue = 'id', fieldLabel = 'name') => {\n  return items.map((item) => {\n    return {\n      value: item[fieldValue],\n      label: item[fieldLabel]\n    };\n  })\n};\n\nexport const getOptionSelected = (options, value) => {\n  return value !== null ? options.find((option) => option.value === value) : undefined;\n};\n\nexport const addedOptionDisappeared = (options, optionSelected, data, fieldValue = 'id', fieldLabel = 'name') => {\n  if(optionSelected || !data){\n    return options;\n  } else {\n    return options.concat(optionSelected ? [] : [{value: data[fieldValue], label: data[fieldLabel] + ' ' + (data.hasOwnProperty('active') && data.active !== true ? '(Not active)' : '(Deleted)')}] );\n  }\n};\n\nexport const getAllOptions = (items, data, sameParent = true, fieldValue = 'id', fieldLabel = 'name') => {\n  const options = formattedOptions(items, fieldValue, fieldLabel);\n\n  if(sameParent){\n    const optionSelected = data ? getOptionSelected(options, data[fieldValue]) : undefined;\n\n    return addedOptionDisappeared(options, optionSelected, data, fieldValue, fieldLabel)\n  }\n  else{\n    return options;\n  }\n};\n\nexport const setCreateOption = (options, label = 'Novo') => {\n  return [{value: 0, label: '--- ' + label + ' ---'}].concat(options);\n};\n"],"sourceRoot":""}