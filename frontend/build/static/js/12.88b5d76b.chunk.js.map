{"version":3,"sources":["../node_modules/@restart/ui/esm/DropdownContext.js","../node_modules/@restart/ui/esm/DropdownMenu.js","../node_modules/@restart/ui/esm/DropdownToggle.js","../node_modules/@restart/ui/esm/DropdownItem.js","../node_modules/@restart/ui/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownContext.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/@restart/ui/esm/mergeOptionsWithPopperConfig.js","../node_modules/@restart/ui/esm/useClickOutside.js","../node_modules/dequal/dist/index.mjs","../node_modules/@restart/hooks/esm/useSafeState.js","../node_modules/@restart/ui/esm/popper.js","../node_modules/@restart/ui/esm/usePopper.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../packages/@react-aria/ssr/src/SSRProvider.tsx"],"names":["DropdownContext","React","_excluded","noop","useDropdownMenu","options","context","useContext","useCallbackRef","arrowElement","attachArrowRef","hasShownRef","useRef","flip","offset","rootCloseEvent","fixed","placementOverride","placement","popperConfig","enableEventListeners","usePopper","shouldUsePopper","show","current","handleClose","e","toggle","setMenu","menuElement","toggleElement","popper","mergeOptionsWithPopperConfig","enabled","enableEvents","menuProps","Object","assign","ref","id","attributes","style","styles","metadata","hasShown","arrowProps","arrow","useClickOutside","clickTrigger","disabled","DropdownMenu","_ref","children","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","props","meta","_jsx","_Fragment","displayName","defaultProps","isRoleMenu","el","_el$getAttribute","getAttribute","toLowerCase","useDropdownToggle","useSSRSafeId","setToggle","handleClick","useCallback","onClick","DropdownToggle","useDropdownItem","href","active","onSelectCtx","SelectableContext","activeKey","NavContext","eventKey","makeEventKey","isActive","useEventCallback","event","isPropagationStopped","undefined","dataAttr","DropdownItem","as","Component","Button","dropdownItemProps","useRefWithUpdate","forceUpdate","useForceUpdate","attachRef","element","Dropdown","defaultShow","rawShow","onSelect","rawOnToggle","onToggle","itemSelector","focusFirstItemOnShow","window","useWindow","useUncontrolledProp","menuRef","toggleRef","lastShow","usePrevious","lastSourceEvent","focusInDropdown","nextShow","type","originalEvent","handleSelect","useMemo","contains","ownerDocument","activeElement","focusToggle","focus","maybeFocusFirst","focusType","test","first","qsa","useEffect","getNextFocusedChild","items","index","Math","max","min","useEventListener","document","_menuRef$current","_toggleRef$current","fromMenu","fromToggle","tagName","next","preventDefault","addEventListener","_menuRef$current2","once","stopPropagation","Provider","value","Menu","Toggle","Item","bsPrefix","className","Anchor","prefix","useBootstrapPrefix","classNames","useWrappedRefWithWarning","componentName","getDropdownMenuPlacement","alignEnd","dropDirection","isRTL","align","showProps","renderOnMount","variant","isNavbar","NavbarContext","contextAlign","drop","isInputGroup","InputGroupContext","alignClasses","brkPoint","direction","push","useMergedRefs","useIsomorphicEffect","update","close","split","childBsPrefix","dropdownContext","toggleProps","DropdownHeader","createWithBsPrefix","role","DropdownDivider","DropdownItemText","pProps","useUncontrolled","autoClose","navbar","useIsRTL","handleToggle","currentTarget","contextValue","BaseDropdown","ItemText","Divider","Header","createElement","node","removeEventListener","eventName","handler","capture","__once","listen","Context","createContext","canUseDOM","compareDocumentPosition","optionsSupported","onceSupported","wrappedHandler","onceHandler","this","call","toModifierArray","map","Array","isArray","k","name","_modifiers$preventOve","_modifiers$preventOve2","_modifiers$offset","_modifiers$arrow","containerPadding","modifiers","result","forEach","m","toModifierMap","strategy","eventListeners","preventOverflow","padding","isLeftClickEvent","button","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","getRefTarget","onClickOutside","preventMouseClickOutsideRef","handleMouseCapture","warning","handleMouse","doc","currentEvent","defaultView","removeMouseCaptureListener","removeMouseListener","mobileSafariHackListeners","documentElement","slice","body","remove","has","prototype","hasOwnProperty","find","iter","tar","dequal","foo","bar","ctor","len","tmp","constructor","Date","getTime","RegExp","toString","Set","size","Map","get","ArrayBuffer","Uint8Array","DataView","byteLength","getInt8","isView","useSafeState","state","isMounted","useMounted","nextState","createPopper","popperGenerator","defaultModifiers","hide","popperOffsets","computeStyles","disabledApplyStylesModifier","phase","fn","ariaDescribedByModifier","effect","elements","reference","ids","filter","trim","setAttribute","join","removeAttribute","_popper$getAttribute","EMPTY_MODIFIERS","referenceElement","popperElement","config","prevModifiers","popperInstanceRef","_popperInstanceRef$cu","_popperInstanceRef$cu2","useState","popperState","setState","updateModifier","requires","nextModifiers","setOptions","destroy","s","useCommittedRef","apply","arguments","property","dataProp","String","toArray","Function","bind","selector","querySelectorAll","useReducer","isReactNative","global","navigator","product","isDOM","useLayoutEffect","defaultContext","SSRContext","Boolean","defaultId","ctx","console"],"mappings":"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","file":"static/js/12.88b5d76b.chunk.js","sourcesContent":["import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","const _excluded = [\"children\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useContext, useRef } from 'react';\nimport * as React from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useClickOutside from './useClickOutside';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst noop = () => {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options = {}) {\n  const context = useContext(DropdownContext);\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const hasShownRef = useRef(false);\n  const {\n    flip,\n    offset,\n    rootCloseEvent,\n    fixed = false,\n    placement: placementOverride,\n    popperConfig = {},\n    enableEventListeners = true,\n    usePopper: shouldUsePopper = !!context\n  } = options;\n  const show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  const handleClose = e => {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  const {\n    placement,\n    setMenu,\n    menuElement,\n    toggleElement\n  } = context || {};\n  const popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placementOverride || placement || 'bottom-start',\n    enabled: shouldUsePopper,\n    enableEvents: enableEventListeners == null ? show : enableEventListeners,\n    offset,\n    flip,\n    fixed,\n    arrowElement,\n    popperConfig\n  }));\n  const menuProps = Object.assign({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n  const metadata = {\n    show,\n    placement,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? Object.assign({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useClickOutside(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nconst defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref) {\n  let {\n    children\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [props, meta] = useDropdownMenu(options);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\n\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import { useContext, useCallback } from 'react';\nimport * as React from 'react';\nimport { useSSRSafeId } from './ssr';\nimport DropdownContext from './DropdownContext';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const isRoleMenu = el => {\n  var _el$getAttribute;\n\n  return ((_el$getAttribute = el.getAttribute('role')) == null ? void 0 : _el$getAttribute.toLowerCase()) === 'menu';\n};\n\nconst noop = () => {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  const id = useSSRSafeId();\n  const {\n    show = false,\n    toggle = noop,\n    setToggle,\n    menuElement\n  } = useContext(DropdownContext) || {};\n  const handleClick = useCallback(e => {\n    toggle(!show, e);\n  }, [show, toggle]);\n  const props = {\n    id,\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-expanded': !!show\n  }; // This is maybe better down in an effect, but\n  // the component is going to update anyway when the menu element\n  // is set so might return new props.\n\n  if (menuElement && isRoleMenu(menuElement)) {\n    props['aria-haspopup'] = true;\n  }\n\n  return [props, {\n    show,\n    toggle\n  }];\n}\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle({\n  children\n}) {\n  const [props, meta] = useDropdownToggle();\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\n\nDropdownToggle.displayName = 'DropdownToggle';\n/** @component */\n\nexport default DropdownToggle;","const _excluded = [\"eventKey\", \"disabled\", \"onClick\", \"active\", \"as\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NavContext from './NavContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Create a dropdown item. Returns a set of props for the dropdown item component\n * including an `onClick` handler that prevents selection when the item is disabled\n */\nexport function useDropdownItem({\n  key,\n  href,\n  active,\n  disabled,\n  onClick\n}) {\n  const onSelectCtx = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const {\n    activeKey\n  } = navContext || {};\n  const eventKey = makeEventKey(key, href);\n  const isActive = active == null && key != null ? makeEventKey(activeKey) === eventKey : active;\n  const handleClick = useEventCallback(event => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(event);\n\n    if (onSelectCtx && !event.isPropagationStopped()) {\n      onSelectCtx(eventKey, event);\n    }\n  });\n  return [{\n    onClick: handleClick,\n    'aria-disabled': disabled || undefined,\n    'aria-selected': isActive,\n    [dataAttr('dropdown-item')]: ''\n  }, {\n    isActive\n  }];\n}\nconst DropdownItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    eventKey,\n    disabled,\n    onClick,\n    active,\n    as: Component = Button\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [dropdownItemProps] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n    ref: ref\n  }, dropdownItemProps));\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport { useCallback, useRef, useEffect, useMemo, useContext } from 'react';\nimport * as React from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventListener from '@restart/hooks/useEventListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle, { isRoleMenu } from './DropdownToggle';\nimport DropdownItem from './DropdownItem';\nimport SelectableContext from './SelectableContext';\nimport { dataAttr } from './DataKey';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useRefWithUpdate() {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef(null);\n  const attachRef = useCallback(element => {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown({\n  defaultShow,\n  show: rawShow,\n  onSelect,\n  onToggle: rawOnToggle,\n  itemSelector = `* [${dataAttr('dropdown-item')}]`,\n  focusFirstItemOnShow,\n  placement = 'bottom-start',\n  children\n}) {\n  const window = useWindow();\n  const [show, onToggle] = useUncontrolledProp(rawShow, defaultShow, rawOnToggle); // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n  const [menuRef, setMenu] = useRefWithUpdate();\n  const menuElement = menuRef.current;\n  const [toggleRef, setToggle] = useRefWithUpdate();\n  const toggleElement = toggleRef.current;\n  const lastShow = usePrevious(show);\n  const lastSourceEvent = useRef(null);\n  const focusInDropdown = useRef(false);\n  const onSelectCtx = useContext(SelectableContext);\n  const toggle = useCallback((nextShow, event, source = event == null ? void 0 : event.type) => {\n    onToggle(nextShow, {\n      originalEvent: event,\n      source\n    });\n  }, [onToggle]);\n  const handleSelect = useEventCallback((key, event) => {\n    onSelect == null ? void 0 : onSelect(key, event);\n    toggle(false, event, 'select');\n\n    if (!event.isPropagationStopped()) {\n      onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    }\n  });\n  const context = useMemo(() => ({\n    toggle,\n    placement,\n    show,\n    menuElement,\n    toggleElement,\n    setMenu,\n    setToggle\n  }), [toggle, placement, show, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(menuElement.ownerDocument.activeElement);\n  }\n\n  const focusToggle = useEventCallback(() => {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  const maybeFocusFirst = useEventCallback(() => {\n    const type = lastSourceEvent.current;\n    let focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && isRoleMenu(menuRef.current) ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    const first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(() => {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(() => {\n    lastSourceEvent.current = null;\n  });\n\n  const getNextFocusedChild = (current, offset) => {\n    if (!menuRef.current) return null;\n    const items = qsa(menuRef.current, itemSelector);\n    let index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  useEventListener(useCallback(() => window.document, [window]), 'keydown', event => {\n    var _menuRef$current, _toggleRef$current;\n\n    const {\n      key\n    } = event;\n    const target = event.target;\n    const fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    const fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    const isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu || key === 'Escape' && target.type === 'search')) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    if (key === 'Tab' && (!menuRef.current || !show)) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n    const meta = {\n      originalEvent: event,\n      source: event.type\n    };\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          const next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, meta);\n        } else {\n          const next = getNextFocusedChild(target, 1);\n          if (next && next.focus) next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(target.ownerDocument, 'keyup', e => {\n          var _menuRef$current2;\n\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, meta);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        if (key === 'Escape') {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        onToggle(false, meta);\n        break;\n\n      default:\n    }\n  });\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(DropdownContext.Provider, {\n      value: context,\n      children: children\n    })\n  });\n}\n\nDropdown.displayName = 'Dropdown';\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nDropdown.Item = DropdownItem;\nexport default Dropdown;","import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext({});\nDropdownContext.displayName = 'DropdownContext';\nexport default DropdownContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useDropdownItem } from '@restart/ui/DropdownItem';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  eventKey,\n  disabled = false,\n  onClick,\n  active,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  const [dropdownItemProps, meta] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...dropdownItemProps,\n    ref: ref,\n    className: classNames(className, prefix, meta.isActive && 'active', disabled && 'disabled')\n  });\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  const warningRef = useCallback(refValue => {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `${componentName} injected a ref to a provided \\`as\\` component that resolved to a component instance instead of a DOM element. ` + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownMenu } from '@restart/ui/DropdownMenu';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport DropdownContext from './DropdownContext';\nimport InputGroupContext from './InputGroupContext';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  flip: true\n};\nexport function getDropdownMenuPlacement(alignEnd, dropDirection, isRTL) {\n  const topStart = isRTL ? 'top-end' : 'top-start';\n  const topEnd = isRTL ? 'top-start' : 'top-end';\n  const bottomStart = isRTL ? 'bottom-end' : 'bottom-start';\n  const bottomEnd = isRTL ? 'bottom-start' : 'bottom-end';\n  const leftStart = isRTL ? 'right-start' : 'left-start';\n  const leftEnd = isRTL ? 'right-end' : 'left-end';\n  const rightStart = isRTL ? 'left-start' : 'right-start';\n  const rightEnd = isRTL ? 'left-end' : 'right-end';\n  let placement = alignEnd ? bottomEnd : bottomStart;\n  if (dropDirection === 'up') placement = alignEnd ? topEnd : topStart;else if (dropDirection === 'end') placement = alignEnd ? rightEnd : rightStart;else if (dropDirection === 'start') placement = alignEnd ? leftEnd : leftStart;\n  return placement;\n}\nconst DropdownMenu = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  align,\n  rootCloseEvent,\n  flip,\n  show: showProps,\n  renderOnMount,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  popperConfig,\n  variant,\n  ...props\n}, ref) => {\n  let alignEnd = false;\n  const isNavbar = useContext(NavbarContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  const {\n    align: contextAlign,\n    drop,\n    isRTL\n  } = useContext(DropdownContext);\n  align = align || contextAlign;\n  const isInputGroup = useContext(InputGroupContext);\n  const alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      const keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        const brkPoint = keys[0];\n        const direction = align[brkPoint]; // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n\n        alignEnd = direction === 'start';\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\n      }\n    } else if (align === 'end') {\n      alignEnd = true;\n    }\n  }\n\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const [menuProps, {\n    hasShown,\n    popper,\n    show,\n    toggle\n  }] = useDropdownMenu({\n    flip,\n    rootCloseEvent,\n    show: showProps,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig,\n    placement\n  });\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\n  useIsomorphicEffect(() => {\n    // Popper's initial position for the menu is incorrect when\n    // renderOnMount=true. Need to call update() to correct it.\n    if (show) popper == null ? void 0 : popper.update();\n  }, [show]);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\n\n    menuProps.align = align;\n  }\n\n  let style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = { ...props.style,\n      ...menuProps.style\n    };\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...menuProps,\n    style: style // Bootstrap css requires this data attrib to style responsive menus.\n    ,\n    ...((alignClasses.length || isNavbar) && {\n      'data-bs-popper': 'static'\n    }),\n    className: classNames(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  const isInputGroup = useContext(InputGroupContext);\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, !!isInputGroup && (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nconst DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  Component: 'hr',\n  defaultProps: {\n    role: 'separator'\n  }\n});\nconst DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nconst defaultProps = {\n  navbar: false,\n  align: 'start',\n  autoClose: true\n};\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop,\n    show,\n    className,\n    align,\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    autoClose,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const isRTL = useIsRTL();\n\n  const isClosingPermitted = source => {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click'; // autoClose=inside doesn't permit close on rootClose\n\n    if (autoClose === 'inside') return source !== 'rootClose'; // autoClose=outside doesn't permit close on select\n\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n\n  const handleToggle = useEventCallback((nextShow, meta) => {\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null ? void 0 : onToggle(nextShow, meta);\n  });\n  const alignEnd = align === 'end';\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const contextValue = useMemo(() => ({\n    align,\n    drop,\n    isRTL\n  }), [align, drop, isRTL]);\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, { ...props,\n        ref: ref,\n        className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'end' && 'dropend', drop === 'start' && 'dropstart')\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","function removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","/* eslint-disable no-bitwise, no-cond-assign */\n// HTML DOM and SVG DOM may have different support levels,\n// so we need to check on context instead of a document root element.\nexport default function contains(context, node) {\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","export function toModifierMap(modifiers) {\n  const result = {};\n\n  if (!Array.isArray(modifiers)) {\n    return modifiers || result;\n  } // eslint-disable-next-line no-unused-expressions\n\n\n  modifiers == null ? void 0 : modifiers.forEach(m => {\n    result[m.name] = m;\n  });\n  return result;\n}\nexport function toModifierArray(map = {}) {\n  if (Array.isArray(map)) return map;\n  return Object.keys(map).map(k => {\n    map[k].name = k;\n    return map[k];\n  });\n}\nexport default function mergeOptionsWithPopperConfig({\n  enabled,\n  enableEvents,\n  placement,\n  flip,\n  offset,\n  fixed,\n  containerPadding,\n  arrowElement,\n  popperConfig = {}\n}) {\n  var _modifiers$preventOve, _modifiers$preventOve2, _modifiers$offset, _modifiers$arrow;\n\n  const modifiers = toModifierMap(popperConfig.modifiers);\n  return Object.assign({}, popperConfig, {\n    placement,\n    enabled,\n    strategy: fixed ? 'fixed' : popperConfig.strategy,\n    modifiers: toModifierArray(Object.assign({}, modifiers, {\n      eventListeners: {\n        enabled: enableEvents\n      },\n      preventOverflow: Object.assign({}, modifiers.preventOverflow, {\n        options: containerPadding ? Object.assign({\n          padding: containerPadding\n        }, (_modifiers$preventOve = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve.options) : (_modifiers$preventOve2 = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve2.options\n      }),\n      offset: {\n        options: Object.assign({\n          offset\n        }, (_modifiers$offset = modifiers.offset) == null ? void 0 : _modifiers$offset.options)\n      },\n      arrow: Object.assign({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: Object.assign({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: Object.assign({\n        enabled: !!flip\n      }, modifiers.flip)\n    }))\n  });\n}","import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\n\nconst noop = () => {};\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport const getRefTarget = ref => ref && ('current' in ref ? ref.current : ref);\n\n/**\n * The `useClickOutside` hook registers your callback on the document that fires\n * when a pointer event is registered outside of the provided ref or element.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onClickOutside\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useClickOutside(ref, onClickOutside = noop, {\n  disabled,\n  clickTrigger = 'click'\n} = {}) {\n  const preventMouseClickOutsideRef = useRef(false);\n  const handleMouseCapture = useCallback(e => {\n    const currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'ClickOutside captured a close event but does not have a ref to compare it to. ' + 'useClickOutside(), should be passed a ref that resolves to a DOM node');\n    preventMouseClickOutsideRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target);\n  }, [ref]);\n  const handleMouse = useEventCallback(e => {\n    if (!preventMouseClickOutsideRef.current) {\n      onClickOutside(e);\n    }\n  });\n  useEffect(() => {\n    if (disabled || ref == null) return undefined;\n    const doc = ownerDocument(getRefTarget(ref)); // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    let currentEvent = (doc.defaultView || window).event; // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n\n    const removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    const removeMouseListener = listen(doc, clickTrigger, e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleMouse(e);\n    });\n    let mobileSafariHackListeners = [];\n\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(el => listen(el, 'mousemove', noop));\n    }\n\n    return () => {\n      removeMouseCaptureListener();\n      removeMouseListener();\n      mobileSafariHackListeners.forEach(remove => remove());\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleMouse]);\n}\n\nexport default useClickOutside;","var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n","import { useCallback } from 'react';\nimport useMounted from './useMounted';\n\nfunction useSafeState(state) {\n  var isMounted = useMounted();\n  return [state[0], useCallback(function (nextState) {\n    if (!isMounted()) return;\n    return state[1](nextState);\n  }, [isMounted, state[1]])];\n}\n\nexport default useSafeState;","import arrow from '@popperjs/core/lib/modifiers/arrow';\nimport computeStyles from '@popperjs/core/lib/modifiers/computeStyles';\nimport eventListeners from '@popperjs/core/lib/modifiers/eventListeners';\nimport flip from '@popperjs/core/lib/modifiers/flip';\nimport hide from '@popperjs/core/lib/modifiers/hide';\nimport offset from '@popperjs/core/lib/modifiers/offset';\nimport popperOffsets from '@popperjs/core/lib/modifiers/popperOffsets';\nimport preventOverflow from '@popperjs/core/lib/modifiers/preventOverflow';\nimport { placements } from '@popperjs/core/lib/enums';\nimport { popperGenerator } from '@popperjs/core/lib/popper-base'; // For the common JS build we will turn this file into a bundle with no imports.\n// This is b/c the Popper lib is all esm files, and would break in a common js only environment\n\nexport const createPopper = popperGenerator({\n  defaultModifiers: [hide, popperOffsets, computeStyles, eventListeners, offset, flip, preventOverflow, arrow]\n});\nexport { placements };","const _excluded = [\"enabled\", \"placement\", \"strategy\", \"modifiers\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { dequal } from 'dequal';\nimport useSafeState from '@restart/hooks/useSafeState';\nimport { createPopper } from './popper';\nconst disabledApplyStylesModifier = {\n  name: 'applyStyles',\n  enabled: false,\n  phase: 'afterWrite',\n  fn: () => undefined\n}; // until docjs supports type exports...\n\nconst ariaDescribedByModifier = {\n  name: 'ariaDescribedBy',\n  enabled: true,\n  phase: 'afterWrite',\n  effect: ({\n    state\n  }) => () => {\n    const {\n      reference,\n      popper\n    } = state.elements;\n\n    if ('removeAttribute' in reference) {\n      const ids = (reference.getAttribute('aria-describedby') || '').split(',').filter(id => id.trim() !== popper.id);\n      if (!ids.length) reference.removeAttribute('aria-describedby');else reference.setAttribute('aria-describedby', ids.join(','));\n    }\n  },\n  fn: ({\n    state\n  }) => {\n    var _popper$getAttribute;\n\n    const {\n      popper,\n      reference\n    } = state.elements;\n    const role = (_popper$getAttribute = popper.getAttribute('role')) == null ? void 0 : _popper$getAttribute.toLowerCase();\n\n    if (popper.id && role === 'tooltip' && 'setAttribute' in reference) {\n      const ids = reference.getAttribute('aria-describedby');\n\n      if (ids && ids.split(',').indexOf(popper.id) !== -1) {\n        return;\n      }\n\n      reference.setAttribute('aria-describedby', ids ? `${ids},${popper.id}` : popper.id);\n    }\n  }\n};\nconst EMPTY_MODIFIERS = [];\n/**\n * Position an element relative some reference element using Popper.js\n *\n * @param referenceElement\n * @param popperElement\n * @param {object}      options\n * @param {object=}     options.modifiers Popper.js modifiers\n * @param {boolean=}    options.enabled toggle the popper functionality on/off\n * @param {string=}     options.placement The popper element placement relative to the reference element\n * @param {string=}     options.strategy the positioning strategy\n * @param {function=}   options.onCreate called when the popper is created\n * @param {function=}   options.onUpdate called when the popper is updated\n *\n * @returns {UsePopperState} The popper state\n */\n\nfunction usePopper(referenceElement, popperElement, _ref = {}) {\n  let {\n    enabled = true,\n    placement = 'bottom',\n    strategy = 'absolute',\n    modifiers = EMPTY_MODIFIERS\n  } = _ref,\n      config = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const prevModifiers = useRef(modifiers);\n  const popperInstanceRef = useRef();\n  const update = useCallback(() => {\n    var _popperInstanceRef$cu;\n\n    (_popperInstanceRef$cu = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu.update();\n  }, []);\n  const forceUpdate = useCallback(() => {\n    var _popperInstanceRef$cu2;\n\n    (_popperInstanceRef$cu2 = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu2.forceUpdate();\n  }, []);\n  const [popperState, setState] = useSafeState(useState({\n    placement,\n    update,\n    forceUpdate,\n    attributes: {},\n    styles: {\n      popper: {},\n      arrow: {}\n    }\n  }));\n  const updateModifier = useMemo(() => ({\n    name: 'updateStateModifier',\n    enabled: true,\n    phase: 'write',\n    requires: ['computeStyles'],\n    fn: ({\n      state\n    }) => {\n      const styles = {};\n      const attributes = {};\n      Object.keys(state.elements).forEach(element => {\n        styles[element] = state.styles[element];\n        attributes[element] = state.attributes[element];\n      });\n      setState({\n        state,\n        styles,\n        attributes,\n        update,\n        forceUpdate,\n        placement: state.placement\n      });\n    }\n  }), [update, forceUpdate, setState]);\n  const nextModifiers = useMemo(() => {\n    if (!dequal(prevModifiers.current, modifiers)) {\n      prevModifiers.current = modifiers;\n    }\n\n    return prevModifiers.current;\n  }, [modifiers]);\n  useEffect(() => {\n    if (!popperInstanceRef.current || !enabled) return;\n    popperInstanceRef.current.setOptions({\n      placement,\n      strategy,\n      modifiers: [...nextModifiers, updateModifier, disabledApplyStylesModifier]\n    });\n  }, [strategy, placement, updateModifier, enabled, nextModifiers]);\n  useEffect(() => {\n    if (!enabled || referenceElement == null || popperElement == null) {\n      return undefined;\n    }\n\n    popperInstanceRef.current = createPopper(referenceElement, popperElement, Object.assign({}, config, {\n      placement,\n      strategy,\n      modifiers: [...nextModifiers, ariaDescribedByModifier, updateModifier]\n    }));\n    return () => {\n      if (popperInstanceRef.current != null) {\n        popperInstanceRef.current.destroy();\n        popperInstanceRef.current = undefined;\n        setState(s => Object.assign({}, s, {\n          attributes: {},\n          styles: {\n            popper: {}\n          }\n        }));\n      }\n    }; // This is only run once to _create_ the popper\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [enabled, referenceElement, popperElement]);\n  return popperState;\n}\n\nexport default usePopper;","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import * as React from 'react'; // TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, {ReactNode, useContext, useLayoutEffect, useMemo, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\n\ninterface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n/**\n * When using SSR with React Aria, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${++cur.current}`,\n    current: 0\n  }), [cur]);\n\n  return (\n    <SSRContext.Provider value={value}>\n      {props.children}\n    </SSRContext.Provider>\n  );\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\n/** @private */\nexport function useSSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  return useMemo(() => defaultId || `react-aria${ctx.prefix}-${++ctx.current}`, [defaultId]);\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  let cur = useContext(SSRContext);\n  let isInSSRContext = cur !== defaultContext;\n  let [isSSR, setIsSSR] = useState(isInSSRContext);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof window !== 'undefined' && isInSSRContext) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return isSSR;\n}\n"],"sourceRoot":""}