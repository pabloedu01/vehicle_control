{"version":3,"sources":["../node_modules/react-table/index.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js","pages/Users.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/hooks/esm/usePrevious.js","components/PageTitle.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","components/VerticalForm.js","components/FormInput.js","components/Datepicker.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","services/api/index.js"],"names":["module","exports","require","actions","init","defaultRenderer","value","emptyRenderer","React","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","props","next","style","className","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","ref","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","component","proto","Object","getPrototypeOf","prototype","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","i","length","push","String","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","row","error","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","a","key","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","keys","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","undefined","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","from","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","toString","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","window","addEventListener","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","w","columnIndex","elWidth","getElementById","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","OrderList","api","useApi","history","useNavigate","useState","responsive","tableBodyHeight","tableBodyMaxHeight","setLoading","list","setList","getList","getUsers","result","tasks","id_user","user","class","alert","filterType","tableBodyWidth","onRowClick","goDuc","id_duc","PageTitle","breadCrumbItems","label","active","Row","Col","xs","Card","Body","xl","Button","variant","name","useEventCallback","useCommittedRef","apply","arguments","useEventListener","eventTarget","event","listener","capture","useMounted","mounted","isMounted","useCallbackRef","usePrevious","companyId","useParams","listProps","Item","href","hidden","insideCompany","company","item","WeakMap","_excluded","Anchor","_ref","onKeyDown","source","excluded","sourceKeys","_objectWithoutPropertiesLoose","useButtonProps","tagName","buttonProps","handleKeyDown","trim","_jsx","displayName","VerticalForm","defaultValues","resolver","children","onSubmit","customMethods","formClass","methods","useForm","handleSubmit","register","control","errors","formState","log","noValidate","child","createElement","PasswordInput","placeholder","refCallback","showPassword","setShowPassword","InputGroup","Form","Control","as","r","isInvalid","autoComplete","classNames","data-password","FormInput","labelClassName","containerClass","smallHtml","otherProps","comp","Group","Label","Feedback","dangerouslySetInnerHTML","__html","field","classNamePrefix","inputRef","option","selectedOption","hasOwnProperty","Check","hideAddon","showTimeSelect","timeFormat","tI","dateFormat","timeCaption","date","DatepickerInput","forwardRef","DatepickerInputWithAddon","readOnly","HyperDatepicker","input","customInput","timeIntervals","inputClass","selected","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","isReactNative","global","navigator","product","isDOM","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","_proto","componentDidMount","updateStatus","componentDidUpdate","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","mounting","performEnter","performExit","_this2","appearing","_ref2","nodeRef","ReactDOM","findDOMNode","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","node","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","_this$props","childProps","TransitionGroupContext","Provider","cloneElement","Children","only","Component","noop","contextType","propTypes","defaultProps","createContext","_setPrototypeOf","o","p","setPrototypeOf","__proto__","subClass","superClass","create","constructor","apiCore","APICore","baseUrl","API_URL","request","method","endpoint","params","token","taketwo","loadingService","show","fullUrl","body","queryString","URLSearchParams","Authorization","fetch","req","json","toastService","msg","hide","getLoggedInUser","getToken","validateToken","login","logout","localStorage","removeItem","checkMe","signup","activateUser","getSchedules","delSchedules","getClients","getTechnicalConsultant","getVehicles","getVehicleBrand","getVehicleModel","getChecklistVersion","getVehicle","getClaims","getServices","getProducts"],"mappings":"uGACEA,EAAOC,QAAUC,EAAQ,O,8lCCC3B,IAEaC,EAAU,CACrBC,KAAM,QAGKC,EAAkB,SAAC,GAAD,QAAGC,wBAAQ,MAC7BC,EAAgB,kBAAMC,yCAEtBC,EAAgB,CAC3BC,KAAML,EACNM,MAAO,IACPC,SAAU,EACVC,SAAUC,OAAOC,kBAGnB,SAASC,+BAAcC,oDACdA,EAASC,QAAO,SAACC,EAAOC,OACrBC,EAA8BD,EAA9BC,MAAOC,EAAuBF,EAAvBE,iBAEfH,OACKA,OAHiCC,0BAOlCC,IACFF,EAAME,MAAQF,EAAME,WACVF,EAAME,OAAS,MAASA,GAAS,IACvCA,GAGFC,IACFH,EAAMG,UAAYH,EAAMG,UACpBH,EAAMG,UAAY,IAAMA,EACxBA,GAGkB,KAApBH,EAAMG,kBACDH,EAAMG,UAGRH,IACN,QAkBQI,EAAiB,SAACC,EAAOC,yBAAO,IACpC,SAACC,yBAAY,IAClB,UAAIF,GAAOE,IAAWR,QACpB,SAACS,EAAMP,UAlBb,SAASQ,EAAiBC,EAAWH,EAAWD,SAErB,mBAAdC,EACFE,EAAiB,GAAIF,EAAUG,EAAWJ,IAI/CK,MAAMC,QAAQL,GACTV,gBAAWa,UAAcH,IAI3BV,EAAWa,EAAWH,GAZ/B,CAmByBC,EAAMP,OAClBK,GACHC,iBAEJ,MAIOM,EAAc,SAACR,EAAOS,EAASR,EAAWS,mBAAXT,MAAO,IACjDD,EAAMN,QAAO,SAACS,EAAMP,UACAA,EAAKO,EAAMF,KAU5BQ,IAEQE,EAAY,SAACX,EAAOY,EAASX,yBAAO,IAC/CD,EAAMa,SAAQ,YACMC,EAAKF,EAASX,OAW7B,SAASc,EAAkBC,EAASC,EAASC,EAAYC,GAM1CH,EAAQI,WAC1B,mBAAUC,EAAOH,aAAeA,KAalCD,EAAQJ,SAAQ,YACMG,EAAQI,WAC1B,mBAAUC,EAAOH,aAAeI,QAY/B,SAASC,EAAiBC,EAASC,SACd,mBAAZD,EAAyBA,EAAQC,GAAOD,EAGjD,SAASE,EAAaC,OACrBC,EAAM5C,EAAM6C,gBAClBD,EAAIE,QAAUH,EAEP3C,EAAM+C,aAAY,kBAAMH,EAAIE,UAAS,QAIjCE,EACS,oBAAbC,SAA2BjD,EAAMkD,gBAAkBlD,EAAMmD,UAE3D,SAASC,EAAuBC,EAAIC,OACnCC,EAAavD,EAAM6C,WAEzBG,GAAoB,WACdO,EAAWT,SACbO,IAEFE,EAAWT,aAEVQ,GAuCE,SAASE,EAAaC,EAAUC,EAAQzC,yBAAO,IAC7C,SAAC0C,EAAMzC,kBAAY,QAClB0C,EAAuB,iBAATD,EAAoBD,EAAOC,GAAQA,cAE5CC,QACTC,QAAQC,KAAKJ,GACP,IAAIK,MA1MA,sCA6MLC,EAAWJ,OAAWH,GAAUC,UAAWzC,KAASC,KAIxD,SAAS8C,EAAWJ,EAAMjD,UAYjC,SAA0BsD,SAED,mBAAdA,IAECC,EAAQC,OAAOC,eAAeH,IACvBI,WAAaH,EAAMG,UAAUC,iBAF3C,IACOJ,EAJZ,CAR0BD,EAHAL,IAMD,mBAAdK,GAeX,SAA2BA,SAEF,iBAAdA,GACuB,iBAAvBA,EAAUM,UACjB,CAAC,aAAc,qBAAqBC,SAASP,EAAUM,SAASE,aAJpE,CAdsBR,GAPYjE,gBAAC4D,EAASjD,GAAYiD,EAGxD,IAA0BK,EC1MnB,SAASS,EAAoBC,EAASC,EAAQC,yBAAQ,GACpDF,EAAQG,KAAI,mBAOjBC,EANArB,OACKA,GACHkB,SACAC,WAKEnB,EAAOiB,UACTjB,EAAOiB,QAAUD,EAAoBhB,EAAOiB,QAASjB,EAAQmB,EAAQ,IAEhEnB,KAIJ,SAASsB,EAAeL,UACtBM,EAAUN,EAAS,WAGrB,SAASI,EAAqBrB,OAE7BwB,EAAyBxB,EAAzBwB,GAAIC,EAAqBzB,EAArByB,SAAUC,EAAW1B,EAAX0B,UAEI,iBAAbD,EAAuB,CAChCD,EAAKA,GAAMC,MACLE,EAAeF,EAASG,MAAM,KACpCH,EAAW,mBA+HR,SAAexC,EAAK4C,EAAMC,OAC1BD,SACI5C,MAYL8C,EAVEC,EAA2B,mBAATH,EAAsBA,EAAOI,KAAKC,UAAUL,GAE9DM,EACJC,EAAaC,IAAIL,IAChB,eACOG,EAiJZ,SAAuBlD,UAevB,SAASqD,EAAYC,EAAKC,GAAS,QAATA,UAAS,IAC5B5E,MAAMC,QAAQ0E,OAGZ,IAAIE,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,GAAK,EACnCH,EAAYC,EAAIE,GAAID,QAHtBA,EAAOG,KAAKJ,UAMPC,EART,CAbgBvD,GAETmC,KAAI,mBAAKwB,OAAOC,GAAGC,QAAQ,IAAK,QAEhCC,KAAK,KAELD,QAAQE,EAAe,KACvBF,QAAQG,EAAgB,IAExBrB,MAAM,KAXb,CAjJoCC,UAC9BO,EAAac,IAAIlB,EAAUG,GACpBA,EAHR,OASDJ,EAAMI,EAAQnF,QAAO,SAACmG,EAAQC,UAAaD,EAAOC,KAAWnE,GAC7D,MAAOoE,oBAGKtB,EAAsBA,EAAMD,EArBrC,CA/HqBwB,EAAK3B,QAG1BH,GAAwB,iBAAXE,GAAuBA,IACvCF,EAAKE,IAGFF,GAAMxB,EAAOiB,cAChBd,QAAQoD,MAAMvD,GACR,IAAIK,MAAM,2DAGbmB,QACHrB,QAAQoD,MAAMvD,GACR,IAAIK,MAAM,wDAGlBI,OAAO+C,OAAOxD,EAAQ,CACpBwB,KACAC,aAGKzB,EAGF,SAASyD,EAAezD,EAAQ0D,OAChCA,QACG,IAAIrD,aAEZI,OAAO+C,OAAOxD,KAEZ0B,OAAQrF,EACRsH,OAAQtH,GACLE,KACAmH,KACA1D,IAGLS,OAAO+C,OAAOxD,EAAQ,CACpB4D,cAAe5D,EAAOvD,QAGjBuD,EAIF,SAAS6D,EACdC,EACAvH,EACAwH,kBAA6B,iBAAO,aAE9BC,EAAe,GAEjBC,EAAcH,EAEdI,EAAM,EACJC,EAAS,kBAAMD,sBAIbE,EAAc,CAClBC,QAAS,IAILC,EAAgB,GAEhBC,EAAaN,EAAYO,MAAK,mBAAK3B,EAAE3B,UAG3C+C,EAAY9F,SAAQ,gBAIdsG,EAFAC,EAAqB,UAAIJ,GAAeK,UAAU,GAIlDJ,IAGAE,EADEzE,EAAOkB,OACTuD,KACKzE,EAAOkB,QACV0D,WAAY5E,EAAOkB,OAAOM,GAC1BA,GAAOxB,EAAOkB,OAAOM,OAAM2C,IAC3BE,QAAS,CAACrE,IACP+D,EAA2B/D,IAKpByD,KAERmB,WAHkB5E,EAAOwB,kBAIzBA,GAAOxB,EAAOwB,mBAAkB2C,IAChCU,cAAe7E,EACfqE,QAAS,CAACrE,IACP+D,EAA2B/D,IAEhCzD,GAOFmI,GACAA,EAAmBE,aAAeH,EAAUG,WAE5CF,EAAmBL,QAAQ1B,KAAK3C,GAEhCsE,EAAc3B,KAAK8B,IAIvBL,EAAYC,QAAQ1B,KAAK3C,MAG3BgE,EAAarB,KAAKyB,GAGlBH,EAAcK,GA7DTL,EAAYvB,mBAgEZsB,EAAaW,UAGtB,IAAMvC,EAAe,IAAI0C,IA0BlB,SAASC,+BAAmBC,iDAC5B,IAAIvC,EAAI,EAAGA,EAAIuC,EAAKtC,OAAQD,GAAK,cACzBuC,EAAKvC,UACPuC,EAAKvC,GA8BX,SAASwC,EAAWC,MACR,mBAANA,SACFA,EAIJ,SAAS3D,EAAUgB,EAAK4C,OACvBC,EAAO,UAEG,SAAVC,EAAU,GACd9C,EAAIpE,SAAQ,YACL0E,EAAEsC,GAGLE,EAAQxC,EAAEsC,IAFVC,EAAKzC,KAAKE,MAHA,CAURN,GAED6C,EAGF,SAASE,EACdC,SACEC,sBAAmBC,iBAAUC,8BAEzBC,EAAe,UAiBrBJ,EAAKpH,SAAQ,mBAfK,SAAZyH,EAAatC,EAAKuC,sBACtBvC,EAAIwC,WACDxC,EAAIyC,UAAYzC,EAAIyC,SAASP,IAAuBC,EAASnC,EAAI9B,IAEpE8B,EAAI0C,UAAY1C,EAAI2C,WAAa3C,EAAI2C,QAAQvD,OAEzCmD,GACFF,EAAahD,KAAKW,GAGhBA,EAAI2C,SAAW3C,EAAI2C,QAAQvD,QAAUY,EAAIwC,YAC3CxC,EAAI2C,QAAQ9H,SAAQ,mBAAOyH,EAAUtC,EAAKoC,MAX5B,CAeYpC,MAEvBqC,EAGF,SAASO,EAAgBC,EAAQC,EAAiBC,UAErDpB,EAAWkB,IACXC,EAAgBD,IAChBE,EAAYF,IACZE,EAAYC,KAIT,SAASC,EAAuBC,EAAYpK,EAAO4D,UACjDwG,EAAaA,EAAWpK,EAAO4D,YAAiB5D,EAGlD,SAASqK,UACR,IAAIpG,MACR,mGAIJ,IAAIqG,EAAmB,KAyBjB1D,EAAgB,MAChBC,EAAiB,MChUjB0D,EAAuB,sBAC3BC,KAAM,SACH3J,IAGC4J,EAA2B,sBAC/BD,KAAM,YACH3J,IAGC6J,EAAwB,SAAC7J,SAAS+C,qBACtCmF,cAAenF,EAAOwB,GACtBuF,QAAS/G,EAAOgH,wBAChBJ,KAAM,gBACH3J,IAGCgK,EAAwB,SAAChK,SAAS+C,qBACtCmF,cAAenF,EAAOwB,GACtBuF,QAAS/G,EAAOgH,yBACb/J,IAGCiK,EAA6B,SAACjK,eAClCkI,qBAD2CgC,MAE3CP,KAAM,OACH3J,IAGCmK,EAA6B,SAACnK,eAClCkI,qBAD2CgC,OAExClK,IAGCoK,EAAqB,SAACpK,eAC1BkI,aADmC7B,IACnB9B,GAChBoF,KAAM,OACH3J,IAGCqK,EAAsB,SAACrK,SAASsK,mBACpCpC,YAAaoC,EAAKjE,IAAI9B,OAAM+F,EAAKvH,OAAOwB,GACxCoF,KAAM,QACH3J,IAGU,SAASuK,UACf,CACLC,WAAY,GACZC,cAAe,GACfC,mBAAoB,GACpB1G,QAAS,GACT2G,YAAa,GACb9D,WAAY,GACZ+D,eAAgB,GAChBC,YAAa,GACbC,oBAAqB,GACrBC,wBAAyB,GACzBC,qBAAsB,GACtBC,eAAgB,GAChBC,mBAAoB,GACpBnE,aAAc,GACdoE,iBAAkB,GAClBC,4BAA6B,GAC7BC,YAAa,GACbC,WAAY,GACZC,cAAe,CAAC7B,GAChB8B,kBAAmB,CAAC5B,GACpB6B,oBAAqB,CAACxB,GACtByB,oBAAqB,CAACvB,GACtBwB,eAAgB,CAAC9B,GACjB+B,eAAgB,CAAC5B,GACjB6B,YAAa,CAACzB,GACd0B,aAAc,CAACzB,GACf0B,iBAAkB,IChEtB/M,EAAQgN,mBAAqB,qBAC7BhN,EAAQiN,iBAAmB,mBAC3BjN,EAAQkN,iBAAmB,mBAC3BlN,EAAQmN,qBAAuB,uBAExB,IAAMC,EAAsB,YACjC/L,EAAMgM,qBAAuB,CAACC,GAC9BjM,EAAMkM,6BAA+B,CAACC,GAEtCnM,EAAMoK,cAAc/E,KAAK+G,GACzBpM,EAAM+K,4BAA4B1F,KAAK0F,GACvC/K,EAAM8K,iBAAiBzF,MAAK,SAAC/C,SAAQG,6BAChCH,GACHG,EAAS4J,MAAMC,mBAEjBtM,EAAMgL,YAAY3F,KAAK2F,IAGzBe,EAAoB7K,WAAa,sBAEjC,IAAM+K,EAA8B,SAACtM,SAAS+C,iBAAa,CACzD/C,EACA,CACE4M,SAAU,SAAAxG,GACRrD,EAAO8J,cAAczG,EAAE0G,OAAOC,UAEhC7M,MAAO,CACLgG,OAAQ,WAEV6G,QAAShK,EAAOiK,UAChBC,MAAO,2BAILT,EAAsC,SAACxM,SAAS8C,mBAAe,CACnE9C,EACA,CACE4M,SAAU,SAAAxG,GACRtD,EAASqJ,sBAAsB/F,EAAE0G,OAAOC,UAE1C7M,MAAO,CACLgG,OAAQ,WAEV6G,SAAUjK,EAASoK,mBAAqBpK,EAAS4J,MAAMC,cAAclH,OACrEwH,MAAO,4BACPE,eACGrK,EAASoK,kBAAoBpK,EAAS4J,MAAMC,cAAclH,UAIjE,SAASgH,EAAQC,EAAOU,EAAQC,EAAevK,MACzCsK,EAAOpK,OAAShE,EAAQC,eAExB0N,cAAe,IACZD,MAIHU,EAAOpK,OAAShE,EAAQgN,+BAErBU,GACHC,cAAe7J,EAASwK,aAAaX,eAAiB,QAItDS,EAAOpK,OAAShE,EAAQiN,iBAAkB,KAMtCU,YAJGS,EAAOjO,MACViO,EAAOjO,OACNuN,EAAMC,cAAc9I,SAASuJ,EAAOG,qBAGnCb,EAAMC,eAAeS,EAAOG,WAChCb,EAAMC,cAAczD,QAAO,mBAAKtD,IAAMwH,EAAOG,wBAG5Cb,GACHC,yBAIAS,EAAOpK,OAAShE,EAAQkN,sBAErBQ,GACHC,cAAe/K,EAAiBwL,EAAOjO,MAAOuN,EAAMC,iBAIpDS,EAAOpK,OAAShE,EAAQmN,0BAOrBO,GACHC,wBANOS,EAAOjO,MACViO,EAAOjO,OACNuN,EAAMC,cAAclH,QAIE3C,EAAS+D,WAAW1C,KAAI,mBAAKyB,EAAErB,MAAM,YAKtE,SAAS6G,EAA4BtI,OAEjCsE,EAEEtE,EAFFsE,QACSuF,EACP7J,EADF4J,MAASC,cAGUtN,EAAM6C,WAETC,YAsBd4H,EAA0B,EAE9B3C,EAAQlG,SACN,mBAAc6I,GAtBK,SAAfyD,EAAgBzK,EAAQ0K,GAC5B1K,EAAOiK,UAAYS,IAAkBd,EAAc9I,SAASd,EAAOwB,QAE/DwF,EAA0B,SAE1BhH,EAAOqE,SAAWrE,EAAOqE,QAAQ3B,OACnC1C,EAAOqE,QAAQlG,SACb,mBACG6I,GAA2ByD,EAAaE,EAAW3K,EAAOiK,cAG/DjD,EAA0BhH,EAAOiK,UAAY,EAAI,EAGnDjK,EAAOgH,wBAA0BA,EAE1BA,EAhBY,CAsBmC4D,SAI1D,SAAStC,EAAYvI,OAEjBkB,EAOElB,EAPFkB,QACA4J,EAME9K,EANF8K,YACAC,EAKE/K,EALF+K,SACAhH,EAIE/D,EAJF+D,WACAiH,EAGEhL,EAHFgL,SACSnB,EAEP7J,EAFF4J,MAASC,gBAEP7J,EADFiL,uCAGIC,EAAcjM,EAAae,GAE3BoK,EAAmBrG,EAAWpB,SAAWkH,EAAclH,OAEvDwG,EAAmB5M,EAAM+C,aAC7B,SAACmL,EAAUpO,UACT0O,EAAS,CAAE7K,KAAMhE,EAAQiN,iBAAkBsB,WAAUpO,YACvD,CAAC0O,IAGG3B,EAAmB7M,EAAM+C,aAC7B,mBAASyL,EAAS,CAAE7K,KAAMhE,EAAQkN,iBAAkB/M,YACpD,CAAC0O,IAGG1B,EAAuB9M,EAAM+C,aACjC,mBAASyL,EAAS,CAAE7K,KAAMhE,EAAQmN,qBAAsBhN,YACxD,CAAC0O,IAGGtB,EAA+BnM,EACnC0N,IAAWvB,6BACX,CAAEzJ,SAAUkL,MAGdJ,EAAY1M,SAAQ,YAClB6B,EAAO8J,aAAe,YACpBgB,EAAS,CACP7K,KAAMhE,EAAQiN,iBACdsB,SAAUxK,EAAOwB,GACjBpF,WAIJ4D,EAAOsJ,qBAAuBjM,EAC5B0N,IAAWzB,qBACX,CACEvJ,SAAUkL,IACVjL,kBAKAkL,EAA4BlM,EAAagM,GAE/CtL,GAAuB,WACjBwL,KACFJ,EAAS,CAAE7K,KAAMhE,EAAQgN,uBAE1B,CAAC6B,EAAU7J,IAEdR,OAAO+C,OAAOzD,EAAU,CACtBoK,mBACAjB,mBACAC,mBACAC,uBACAI,iCC7LJ,IAAM2B,GAAsB,GACtBC,GAAwB,GACxBC,GAAiB,SAAC1B,EAAOU,EAAQiB,UAAc3B,GAC/C4B,GAAoB,SAACjI,EAAK6D,UAAU7D,EAAI2C,SAAW,IACnDuF,GAAkB,SAAClI,EAAK6D,EAAOjG,aAChCA,EAAS,CAACA,EAAOM,GAAI2F,GAAOpE,KAAK,KAAOoE,IACvCsE,GAA4B,mBAAK5I,GAEvC,SAAS6I,GAAczO,SASjBA,EAPFsN,0BAAeY,OAOblO,EANFV,2BAAgB6O,OAMdnO,EALF0O,wBAAaJ,OAKXtO,EAJF2O,sBAAWJ,OAITvO,EAHF4O,0BAAeR,OAGbpO,EAFF0K,gCAAqB8D,mBAEnBxO,iGAIFsN,eACAhO,gBACAoP,aACAC,WACAC,eACAlE,uBAmZJ,SAASmE,GAAsBzH,EAAS0H,kBAAO,OACzCC,EAAmB,EACnBC,EAAgB,EAChBC,EAAmB,EACnBC,EAAoB,SAExB9H,EAAQlG,SAAQ,gBACCiO,EAAeC,EAAxBhI,WAENgI,EAAOC,UAAYP,EAEfK,GAAcA,EAAW1J,OAAQ,OAM/BoJ,GAAsBM,EAAYL,GAJpCQ,OACAC,OACAC,OACAC,OAEFL,EAAOE,cAAgBA,EACvBF,EAAOG,WAAaA,EACpBH,EAAOI,cAAgBA,EACvBJ,EAAOK,eAAiBA,OAExBL,EAAOE,cAAgBF,EAAO3P,SAC9B2P,EAAOG,WAAaG,KAAKC,IACvBD,KAAKE,IAAIR,EAAO3P,SAAU2P,EAAO5P,OACjC4P,EAAO1P,UAET0P,EAAOI,cAAgBJ,EAAO1P,SAC9B0P,EAAOK,eAAiBL,EAAOS,UAAYT,EAAOG,WAAa,EAE7DH,EAAOpC,YACT8B,GAAQM,EAAOG,WACfR,GAAoBK,EAAOE,cAC3BN,GAAiBI,EAAOG,WACxBN,GAAoBG,EAAOI,cAC3BN,GAAqBE,EAAOK,mBAIzB,CAACV,EAAkBC,EAAeC,EAAkBC,GAG7D,SAASY,UACPC,SACAzH,SACA0H,aACAC,aACAlN,WACA4L,aACAD,eACAwB,qBACAlC,gBAmFA+B,EAAK7O,SAAQ,SAACiP,EAAaC,UA9ET,SAAZC,EAAaF,EAAaC,EAAUlM,EAAWD,EAAQqM,YAAnBpM,MAAQ,OAE1C4E,EAAWqH,EAEX5L,EAAKoK,EAASwB,EAAaC,EAAUnM,GAEvCoC,EAAM4J,EAAS1L,MAGd8B,EAsCMA,EAAI2C,SAIb3C,EAAIkK,gBAAgBrP,SAAQ,SAAC0E,EAAGJ,UAAM6K,EAAUzK,EAAGJ,EAAGtB,EAAQ,EAAGmC,eAzCjEA,EAAM,CACJ9B,KACAuE,WACAoB,MAAOkG,EACPlM,QACAsM,MAAO,CAAC,MAKNA,MAAMrM,IAAMqF,EAChBnD,EAAImK,MAAMtH,OAASM,EACnBnD,EAAImK,MAAMtP,QAAUsI,EACpBnD,EAAImK,MAAM,GAAG1E,aAAetC,EAG5BnD,EAAIoK,OAAS,GAGbH,EAAW5K,KAAKW,GAEhB2J,EAAStK,KAAKW,GAEd4J,EAAS1L,GAAM8B,EAGfA,EAAIkK,gBAAkB7B,EAAWyB,EAAaC,GAG1C/J,EAAIkK,gBAAiB,KACjBvH,EAAU,GAChB3C,EAAIkK,gBAAgBrP,SAAQ,SAAC0E,EAAGJ,UAC9B6K,EAAUzK,EAAGJ,EAAGtB,EAAQ,EAAGmC,EAAK2C,MAGlC3C,EAAI2C,QAAUA,EAUdjG,EAAOyB,WACT6B,EAAIoK,OAAO1N,EAAOwB,IAAMxB,EAAOyB,SAC7B2L,EACAC,EACA/J,EACAiK,EACAP,IAKJ1J,EAAIoK,OAAO1N,EAAOwB,IAAM1D,EACtBqP,EACA7J,EAAIoK,OAAO1N,EAAOwB,IAClB,CACE8B,MACAtD,SACAD,SAAUkL,MAxEE,CA+ENmC,EAAaC,EAAU,SAAc9H,MClkBnDtJ,EAAQ0R,cAAgB,gBACxB1R,EAAQ2R,kBAAoB,oBAC5B3R,EAAQ4R,sBAAwB,4BAEnBC,GAAc,YACzBxQ,EAAMyQ,8BAAgC,CAACC,IACvC1Q,EAAM2Q,0BAA4B,CAACC,IACnC5Q,EAAMoK,cAAc/E,KAAK+G,IACzBpM,EAAMgL,YAAY3F,KAAK2F,IACvBhL,EAAMiL,WAAW5F,KAAK4F,KAGxBuF,GAAYtP,WAAa,cAEzB,IAAMwP,GAAuC,SAAC/Q,SAAS8C,mBAAe,CACpE9C,EACA,CACEkR,QAAS,SAAA9K,GACPtD,EAAS8N,yBAEX1Q,MAAO,CACLgG,OAAQ,WAEV+G,MAAO,8BAILgE,GAAmC,SAACjR,SAASqG,cAAU,CAC3DrG,EACA,CACEkR,QAAS,WACP7K,EAAIsK,qBAENzQ,MAAO,CACLgG,OAAQ,WAEV+G,MAAO,yBAKX,SAASR,GAAQC,EAAOU,EAAQC,EAAevK,MACzCsK,EAAOpK,OAAShE,EAAQC,eAExBuJ,SAAU,IACPkE,MAIHU,EAAOpK,OAAShE,EAAQ0R,0BAErBhE,GACHlE,SAAU1F,EAASwK,aAAa9E,UAAY,QAI5C4E,EAAOpK,OAAShE,EAAQ4R,sBAAuB,KACzCzR,EAAUiO,EAAVjO,MACAgS,EAAgCrO,EAAhCqO,kBAAmBlB,EAAanN,EAAbmN,qBAEF9Q,EAAwBA,GAASgS,EAE3C,KACP3I,EAAW,UAEjBhF,OAAO4N,KAAKnB,GAAU/O,SAAQ,YAC5BsH,EAAS6I,SAAS,KAIf3E,GACHlE,yBAKCkE,GACHlE,SAAU,QAIV4E,EAAOpK,OAAShE,EAAQ2R,kBAAmB,OACrCpM,EAA2B6I,EAA3B7I,GAAW+M,EAAgBlE,EAAvBjO,MACNoS,EAAS7E,EAAMlE,SAASjE,GAExBiN,WACGF,EAA8BA,GAAeC,MAEjDA,GAAUC,cAER9E,GACHlE,cACKkE,EAAMlE,iBACRjE,MAAK,MAGL,GAAIgN,IAAWC,EAAa,OACJ9E,EAAMlE,SAA1BjE,OAA0BiE,EAA1BjE,QAEJmI,GACHlE,cAHOjE,oBAMFmI,GAKb,SAASrB,GAAYvI,OAEjBiN,EAWEjN,EAXFiN,KACAzH,EAUExF,EAVFwF,KACA2H,EASEnN,EATFmN,WASEnN,EARFyF,+BAAoB,eAQlBzF,EAPF2O,uCAOE3O,EANF2F,gCAME3F,EALF4O,kCACA5D,EAIEhL,EAJFgL,SACAzM,EAGEyB,EAHFzB,QACSmH,EAEP1F,EAFF4J,MAASlE,SACTqF,EACE/K,EADF+K,SAGFzM,EACEC,EACA,CAAC,YAAa,aAAc,kBAAmB,mBAC/C,mBAGIsQ,EAAuB5P,EAAa2P,GAEtCP,EAAoBS,QACtBpO,OAAO4N,KAAKnB,GAAUxK,QAAUjC,OAAO4N,KAAK5I,GAAU/C,QAGpD0L,GACE3N,OAAO4N,KAAKnB,GAAU1I,MAAK,mBAAOiB,EAASjE,QAC7C4M,MAKJ1O,GAAuB,WACjBkP,KACF9D,EAAS,CAAE7K,KAAMhE,EAAQ0R,kBAE1B,CAAC7C,EAAUkC,QAERY,EAAoBtR,EAAM+C,aAC9B,SAACmC,EAAIpF,GACH0O,EAAS,CAAE7K,KAAMhE,EAAQ2R,kBAAmBpM,KAAIpF,YAElD,CAAC0O,IAGG+C,EAAwBvR,EAAM+C,aAClC,mBAASyL,EAAS,CAAE7K,KAAMhE,EAAQ4R,sBAAuBzR,YACzD,CAAC0O,IAGGnF,EAAerJ,EAAMwS,SAAQ,kBAC7BJ,EACKpJ,EAAWC,EAAM,CAAEC,oBAAmBC,WAAUC,kBAGlDH,IACN,CAACmJ,EAAsBnJ,EAAMC,EAAmBC,EAAUC,IAEvDqJ,EAAgBzS,EAAMwS,SAAQ,kBAmCtC,SAA2BrJ,OACrBuJ,EAAW,SAEfvO,OAAO4N,KAAK5I,GAAUtH,SAAQ,gBACtB8Q,EAAUzN,EAAGI,MAAM,KACzBoN,EAAWrC,KAAKE,IAAImC,EAAUC,EAAQvM,WAGjCsM,EART,CAnC8DvJ,KAAW,CACrEA,IAGIwF,EAAcjM,EAAae,GAE3BgO,EAAgC1Q,EACpC0N,IAAWgD,8BACX,CAAEhO,SAAUkL,MAGdxK,OAAO+C,OAAOzD,EAAU,CACtBmP,gBAAiB3J,EACjBI,eACAJ,KAAMI,EACNoJ,gBACAX,oBACAR,oBACAC,wBACAE,kCAIJ,SAASxF,GAAWjF,SAAmByH,IAAZhL,SAAYgL,SAAYhL,aACjDuD,EAAIsK,kBAAoB,mBAAO7N,EAAS6N,kBAAkBtK,EAAI9B,GAAI0B,IAElEI,EAAI2K,0BAA4B5Q,EAC9B0N,IAAWkD,0BACX,CACElO,WACAuD,YCnNOgD,GAAO,SAACf,EAAM4J,EAAKC,UACvB7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,gBACR6K,EAAW/L,EAAIoK,OAAOlM,UACrBoB,OAAOyM,GACXC,cACAxO,SAAS8B,OAAOwM,GAAaE,sBAMtChJ,GAAKE,WAAa,mBAAQzE,GAEnB,IAAMwN,GAAY,SAAChK,EAAM4J,EAAKC,UAC5B7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,gBACR6K,EAAW/L,EAAIoK,OAAOlM,mBACrB6N,GACHzM,OAAOyM,GAAUC,gBAAkB1M,OAAOwM,GAAaE,qBAMjEC,GAAU/I,WAAa,mBAAQzE,GAExB,IAAMyN,GAAgB,SAACjK,EAAM4J,EAAKC,UAChC7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,gBACR6K,EAAW/L,EAAIoK,OAAOlM,mBACrB6N,GACHzM,OAAOyM,KAAczM,OAAOwM,UAMtCI,GAAchJ,WAAa,mBAAQzE,GAE5B,IAAMjB,GAAW,SAACyE,EAAM4J,EAAKC,UAC3B7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,mBACGlB,EAAIoK,OAAOlM,GACZV,SAASsO,UAK/BtO,GAAS0F,WAAa,mBAAQzE,IAAQA,EAAIW,QAEnC,IAAM+M,GAAc,SAAClK,EAAM4J,EAAKC,UAC9B7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,gBACR6K,EAAW/L,EAAIoK,OAAOlM,UAE1B6N,GACAA,EAAS3M,QACT0M,EAAYM,OAAM,mBAAOL,EAASvO,SAASiB,aAMnD0N,GAAYjJ,WAAa,mBAAQzE,IAAQA,EAAIW,QAEtC,IAAMiN,GAAe,SAACpK,EAAM4J,EAAKC,UAC/B7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,gBACR6K,EAAW/L,EAAIoK,OAAOlM,UAE1B6N,GACAA,EAAS3M,QACT0M,EAAY5K,MAAK,mBAAO6K,EAASvO,SAASiB,aAMlD4N,GAAanJ,WAAa,mBAAQzE,IAAQA,EAAIW,QAEvC,IAAMkN,GAAgB,SAACrK,EAAM4J,EAAKC,UAChC7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,gBACR6K,EAAW/L,EAAIoK,OAAOlM,UACrB4N,EAAYtO,SAASuO,UAKlCO,GAAcpJ,WAAa,mBAAQzE,IAAQA,EAAIW,QAExC,IAAMmN,GAAQ,SAACtK,EAAM4J,EAAKC,UACxB7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,mBACGlB,EAAIoK,OAAOlM,KACR4N,SAK1BS,GAAMrJ,WAAa,4BAAczE,GAE1B,IAAM+N,GAAS,SAACvK,EAAM4J,EAAKC,UACzB7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,mBACGlB,EAAIoK,OAAOlM,IAET4N,SAKzBU,GAAOtJ,WAAa,mBAAc,MAAPzE,GAEpB,IAAMgO,GAAU,SAACxK,EAAM4J,EAAKC,SAChBA,GAAe,GAA3BxC,OAAKC,WAEVD,EAAqB,iBAARA,EAAmBA,SAChCC,EAAqB,iBAARA,EAAmBA,EAAMmD,KAEvB,KACPC,EAAOrD,EACbA,EAAMC,EACNA,EAAMoD,SAGD1K,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,gBACR6K,EAAW/L,EAAIoK,OAAOlM,UACrB6N,GAAYzC,GAAOyC,GAAYxC,SAK5CkD,GAAQvJ,WAAa,mBAClBzE,GAA0B,iBAAXA,EAAI,IAAqC,iBAAXA,EAAI,2KCtHpD9F,EAAQiU,aAAe,eACvBjU,EAAQkU,UAAY,YACpBlU,EAAQmU,cAAgB,oBAEXC,GAAa,YACxB/S,EAAMoK,cAAc/E,KAAK+G,IACzBpM,EAAMgL,YAAY3F,KAAK2F,KAKzB,SAASoB,GAAQC,EAAOU,EAAQC,EAAevK,MACzCsK,EAAOpK,OAAShE,EAAQC,eAExBoU,QAAS,IACN3G,MAIHU,EAAOpK,OAAShE,EAAQiU,yBAErBvG,GACH2G,QAASvQ,EAASwK,aAAa+F,SAAW,QAI1CjG,EAAOpK,OAAShE,EAAQkU,UAAW,KAC7B3F,EAA0BH,EAA1BG,SAAU4E,EAAgB/E,EAAhB+E,YACVtL,EAA6C/D,EAA7C+D,WAAyBsC,EAAoBrG,EAAjCsG,YAEdrG,EAAS8D,EAAWyM,MAAK,mBAAK1N,EAAErB,KAAOgJ,SAExCxK,QACG,IAAIK,uDACyCmK,OAI/CgG,EAAetK,EACnBlG,EAAOmG,OACPC,GAAmB,GACnBC,IAGIoK,EAAiB9G,EAAM2G,QAAQC,MAAK,mBAAK1N,EAAErB,KAAOgJ,KAElDkG,EAAY7R,EAChBuQ,EACAqB,GAAkBA,EAAerU,cAI/BmK,EAAuBiK,EAAahK,WAAYkK,EAAW1Q,QAExD2J,GACH2G,QAAS3G,EAAM2G,QAAQnK,QAAO,mBAAKtD,EAAErB,KAAOgJ,YAMzCb,EAFH8G,GAGAH,QAAS3G,EAAM2G,QAAQlP,KAAI,mBACrByB,EAAErB,KAAOgJ,EACJ,CAAEhJ,GAAIgJ,EAAUpO,MAAOsU,GAEzB7N,OAOXyN,kBAAa3G,EAAM2G,SAAS,CAAE9O,GAAIgJ,EAAUpO,MAAOsU,UAInDrG,EAAOpK,OAAShE,EAAQmU,cAAe,KACjCE,EAAYjG,EAAZiG,QACAxM,EAA6C/D,EAA7C+D,WAAyBsC,EAAoBrG,EAAjCsG,wBAGfsD,GAEH2G,QAASzR,EAAiByR,EAAS3G,EAAM2G,SAASnK,QAAO,gBACjDnG,EAAS8D,EAAWyM,MAAK,mBAAK1N,EAAErB,KAAO2E,EAAO3E,aAQlD+E,EAPmBL,EACnBlG,EAAOmG,OACPC,GAAmB,GACnBC,IAIoCG,WAAYL,EAAO/J,MAAO4D,SAUxE,SAASsI,GAAYvI,OAEjBiN,EAYEjN,EAZFiN,KACAzH,EAWExF,EAXFwF,KACA0H,EAUElN,EAVFkN,SACAC,EASEnN,EATFmN,SACApJ,EAQE/D,EARF+D,WACasC,EAOXrG,EAPFsG,YACAsK,EAME5Q,EANF4Q,gBAME5Q,EALF6Q,iCACAC,EAIE9Q,EAJF8Q,eACSP,EAGPvQ,EAHF4J,MAAS2G,QACTxF,EAEE/K,EAFF+K,WAEE/K,EADF+Q,iCAGIX,EAAY7T,EAAM+C,aACtB,SAACmL,EAAU4E,GACTtE,EAAS,CAAE7K,KAAMhE,EAAQkU,UAAW3F,WAAU4E,kBAEhD,CAACtE,IAGGsF,EAAgB9T,EAAM+C,aAC1B,YACEyL,EAAS,CACP7K,KAAMhE,EAAQmU,cACdE,cAGJ,CAACxF,IAGHhH,EAAW3F,SAAQ,gBAEfqD,EAIExB,EAJFwB,GACAC,EAGEzB,EAHFyB,SACkBsP,EAEhB/Q,EAFF4Q,iBACgBI,EACdhR,EADF6Q,eAIF7Q,EAAOiR,UAAYxP,EACfsD,OACEiM,WAAwCE,IACxCL,WAAkCK,GAGpCnM,EAAgBgM,EAAwBH,MAG5C5Q,EAAOmQ,UAAY,mBAAOA,EAAUnQ,EAAOwB,GAAIO,QAIzCoP,EAAQb,EAAQC,MAAK,mBAAK1N,EAAErB,KAAOA,KACzCxB,EAAOoP,YAAc+B,GAASA,EAAM/U,eAOlCE,EAAMwS,SAAQ,cACZ6B,IAAkBL,EAAQ5N,aACrB,CAAC6C,EAAM0H,EAAUC,OAGpBkE,EAAmB,GACnBC,EAAmB,SAiElB,CA9DY,SAAbC,EAAc/L,EAAMpE,kBAAQ,OAC5BoQ,EAAehM,SAEnBgM,EAAejB,EAAQtT,QACrB,SAACwU,SAAqBhH,IAAJhJ,GAAqB4N,IAAPhT,MAExB4D,EAAS8D,EAAWyM,MAAK,mBAAK1N,EAAErB,KAAOgJ,SAExCxK,SACIwR,EAGK,IAAVrQ,IACFnB,EAAOyR,gBAAkBD,OAGrBhB,EAAetK,EACnBlG,EAAOmG,OACPC,GAAmB,GACnBC,WAGGmK,GASLxQ,EAAOuR,aAAef,EACpBgB,EACA,CAAChH,GACD4E,GAGKpP,EAAOuR,eAdZpR,QAAQuR,uEAC4D1R,EAAOwB,QAEpEgQ,KAaXjM,IAOWpH,SAAQ,YACnBiT,EAAiBzO,KAAKW,GACtB+N,EAAiB/N,EAAI9B,IAAM8B,EACtBA,EAAI2C,UAIT3C,EAAI2C,QACF3C,EAAI2C,SAAW3C,EAAI2C,QAAQvD,OAAS,EAChC4O,EAAWhO,EAAI2C,QAAS9E,EAAQ,GAChCmC,EAAI2C,YAGLsL,EA3DU,CA8DAhM,GAAO6L,EAAkBC,KAC3C,CACDV,EACAL,EACA/K,EACA0H,EACAC,EACApJ,EACAsC,IAlFAmL,OACAH,OACAC,OAmFF/U,EAAMwS,SAAQ,WAGehL,EAAWqC,QACpC,mBAAWmK,EAAQC,MAAK,mBAAK1N,EAAErB,KAAOxB,EAAOwB,SAK5BrD,SAAQ,YACzB6B,EAAOyR,gBAAkBF,EACzBvR,EAAOuR,aAAeA,OAEvB,CAACA,EAAcjB,EAASxM,QAErB6N,EAAsB3S,EAAa8R,GAEzCpR,GAAuB,WACjBiS,KACF7G,EAAS,CAAE7K,KAAMhE,EAAQiU,iBAE1B,CAACpF,EAAU6F,EAAgB,KAAO3D,IAErCvM,OAAO+C,OAAOzD,EAAU,CACtB0R,gBAAiBlM,EACjBqM,oBAAqB3E,EACrB4E,oBAAqB3E,EACrBqE,eACAH,mBACAC,mBACA9L,KAAMgM,EACNtE,SAAUmE,EACVlE,SAAUmE,EACVlB,YACAC,kBAjRJC,GAAW7R,WAAa,aCTxBvC,EAAQ6V,kBAAoB,oBAC5B7V,EAAQ8V,gBAAkB,sBAEbC,GAAkB,YAC7B1U,EAAMoK,cAAc/E,KAAK+G,IACzBpM,EAAMgL,YAAY3F,KAAK2F,KAKzB,SAASoB,GAAQC,EAAOU,EAAQC,EAAevK,MACzCsK,EAAOpK,OAAShE,EAAQ6V,8BAErBnI,GACHsI,aAAclS,EAASwK,aAAa0H,uBAAgBf,GAIpD7G,EAAOpK,OAAShE,EAAQ8V,gBAAiB,KACnC3C,EAAgB/E,EAAhB+E,YACAhJ,EAAoBrG,EAApBqG,gBAEFoK,EAAetK,EACnBnG,EAASkS,aACT7L,GAAmB,GACnBC,IAGIqK,EAAY7R,EAAiBuQ,EAAazF,EAAMsI,qBAGlD1L,EAAuBiK,EAAahK,WAAYkK,IACI/G,EAA9CsI,eAA8CtI,0BAKnDA,GACHsI,aAAcvB,KAKpB,SAASpI,GAAYvI,OAEjBiN,EAYEjN,EAZFiN,KACAzH,EAWExF,EAXFwF,KACA0H,EAUElN,EAVFkN,SACAC,EASEnN,EATFmN,SACApJ,EAQE/D,EARF+D,WACasC,EAOXrG,EAPFsG,YACA4L,EAMElS,EANFkS,aACAC,EAKEnS,EALFmS,mBACuBC,EAIrBpS,EAJF4J,MAASsI,aACTnH,EAGE/K,EAHF+K,WAGE/K,EAFFqS,sCACAC,EACEtS,EADFsS,oBAGIN,EAAkBzV,EAAM+C,aAC5B,YACEyL,EAAS,CAAE7K,KAAMhE,EAAQ8V,gBAAiB3C,kBAE5C,CAACtE,MAYCxO,EAAMwS,SAAQ,cACZoD,YAA6BC,QACxB,CAAC5M,EAAM0H,EAAUC,OAGpBkE,EAAmB,GACnBC,EAAmB,GAEnBb,EAAetK,EACnB+L,EACA7L,GAAmB,GACnBC,QAGGmK,SACHrQ,QAAQuR,sDACDnM,EAGTzB,EAAW3F,SAAQ,gBACYmU,EAA8BtS,EAAnDqS,oBAERrS,EAAOiR,UAAYlM,OACjBuN,WAA6CpB,IAC7CmB,WAAuCnB,MACvC,IAIEqB,EAAoBzO,EAAWqC,QAAO,uBAAKqM,EAAEvB,mBAuB5C,CApBY,SAAbK,EAAa,UACjBC,EAAef,EACbe,EACAgB,EAAkBnR,KAAI,mBAAKyB,EAAErB,MAC7B2Q,IAGWhU,SAAQ,YACnBiT,EAAiBzO,KAAKW,GACtB+N,EAAiB/N,EAAI9B,IAAM8B,EAE3BA,EAAI2C,QACF3C,EAAI2C,SAAW3C,EAAI2C,QAAQvD,OACvB4O,EAAWhO,EAAI2C,SACf3C,EAAI2C,WAGLsL,EAjBU,CAoBAhM,GAAO6L,EAAkBC,KAC3C,CACDa,EACAC,EACAF,EACA7L,EACAtC,EACAyB,EACA0H,EACAC,EACAmF,IAjEAI,OACAC,OACAC,OAkEIC,EAA2B5T,EAAaoT,GAE9C1S,GAAuB,WACjBkT,KACF9H,EAAS,CAAE7K,KAAMhE,EAAQ6V,sBAE1B,CAAChH,EAAUoH,EAAqB,KAAOlF,IAE1CvM,OAAO+C,OAAOzD,EAAU,CACtB8S,sBAAuBtN,EACvBuN,0BAA2B7F,EAC3B8F,0BAA2B7F,EAC3BuF,qBACAC,yBACAC,yBACApN,KAAMkN,EACNxF,SAAUyF,EACVxF,SAAUyF,EACVZ,kBACAM,wBCjLG,SAASW,GAAItF,EAAQuF,UAGnBA,EAAiBjW,QACtB,SAACgW,EAAK9V,UAAS8V,GAAuB,iBAAT9V,EAAoBA,EAAO,KACxD,GDqBJ8U,GAAgBxT,WAAa,kECjBtB,SAAakP,OACdd,EAAMc,EAAO,IAAM,SAEvBA,EAAOvP,SAAQ,YACQ,iBAAV/B,IACTwQ,EAAMD,KAAKC,IAAIA,EAAKxQ,OAIjBwQ,OAGF,SAAac,OACdb,EAAMa,EAAO,IAAM,SAEvBA,EAAOvP,SAAQ,YACQ,iBAAV/B,IACTyQ,EAAMF,KAAKE,IAAIA,EAAKzQ,OAIjByQ,UAGF,SAAgBa,OACjBd,EAAMc,EAAO,IAAM,EACnBb,EAAMa,EAAO,IAAM,SAEvBA,EAAOvP,SAAQ,YACQ,iBAAV/B,IACTwQ,EAAMD,KAAKC,IAAIA,EAAKxQ,GACpByQ,EAAMF,KAAKE,IAAIA,EAAKzQ,OAIdwQ,OAAQC,WAGb,SAAiBa,UACfsF,GAAI,EAAMtF,GAAUA,EAAOhL,eAG7B,SAAgBgL,OAChBA,EAAOhL,cACH,SAGHwQ,EAAMvG,KAAKwG,MAAMzF,EAAOhL,OAAS,GACjC0Q,EAAO,UAAI1F,GAAQ2F,MAAK,SAACnO,EAAGoO,UAAMpO,EAAIoO,YACrC5F,EAAOhL,OAAS,GAAM,EAAI0Q,EAAKF,IAAQE,EAAKF,EAAM,GAAKE,EAAKF,IAAQ,UAGtE,SAAgBxF,UACd9P,MAAM2V,KAAK,IAAIC,IAAI9F,GAAQA,uBAG7B,SAAqBA,UACnB,IAAI8F,IAAI9F,GAAQ+F,YAGlB,SAAe/F,UACbA,EAAOhL,UCxDVgR,GAAa,GACbC,GAAc,GAGpB1X,EAAQ2X,aAAe,eACvB3X,EAAQ4X,WAAa,aACrB5X,EAAQ6X,cAAgB,oBAEXC,GAAa,YACxBzW,EAAM0W,sBAAwB,CAACC,IAC/B3W,EAAMoK,cAAc/E,KAAK+G,IACzBpM,EAAM6K,mBAAmBxF,MAAK,SAAC/C,SAAQG,6BAClCH,GACHG,EAAS4J,MAAMuK,aAEjB5W,EAAM4K,eAAevF,KAAKuF,IAC1B5K,EAAMgL,YAAY3F,KAAK2F,IACvBhL,EAAMiL,WAAW5F,KAAK4F,KAGxBwL,GAAWvV,WAAa,aAExB,IAAMyV,GAA+B,SAAChX,SAASoP,iBAAa,CAC1DpP,EACA,CACEkR,QAAS9B,EAAO8H,WACZ,SAAA9Q,GACEA,EAAE+Q,UACF/H,EAAOyH,wBAGb3W,MAAO,CACLgG,OAAQkJ,EAAO8H,WAAa,kBAE9BjK,MAAO,oBAKX,SAASR,GAAQC,EAAOU,EAAQC,EAAevK,MACzCsK,EAAOpK,OAAShE,EAAQC,eAExBgY,QAAS,IACNvK,MAIHU,EAAOpK,OAAShE,EAAQ2X,yBAErBjK,GACHuK,QAASnU,EAASwK,aAAa2J,SAAW,QAI1C7J,EAAOpK,OAAShE,EAAQ4X,uBAGrBlK,GACHuK,QAHgB7J,EAAVjO,WAONiO,EAAOpK,OAAShE,EAAQ6X,cAAe,KACjCtJ,EAAgCH,EAAhCG,SAAiBqJ,EAAexJ,EAAtBjO,MAEZiY,WACGR,EACHA,GACClK,EAAMuK,QAAQpT,SAAS0J,eAIvBb,EAFH0K,GAGAH,kBAAavK,EAAMuK,SAAS1J,MAM9B0J,QAASvK,EAAMuK,QAAQ/N,QAAO,mBAAKtD,IAAM2H,QAK/C,SAAStC,GACPjH,SAGaiT,IADXnU,SACE4J,MAASuK,QAOPI,EAAiBJ,EACpB9S,KAAI,mBAAKH,EAAQsP,MAAK,mBAAOgE,EAAI/S,KAAOgT,QACxCrO,OAAO0I,SAEJ4F,EAAoBxT,EAAQkF,QAAO,mBAAQ+N,EAAQpT,SAASyT,EAAI/S,cAEtEP,YAAcqT,EAAmBG,IAEzBtW,SAAQ,YACd6B,EAAO0U,UAAYR,EAAQpT,SAASd,EAAOwB,IAC3CxB,EAAO2U,aAAeT,EAAQU,QAAQ5U,EAAOwB,OAGxCP,EAGT,IAAM4T,GAA0B,GAEhC,SAASvM,GAAYvI,OAEjBiN,EAgBEjN,EAhBFiN,KACAzH,EAeExF,EAfFwF,KACA0H,EAcElN,EAdFkN,SACAC,EAaEnN,EAbFmN,SACApJ,EAYE/D,EAZF+D,WACA+G,EAWE9K,EAXF8K,cAWE9K,EAVF+U,uBAAYC,KACZC,EASEjV,EATFiV,gBASEjV,EARFkV,aAAcC,aAAmBL,KACjCvW,EAOEyB,EAPFzB,QACS4V,EAMPnU,EANF4J,MAASuK,QACTpJ,EAKE/K,EALF+K,WAKE/K,EAJFoV,iCACAC,EAGErV,EAHFqV,eACAC,EAEEtV,EAFFsV,kBACAtK,EACEhL,EADFgL,SAGF1M,EAAkBC,EAAS,CAAC,iBAAkB,cAAe,kBAEvD2M,EAAcjM,EAAae,GAEjC+D,EAAW3F,SAAQ,gBAEfsD,EAGEzB,EAHFyB,SACgB6T,EAEdtV,EAFFuV,eACgBC,EACdxV,EADFoV,eAGFpV,EAAOmU,WAAa1S,EAChBsD,EACE/E,EAAOmU,gBACPqB,WAAwCtE,IACxCkE,WAAkClE,GAGpCnM,EACE/E,EAAOmU,WACPmB,EACAD,MAIFrV,EAAOmU,aACTnU,EAAO8T,cAAgB,kBAAM/T,EAAS+T,cAAc9T,EAAOwB,MAG7DxB,EAAOyV,WAAazV,EAAOyV,YAAczV,EAAOxD,YAG5CsX,EAAgBxX,EAAM+C,aAC1B,SAACmL,EAAUpO,GACT0O,EAAS,CAAE7K,KAAMhE,EAAQ6X,cAAetJ,WAAUpO,YAEpD,CAAC0O,IAGG+I,EAAavX,EAAM+C,aACvB,YACEyL,EAAS,CAAE7K,KAAMhE,EAAQ4X,WAAYzX,YAEvC,CAAC0O,IAGHD,EAAY1M,SAAQ,YAClBkO,EAAO2H,sBAAwB3W,EAC7B0N,IAAWiJ,sBACX,CAAEjU,SAAUkL,IAAeoB,oBAY3B/P,EAAMwS,SAAQ,cACZkG,IAAkBd,EAAQxR,aACrB,CACL6C,EACA0H,EACAC,EACAwG,GACAC,GACA1G,EACAC,OAKEwI,EAAkBxB,EAAQ/N,QAAO,mBACrCrC,EAAWyM,MAAK,mBAAOgE,EAAI/S,KAAOgT,QAiEhCmB,EAAkB,GAChBC,EAAkB,GAClBC,EAAsB,GACtBC,EAAsB,GACtBC,EAAqB,GACrBC,EAAqB,GA6DrBC,EA1DqB,SAArBC,EAAsB3Q,EAAMpE,EAAWgV,eAAXhV,MAAQ,GAEpCA,IAAUuU,EAAgBhT,cACrB6C,MAGHiF,EAAWkL,EAAgBvU,GAG7BiV,EAAetB,EAAUvP,EAAMiF,UAGL/J,OAAO4V,QAAQD,GAAchV,KACzD,WAA4B+F,OAA1BmP,OAAYL,OACRzU,EAAQgJ,MAAY8L,EAIlBrQ,EAAUiQ,EAAmBD,EAAa9U,EAAQ,EAHxDK,EAAK2U,EAAcA,MAAY3U,EAAOA,GAMhC+U,EAAWpV,EACbI,EAAU0U,EAAa,YACvBA,EAEEvI,EA7FkB,SAAC6I,EAAUN,EAAa9U,OAC9CuM,EAAS,UAEf5J,EAAW3F,SAAQ,eAEbuX,EAAgB5U,SAASd,EAAOwB,IAClCkM,EAAO1N,EAAOwB,IAAMyU,EAAY,GAC5BA,EAAY,GAAGvI,OAAO1N,EAAOwB,IAC7B,cAKFgV,EAC0B,mBAArBxW,EAAOyW,UACVzW,EAAOyW,UACPvB,EAAiBlV,EAAOyW,YACxBxB,GAAajV,EAAOyW,cAEtBD,EAAa,KAETE,EAAgBT,EAAY7U,KAAI,mBAAOkC,EAAIoK,OAAO1N,EAAOwB,OAGzDmV,EAAaJ,EAASnV,KAAI,gBAC1BwV,EAActT,EAAIoK,OAAO1N,EAAOwB,QAE/BL,GAASnB,EAAO6W,eAAgB,KAC7BC,EAC6B,mBAA1B9W,EAAO6W,eACV7W,EAAO6W,eACP3B,EAAiBlV,EAAO6W,iBACxB5B,GAAajV,EAAO6W,oBAErBC,QACH3W,QAAQC,KAAK,CAAEJ,WACT,IAAIK,mFAKZuW,EAAcE,EAAiBF,EAAatT,EAAKtD,UAE5C4W,KAGTlJ,EAAO1N,EAAOwB,IAAMgV,EAAYG,EAAYD,OACvC,IAAI1W,EAAOyW,gBAChBtW,QAAQC,KAAK,CAAEJ,WACT,IAAIK,8EAIVqN,EAAO1N,EAAOwB,IAAM,UAIjBkM,EAzDqB,CA6Fa6I,EAAUN,EAAa9U,GAEtDmC,EAAM,CACV9B,KACAkT,aACAqC,UAAWvM,EACX8L,aACA5I,SACAzH,UACAsQ,WACApV,QACAgG,gBAGFlB,EAAQ9H,SAAQ,YACdwX,EAAgBhT,KAAKqU,GACrBpB,EAAgBoB,EAAOxV,IAAMwV,EACzBA,EAAOtC,WACTmB,EAAoBlT,KAAKqU,GACzBlB,EAAoBkB,EAAOxV,IAAMwV,IAEjCjB,EAAmBpT,KAAKqU,GACxBhB,EAAmBgB,EAAOxV,IAAMwV,MAI7B1T,KAnDc,CA0DYiC,UAEvC0Q,EAAY9X,SAAQ,YAClBwX,EAAgBhT,KAAKqU,GACrBpB,EAAgBoB,EAAOxV,IAAMwV,EACzBA,EAAOtC,WACTmB,EAAoBlT,KAAKqU,GACzBlB,EAAoBkB,EAAOxV,IAAMwV,IAEjCjB,EAAmBpT,KAAKqU,GACxBhB,EAAmBgB,EAAOxV,IAAMwV,MAK7B,CACLf,EACAN,EACAC,EACAC,EACAC,EACAC,EACAC,KAED,CACDhB,EACAd,EACA3O,EACA0H,EACAC,EACApJ,EACAoR,EACAJ,IAzLAmB,OACAN,OACAC,OACAC,OACAC,OACAC,OACAC,OAsLIiB,EAAsBjY,EAAamW,GAEzCzV,GAAuB,WACjBuX,KACFnM,EAAS,CAAE7K,KAAMhE,EAAQ2X,iBAE1B,CAAC9I,EAAUkK,EAAgB,KAAOhI,IAErCvM,OAAO+C,OAAOzD,EAAU,CACtBmX,eAAgB3R,EAChB4R,kBAAmBlK,EACnBmK,mBAAoBlK,EACpB+I,cACAN,kBACAC,kBACAC,sBACAC,sBACAC,qBACAC,qBACAzQ,KAAM0Q,EACNhJ,SAAU0I,EACVzI,SAAU0I,EACV9B,gBACAD,eAIJ,SAAStL,GAAWjF,GAClBA,EAAI+T,SAASlZ,SAAQ,kBAEnBoJ,EAAKmN,UAAYnN,EAAKvH,OAAO0U,WAAanN,EAAKvH,OAAOwB,KAAO8B,EAAIyT,UAEjExP,EAAK+P,eAAiB/P,EAAKmN,WAAanN,EAAKvH,OAAO0U,UAEpDnN,EAAKgQ,cACFhQ,EAAKmN,YAAcnN,EAAK+P,yBAAiBhU,EAAI2C,gBAAJ3C,EAAaZ,WAItD,SAASqS,GAAiBxP,EAAMiF,UAC9BjF,EAAKvI,QAAO,SAACS,EAAM6F,EAAKb,OAGvB+U,KAAYlU,EAAIoK,OAAOlD,UAC7B/M,EAAK+Z,GAAU5Z,MAAMC,QAAQJ,EAAK+Z,IAAW/Z,EAAK+Z,GAAU,GAC5D/Z,EAAK+Z,GAAQ7U,KAAKW,GACX7F,IACN,ICpbL,IAAMga,GAAsB,aAmH5B,SAASC,GAAaxS,EAAGoO,UAChBpO,IAAMoO,EAAI,EAAIpO,EAAIoO,EAAI,GAAK,EAGpC,SAASqE,GAAuBC,EAAMC,EAAMrN,SACnC,CAACoN,EAAKlK,OAAOlD,GAAWqN,EAAKnK,OAAOlD,IAG7C,SAASsN,GAAS5S,SACC,iBAANA,EACL6S,MAAM7S,IAAMA,IAAM8K,KAAY9K,SACzB,GAEFtC,OAAOsC,GAEC,iBAANA,EACFA,EAEF,qDAhImB,SAAC8S,EAAMC,EAAMzN,SAC1BmN,GAAuBK,EAAMC,EAAMzN,GAA3CtF,OAAGoO,WAGRpO,EAAI4S,GAAS5S,GACboO,EAAIwE,GAASxE,GAIbpO,EAAIA,EAAEtD,MAAM6V,IAAqBtR,OAAO0I,SACxCyE,EAAIA,EAAE1R,MAAM6V,IAAqBtR,OAAO0I,SAGjC3J,EAAExC,QAAU4Q,EAAE5Q,QAAQ,KACvBwV,EAAKhT,EAAEiT,QACPC,EAAK9E,EAAE6E,QAELE,EAAKC,SAASJ,EAAI,IAClBK,EAAKD,SAASF,EAAI,IAElBI,EAAQ,CAACH,EAAIE,GAAIlF,UAGnB0E,MAAMS,EAAM,QACVN,EAAKE,SACA,KAELA,EAAKF,SACC,UAMRH,MAAMS,EAAM,WACPT,MAAMM,IAAO,EAAI,KAItBA,EAAKE,SACA,KAELA,EAAKF,SACC,UAILnT,EAAExC,OAAS4Q,EAAE5Q,iBAEf,SAAkBsV,EAAMC,EAAMzN,SACtBmN,GAAuBK,EAAMC,EAAMzN,GAA3CtF,OAAGoO,cAKDoE,GAHPxS,EAAIA,EAAEuT,UACNnF,EAAIA,EAAEmF,kBAKD,SAAeT,EAAMC,EAAMzN,SACnBmN,GAAuBK,EAAMC,EAAMzN,UAEzCkN,sBAGF,SAAgBM,EAAMC,EAAMzN,SACpBmN,GAAuBK,EAAMC,EAAMzN,GAA3CtF,OAAGoO,WAERpO,EAAIA,EAAEtD,MAAM,IAAIuE,OAAO0I,SACvByE,EAAIA,EAAE1R,MAAM,IAAIuE,OAAO0I,SAEhB3J,EAAExC,QAAU4Q,EAAE5Q,QAAQ,KACvBwV,EAAKhT,EAAEiT,QACPC,EAAK9E,EAAE6E,QAEPO,EAASR,EAAG5I,cACZqJ,EAASP,EAAG9I,iBAGZoJ,EAASC,SACJ,KAELA,EAASD,SACH,KAGNR,EAAKE,SACA,KAELA,EAAKF,SACC,SAKLhT,EAAExC,OAAS4Q,EAAE5Q,eAGf,SAAgBsV,EAAMC,EAAMzN,SACpBmN,GAAuBK,EAAMC,EAAMzN,GAA3CtF,OAAGoO,OAEFsF,EAAoB,mBAKnBlB,GAHPxS,EAAItI,OAAOgG,OAAOsC,GAAGpC,QAAQ8V,EAAmB,KAChDtF,EAAI1W,OAAOgG,OAAO0Q,GAAGxQ,QAAQ8V,EAAmB,SC5FlD3c,EAAQ4c,YAAc,cACtB5c,EAAQ6c,UAAY,YACpB7c,EAAQ8c,aAAe,eACvB9c,EAAQ+c,YAAc,cAEtBzc,EAAc0c,SAAW,eACzB1c,EAAc2c,iBAAgB,IAEjBC,GAAY,YACvB7b,EAAM8b,qBAAuB,CAACC,IAC9B/b,EAAMoK,cAAc/E,KAAK+G,IACzBpM,EAAMgL,YAAY3F,KAAK2F,KAGzB6Q,GAAU3a,WAAa,YAEvB,IAAM6a,GAA8B,SAACpc,SAAS8C,aAAUC,aACPD,EAAvCuZ,8BAAmB,SAAAjW,GAAA,OAAKA,EAAEkW,kBAE3B,CACLtc,EACA,CACEkR,QAASnO,EAAOwZ,QACZ,SAAAnW,GACEA,EAAE+Q,UACFpU,EAAO+Y,qBAEJhZ,EAAS0Z,kBAAoBH,EAAiBjW,YAIvDlG,MAAO,CACLgG,OAAQnD,EAAOwZ,QAAU,kBAE3BtP,MAAOlK,EAAOwZ,QAAU,0BAM9B,SAAS9P,GAAQC,EAAOU,EAAQC,EAAevK,MACzCsK,EAAOpK,OAAShE,EAAQC,eAExBwd,OAAQ,IACL/P,MAIHU,EAAOpK,OAAShE,EAAQ4c,wBAErBlP,GACH+P,OAAQ3Z,EAASwK,aAAamP,QAAU,QAIxCrP,EAAOpK,OAAShE,EAAQ+c,wBAKrBrP,GACH+P,OALiB/P,EAAX+P,OACiBvT,QAAO,mBAAKtD,EAAErB,KAAO6I,EAAOG,iBAQnDH,EAAOpK,OAAShE,EAAQ6c,sBAGrBnP,GACH+P,OAHiBrP,EAAXqP,YAONrP,EAAOpK,OAAShE,EAAQ8c,aAAc,KAyBpCY,EAxBInP,EAA0BH,EAA1BG,SAAUoP,EAAgBvP,EAAhBuP,KAAMC,EAAUxP,EAAVwP,MAGtB/V,EAKE/D,EALF+D,WACA2V,EAIE1Z,EAJF0Z,iBACAK,EAGE/Z,EAHF+Z,kBACAC,EAEEha,EAFFga,qBAEEha,EADFia,kCAAuBpd,OAAOC,mBAGxB6c,EAAW/P,EAAX+P,OAIAR,EADOpV,EAAWyM,MAAK,mBAAK1N,EAAErB,KAAOgJ,KACrC0O,cAGFe,EAAiBP,EAAOnJ,MAAK,mBAAK1N,EAAErB,KAAOgJ,KAC3C0P,EAAgBR,EAAOhb,WAAU,mBAAKmE,EAAErB,KAAOgJ,KAC/C2P,EAAiB,MAAOP,EAE1BQ,EAAY,SAwBC,YAjBbT,GAFCF,GAAoBI,EACnBI,EACW,SAEA,MAIXC,IAAkBR,EAAOhX,OAAS,GAAuB,IAAlBgX,EAAOhX,OACnC,UACJuX,EACI,SAEA,YAOdH,GACAK,GACAN,GAASE,KACRE,GACAA,EAAeL,OACdV,IACCe,EAAeL,MAAQV,KAE3BS,EAAa,UAGI,YAAfA,EACFS,EAAY,CACV,CACE5Y,GAAIgJ,EACJoP,KAAMO,EAAiBP,EAAOV,IAGV,QAAfS,GACTS,YACKV,GACH,CACElY,GAAIgJ,EACJoP,KAAMO,EAAiBP,EAAOV,MAIxBmB,OAAO,EAAGD,EAAU1X,OAASsX,GACf,WAAfL,EAETS,EAAYV,EAAOtY,KAAI,mBACjByB,EAAErB,KAAOgJ,OAEN3H,GACH+W,KAAMO,EAAiBP,GAAQK,EAAeL,OAG3C/W,KAEe,WAAf8W,IACTS,EAAYV,EAAOvT,QAAO,mBAAKtD,EAAErB,KAAOgJ,WAIrCb,GACH+P,OAAQU,KAKd,SAAS9R,GAAYvI,OAEjBiN,EAeEjN,EAfFiN,KACAzH,EAcExF,EAdFwF,KACA0H,EAaElN,EAbFkN,SACAnJ,EAYE/D,EAZF+D,aAYE/D,EAXFua,uBAAYC,KACDC,EAUTza,EAVF0a,UACAC,EASE3a,EATF2a,aACAC,EAQE5a,EARF4a,eACAC,EAOE7a,EAPF6a,cACA/P,EAME9K,EANF8K,YACS6O,EAKP3Z,EALF4J,MAAS+P,OACT5O,EAIE/K,EAJF+K,SACAxM,EAGEyB,EAHFzB,QACAyM,EAEEhL,EAFFgL,WAEEhL,EADF8a,gCAGFxc,EACEC,EACA,CAAC,aAAc,kBAAmB,aAAc,mBAChD,iBAGIwa,EAAYxc,EAAM+C,aACtB,YACEyL,EAAS,CAAE7K,KAAMhE,EAAQ6c,UAAWY,aAEtC,CAAC5O,IAIGiO,EAAezc,EAAM+C,aACzB,SAACmL,EAAUoP,EAAMC,GACf/O,EAAS,CAAE7K,KAAMhE,EAAQ8c,aAAcvO,WAAUoP,OAAMC,YAEzD,CAAC/O,IAIGG,EAAcjM,EAAae,GAGjC8K,EAAY1M,SAAQ,gBAEhBsD,EAIEzB,EAJFyB,SACSqZ,EAGP9a,EAHFwZ,QACeuB,EAEb/a,EAFF4a,cACApZ,EACExB,EADFwB,GAGIgY,EAAU/X,EACZsD,OACEgW,WAAuC7J,IACvC0J,WAAiC1J,GAGnCnM,EAAgB4V,EAAgBG,MAEpC9a,EAAOwZ,QAAUA,EAEbxZ,EAAOwZ,UACTxZ,EAAO+Y,aAAe,SAACa,EAAMC,UAC3Bd,EAAa/Y,EAAOwB,GAAIoY,EAAMC,IAEhC7Z,EAAOgZ,YAAc,WACnBlO,EAAS,CAAE7K,KAAMhE,EAAQ+c,YAAaxO,SAAUxK,EAAOwB,OAI3DxB,EAAOoZ,qBAAuB/b,EAC5B0N,IAAWqO,qBACX,CACErZ,SAAUkL,IACVjL,eAIEgb,EAAatB,EAAOnJ,MAAK,mBAAK1N,EAAErB,KAAOA,KAC7CxB,EAAOib,WAAaD,EACpBhb,EAAOkb,YAAcxB,EAAOhb,WAAU,mBAAKmE,EAAErB,KAAOA,KACpDxB,EAAOmb,aAAenb,EAAOib,SAAWD,EAAWpB,eAAO1I,MAGvB5U,EAAMwS,SAAQ,cAC7C4L,IAAiBhB,EAAOhX,aACnB,CAAC6C,EAAM0H,OAGVmO,EAAiB,GAGjBC,EAAkB3B,EAAOvT,QAAO,mBACpCrC,EAAWyM,MAAK,mBAAOgE,EAAI/S,KAAO6R,EAAK7R,eAoElC,CAjEU,SAAX8Z,EAAW,OAITC,EAAajB,EACjB/U,EACA8V,EAAgBja,KAAI,gBAEZpB,EAAS8D,EAAWyM,MAAK,mBAAK1N,EAAErB,KAAO6R,EAAK7R,UAE7CxB,QACG,IAAIK,uDACyCgT,EAAK7R,yBAIlDyX,EAAajZ,EAAbiZ,SASFuC,EACJvW,EAAWgU,KACVuB,GAAiB,IAAIvB,IACtBwB,GAAUxB,OAEPuC,QACG,IAAInb,0DAC4C4Y,mBAAyB5F,EAAK7R,gBAM/E,SAAC0D,EAAGoO,UAAMkI,EAAWtW,EAAGoO,EAAGD,EAAK7R,GAAI6R,EAAKuG,UAGlDyB,EAAgBja,KAAI,gBAEZpB,EAAS8D,EAAWyM,MAAK,mBAAK1N,EAAErB,KAAO6R,EAAK7R,aAE9CxB,GAAUA,EAAOyb,aACZpI,EAAKuG,MAGNvG,EAAKuG,gBAKjB2B,EAAWpd,SAAQ,YACjBid,EAAezY,KAAKW,GACfA,EAAI2C,SAAkC,IAAvB3C,EAAI2C,QAAQvD,SAGhCY,EAAI2C,QAAUqV,EAAShY,EAAI2C,aAGtBsV,EA9DQ,CAiEAhW,GAAO6V,KACvB,CACDV,EACAhB,EACAnU,EACA0H,EACAnJ,EACAwW,EACAE,IArFKkB,OAAYN,OAwFbO,EAAqB3c,EAAa6b,GAExCnb,GAAuB,WACjBic,KACF7Q,EAAS,CAAE7K,KAAMhE,EAAQ4c,gBAE1B,CAAC6B,EAAe,KAAO1N,IAE1BvM,OAAO+C,OAAOzD,EAAU,CACtB6b,cAAerW,EACfsW,kBAAmB5O,EACnByO,aACAN,iBACA7V,KAAMmW,EACNzO,SAAUmO,EACVtC,YACAC,iBAIG,SAASwB,GAAiBhY,EAAKuZ,EAAOC,SACpC,UAAIxZ,GAAK8Q,MAAK,SAAC2E,EAAMC,OACrB,IAAIxV,EAAI,EAAGA,EAAIqZ,EAAMpZ,OAAQD,GAAK,EAAG,KAClCuZ,EAASF,EAAMrZ,GACfmX,OAAOmC,EAAKtZ,IAA4B,SAAZsZ,EAAKtZ,GACjCwZ,EAAUD,EAAOhE,EAAMC,MACb,IAAZgE,SACKrC,GAAQqC,EAAUA,SAGtBF,EAAK,GAAK/D,EAAK7Q,MAAQ8Q,EAAK9Q,MAAQ8Q,EAAK9Q,MAAQ6Q,EAAK7Q,SCpXjElL,EAAQigB,UAAY,YACpBjgB,EAAQkgB,SAAW,WACnBlgB,EAAQmgB,YAAc,kBAETC,GAAgB,YAC3B/e,EAAMoK,cAAc/E,KAAK+G,IACzBpM,EAAMgL,YAAY3F,KAAK2F,KAKzB,SAASoB,GAAQC,EAAOU,EAAQC,EAAevK,MACzCsK,EAAOpK,OAAShE,EAAQC,eAExBogB,SAAU,GACVC,UAAW,GACR5S,MAIHU,EAAOpK,OAAShE,EAAQigB,sBAErBvS,GACH4S,UAAWxc,EAASwK,aAAagS,WAAa,OAI9ClS,EAAOpK,OAAShE,EAAQkgB,SAAU,KAC5BK,EAAoBzc,EAApByc,UAAWC,EAAS1c,EAAT0c,KACbC,EAAe7d,EAAiBwL,EAAOkS,UAAW5S,EAAM4S,WAC1DI,KAAc,OAEdD,EAAe/S,EAAM4S,UAEvBI,GACiB,IAAfH,EACIC,EAAK/Z,QAAUiH,EAAM2S,SACrBI,EAAeF,EACZE,EAAe/S,EAAM4S,YAE9BI,EAAcD,GAAgB,GAG3BC,OAKAhT,GACH4S,UAAWG,IALJ/S,KASPU,EAAOpK,OAAShE,EAAQmgB,YAAa,KAC/BE,EAAajS,EAAbiS,SACFM,EAAcjT,EAAM2S,SAAW3S,EAAM4S,sBAItC5S,GACH4S,UAJgB5P,KAAKwG,MAAMyJ,EAAcN,GAKzCA,cAKN,SAAShU,GAAYvI,OAEjBwF,EAmBExF,EAnBFwF,OAmBExF,EAlBF8c,gCAkBE9c,EAjBFyF,+BAAoB,aACpBlH,EAgBEyB,EAhBFzB,QACWwe,EAeT/c,EAfFyc,YAeEzc,EAdF2O,uCAcE3O,EAbF2F,gCAaE3F,EAZF4J,MACE2S,aACAC,cACA9W,aACAwM,iBACA3B,YACA4D,YACAwF,WAEF5O,EAGE/K,EAHF+K,SACAkC,EAEEjN,EAFFiN,KACA+P,EACEhd,EADFgd,iBAGF1e,EACEC,EACA,CAAC,kBAAmB,aAAc,aAAc,YAAa,eAC7D,qBAGI0e,EAAmBhe,EAAa6d,GAEtCnd,GAAuB,WACjBsd,KACFlS,EAAS,CAAE7K,KAAMhE,EAAQigB,cAE1B,CACDpR,EACAiS,EAAmB,KAAO/P,EAC1BiF,EACA3B,EACA4D,EACAwF,QAGI8C,EAAYO,EACdD,EACAnQ,KAAKsQ,KAAK1X,EAAK7C,OAAS4Z,GAEtBY,EAAc5gB,EAAMwS,SACxB,kBACE0N,EAAY,EACR,UAAI,IAAI5e,MAAM4e,IAAYW,KAAK,MAAM/b,KAAI,SAACyB,EAAGJ,UAAMA,KACnD,KACN,CAAC+Z,IAGGC,EAAOngB,EAAMwS,SAAQ,eACrB2N,KAEAM,EACFN,EAAOlX,MACF,KACC6X,EAAYd,EAAWC,EACvBc,EAAUD,EAAYd,EAE5BG,EAAOlX,EAAK+X,MAAMF,EAAWC,UAG3B3O,EACK+N,EAGFnX,EAAWmX,EAAM,CAAEjX,oBAAmBC,WAAUC,oBACtD,CACDA,EACAD,EACAD,EACAuX,EACAR,EACAD,EACA5N,EACAnJ,IAGIgY,EAAkBhB,EAAY,EAC9BiB,GACW,IAAfhB,EAAmBC,EAAK/Z,QAAU4Z,EAAWC,EAAYC,EAAY,EAEjEL,EAAW7f,EAAM+C,aACrB,YACEyL,EAAS,CAAE7K,KAAMhE,EAAQkgB,SAAUI,gBAErC,CAACzR,IAGG2S,EAAenhB,EAAM+C,aAAY,kBAC9B8c,GAAS,mBAAOpd,EAAM,OAC5B,CAACod,IAEEuB,EAAWphB,EAAM+C,aAAY,kBAC1B8c,GAAS,mBAAOpd,EAAM,OAC5B,CAACod,IAEEC,EAAc9f,EAAM+C,aACxB,YACEyL,EAAS,CAAE7K,KAAMhE,EAAQmgB,YAAaE,eAExC,CAACxR,IAGHrK,OAAO+C,OAAOzD,EAAU,CACtBmd,cACAV,YACAC,OACAc,kBACAC,cACArB,WACAsB,eACAC,WACAtB,gBAhLJC,GAAc7d,WAZK,gBCDnBvC,EAAQ0hB,WAAa,aACrB1hB,EAAQ2hB,YAAc,kBAETC,GAA4B,YACvCvgB,EAAMwgB,oBAAsB,CAACC,IAC7BzgB,EAAMoK,cAAc/E,KAAK+G,IACzBpM,EAAM2K,qBAAqBtF,KAAKsF,IAChC3K,EAAMwG,WAAWnB,KAAKmB,IACtBxG,EAAMwK,YAAYnF,KAAKmF,IACvBxK,EAAMyK,oBAAoBpF,KAAKoF,IAC/BzK,EAAM0K,wBAAwBrF,KAAKqF,IACnC1K,EAAM4K,eAAevF,KAAKuF,IAC1B5K,EAAM6K,mBAAmBxF,KAAKwF,IAC9B7K,EAAMgL,YAAY3F,KAAK2F,IACvBhL,EAAMiL,WAAW5F,KAAK4F,KAGxBsV,GAA0Brf,WAAa,kBAEvC,IAAMwf,GAAsB,GAEtBD,GAA6B,SAAC9gB,SAASoP,iBAAa,CACxDpP,EACA,CACEkR,QAAS9B,EAAO4R,SACZ,SAAA5a,GACEA,EAAE+Q,UACF/H,EAAOuR,sBAGbzgB,MAAO,CACLgG,OAAQkJ,EAAO4R,SAAW,kBAE5B/T,MAAO,kBAKX,SAASR,GAAQC,EAAOU,EAAQC,EAAevK,MACzCsK,EAAOpK,OAAShE,EAAQC,eAExBgiB,aAAcF,IACXrU,MAIHU,EAAOpK,OAAShE,EAAQ0hB,uBAErBhU,GACHuU,aAAcne,EAASwK,aAAa2T,cAAgBF,QAIpD3T,EAAOpK,OAAShE,EAAQ2hB,YAAa,KAC/BpT,EAA8BH,EAA9BG,SAAiB2T,EAAa9T,EAApBjO,MAEZgiB,WACGD,EACHA,GACCxU,EAAMuU,aAAapd,SAAS0J,eAI5Bb,EAFHyU,GAGAF,uBAAkBvU,EAAMuU,cAAc1T,MAMxC0T,aAAcvU,EAAMuU,aAAa/X,QAAO,mBAAKtD,IAAM2H,QAKzD,SAASvC,GAAqBlI,GAC5BA,EAAS+D,WAAW3F,SAAQ,YAC1B6B,EAAOqe,cAAgBte,EAAS4J,MAAMuU,aAAapd,SAASd,EAAOwB,OAIvE,SAASsC,GAAW7C,SAAWlB,oBAC7BkB,EAAQ9C,SAAQ,YACd6B,EAAOqe,cAAgBte,EAAS4J,MAAMuU,aAAapd,SAASd,EAAOwB,IACnExB,EAAOse,aAAe,IAAI9K,OAErBvS,EAGT,SAAS6G,GAAY1L,SAAS4D,kBACxBA,EAAOse,uBAAuBliB,GAChC4D,EAAOse,aAAaC,IAAIniB,GAEnBA,EAGT,SAAS2L,GAAoByW,SAAgBze,aACnC+D,EAAsB/D,EAAtB+D,WAAY6F,EAAU5J,EAAV4J,UAEfA,EAAMuU,aAAaxb,SAAWiH,EAAMuK,UAAYvK,EAAMuK,QAAQxR,cAC1D8b,MAGHN,EAAevU,EAAMuU,aACxB9c,KAAI,mBAAM0C,EAAWyM,MAAK,mBAAK1N,EAAErB,KAAOA,QACxC2E,OAAO0I,SAEJ4P,EAAgB3a,EAAWqC,QAC/B,mBACGtD,EAAEwb,gBACF1U,EAAMuK,QAAQpT,SAAS+B,EAAErB,MACzBmI,EAAMuU,aAAapd,SAAS+B,EAAErB,OAyD7Bkd,EAAkBpd,EAtDE,SAApBqd,EAAqBxd,EAAWD,EAAQ0d,YAAnBzd,MAAQ,YAAWyd,MAAe,QACrDC,EAAcX,EAAa/c,UAE5B0d,EAwBgBjhB,MAAM2V,KAAKsL,EAAYP,cAAcjL,OAEtCjS,KAAI,SAAA0d,GAAA,IAChBC,OACDF,GACHnd,OACEmd,EAAYG,aAA6C,iBAAvBH,EAAYxS,OACvCwS,EAAYnd,YAAWud,EAC1BA,EACNC,gBACAhe,SACAC,QACAK,GAAIN,EACGA,EAAOM,OAAMqd,EAAYrd,OAAMyd,EAC/BJ,EAAYrd,OAAMyd,EACzBE,WAAYF,WAGdF,EAAY9d,QAAU0d,EAAkBxd,EAAQ,EAAG4d,YAC9CH,GACH,mBAAOtb,EAAIoK,OAAOmR,EAAYrd,MAAQyd,MAGjCF,KA9CAN,EAAcrd,KAAI,wBAQlBge,GACHnB,YACAoB,aACAne,SACAC,MAAOA,EACPK,OAAON,EAAYA,EAAOM,OAAM4d,EAAa5d,GAAO4d,EAAa5d,IACjEC,SAAU,SAAC2L,EAAa3K,EAAGa,MACrBsb,EAAalP,OAAM,mBAAUvJ,EAAO7C,aAC/BA,EAAIoK,OAAO0R,EAAa5d,UApBjB,IAsDamd,gBAE5BH,EAAiBE,GAG9B,SAAS1W,GACPpI,aAEEG,SACE4J,MAASuU,iBAAchK,4BAIhBtU,GAAMse,EAAchK,IAGjC,SAAShM,GAAeA,SAA8ByB,IAAZ5J,SAAY4J,aACpDzB,EAAiBA,EAAe/B,QAAO,mBAAMtD,EAAEwb,iBAE3C1U,EAAMuU,aAAaxb,QAAUiH,EAAMuK,SAAWvK,EAAMuK,QAAQxR,SAC9DwF,EAAiBA,EAAe/B,QAC9B,mBAAUnG,EAAO0U,WAAa1U,EAAOqf,cAIlCnX,EAGT,SAASC,GAAmBvI,SAAQG,6BACvBH,GAAMG,EAAS4J,MAAMuU,aAAcne,EAAS4J,MAAMuK,UAG/D,SAAS5L,GAAYvI,OAEjBkB,EAYElB,EAZFkB,QACA6C,EAWE/D,EAXF+D,WACA+G,EAUE9K,EAVF8K,YAGAE,EAOEhL,EAPFgL,SACAzM,EAMEyB,EANFzB,QACAwM,EAKE/K,EALF+K,WAKE/K,EAJFuf,+BACAC,EAGExf,EAHFwf,YACAC,EAEEzf,EAFFyf,aACAC,EACE1f,EADF0f,gBAGFphB,EAAkBC,EAAS,CAAC,cAAe,uBAErC2M,EAAcjM,EAAae,GAEjC+D,EAAW3F,SAAQ,gBAEfsD,EAGEzB,EAHFyB,SACcie,EAEZ1f,EAFF2f,aACcC,EACZ5f,EADFwf,aAGFxf,EAAOie,SAAWxc,EACdsD,EACE/E,EAAOie,cACP2B,WAAsC1O,IACtCsO,WAAgCtO,GAGlCnM,EACE/E,EAAOie,SACPyB,EACAD,MAIFzf,EAAOie,WACTje,EAAO4d,YAAc,kBAAM7d,EAAS6d,YAAY5d,EAAOwB,MAGzDxB,EAAOyV,WAAazV,EAAOyV,YAAczV,EAAOxD,QAOlDqO,EAAY1M,SAAQ,YAClBkO,EAAOyR,oBAAsBzgB,EAC3B0N,IAAW+S,oBACX,CACE/d,SAAUkL,IACVoB,kBAKAwT,EAAoB7gB,EAAasgB,GAEvC5f,GAAuB,WACjBmgB,KACF/U,EAAS,CAAE7K,KAAMhE,EAAQ0hB,eAE1B,CAAC7S,EAAUyU,EAAc,KAAOte,IAEnCR,OAAO+C,OAAOzD,EAAU,CACtB6d,YAvBkB,SAACpT,EAAUpO,GAC7B0O,EAAS,CAAE7K,KAAMhE,EAAQ2hB,YAAapT,WAAUpO,aA0BpD,SAASmM,GAAWjF,GAClBA,EAAI+T,SAASlZ,SAAQ,YAEnBoJ,EAAK8X,UAAY9X,EAAKvH,OAAOqf,aCtRjCpjB,EAAQ6jB,kBAAoB,oBAC5B7jB,EAAQ8jB,sBAAwB,wBAChC9jB,EAAQ+jB,kBAAoB,oBAC5B/jB,EAAQgkB,0BAA4B,gCAEvBC,GAAe,YAC1B5iB,EAAM6iB,0BAA4B,CAACC,IACnC9iB,EAAM+iB,8BAAgC,CAACC,IACvChjB,EAAMijB,kCAAoC,CACxCC,IAEFljB,EAAMoK,cAAc/E,KAAK+G,IACzBpM,EAAMgL,YAAY3F,KAAK2F,IACvBhL,EAAMiL,WAAW5F,KAAK4F,KAGxB2X,GAAa1hB,WAnBM,eAqBnB,IAAM4hB,GAAmC,SAACnjB,SAAS8C,aAAUuD,UACXvD,EAAxC0gB,kCAAuB,qBASxB,CACLxjB,EACA,CACE4M,SAAU,SAAAxG,GACRC,EAAI0c,kBAAkB3c,EAAE0G,OAAOC,UAEjC7M,MAAO,CACLgG,OAAQ,WAEV6G,WAfA1G,EAAIyC,WAAYzC,EAAIyC,SAAS0a,KAGrBnd,EAAIod,WAaZxW,MAAO,sBACPE,cAAe9G,EAAIqd,kBAKnBL,GAAuC,SAACrjB,SAAS8C,mBAAe,CACpE9C,EACA,CACE4M,SAAU,SAAAxG,GACRtD,EAASggB,sBAAsB1c,EAAE0G,OAAOC,UAE1C7M,MAAO,CACLgG,OAAQ,WAEV6G,QAASjK,EAAS6gB,kBAClB1W,MAAO,2BACPE,cAAeyE,SACZ9O,EAAS6gB,mBACRngB,OAAO4N,KAAKtO,EAAS4J,MAAMkX,gBAAgBne,WAK7C8d,GAA2C,SAACvjB,SAAS8C,mBAAe,CACxE9C,EACA,CACE4M,kBAASxG,GACPtD,EAASkgB,0BAA0B5c,EAAE0G,OAAOC,UAE9C7M,MAAO,CACLgG,OAAQ,WAEV6G,QAASjK,EAAS+gB,sBAClB5W,MAAO,wCACPE,cAAeyE,SACZ9O,EAAS+gB,uBACR/gB,EAAS0c,KAAKjY,MAAK,gBAAGhD,cAASzB,EAAS4J,MAAMkX,eAAerf,UAMrE,SAASkI,GAAQC,EAAOU,EAAQC,EAAevK,MACzCsK,EAAOpK,OAAShE,EAAQC,eAExB2kB,eAAgB,IACblX,MAIHU,EAAOpK,OAAShE,EAAQ6jB,8BAErBnW,GACHkX,eAAgB9gB,EAASwK,aAAasW,gBAAkB,QAIxDxW,EAAOpK,OAAShE,EAAQ8jB,sBAAuB,KAClCgB,EAAgB1W,EAAvBjO,MAENwkB,EAGE7gB,EAHF6gB,kBACA1T,EAEEnN,EAFFmN,WAEEnN,EADFiW,gCAAqB9I,IAGjB8T,WACGD,EAA8BA,GAAeH,EAIhDC,EAAiBpgB,OAAO+C,OAAO,GAAImG,EAAMkX,uBAE3CG,EACFvgB,OAAO4N,KAAK2H,GAAoB7X,SAAQ,YACtC0iB,EAAevS,SAGjB7N,OAAO4N,KAAK2H,GAAoB7X,SAAQ,mBAC/B0iB,EAAevS,WAKrB3E,GACHkX,sBAIAxW,EAAOpK,OAAShE,EAAQ+jB,kBAAmB,KACrCxe,EAA2B6I,EAA3B7I,GAAWuf,EAAgB1W,EAAvBjO,MACJ8Q,EAA+CnN,EAA/CmN,WAA+CnN,EAArCkhB,8BAAsBtV,EAAe5L,EAAf4L,WAClC+U,EAAa/W,EAAMkX,eAAerf,GAClCiN,WACGsS,EAA8BA,GAAeL,KAElDA,IAAejS,SACV9E,MAGHuX,OAAyBvX,EAAMkX,uBAEf,SAAhBM,EAAgB,OACd7d,EAAM4J,EAAS1L,MAEhB8B,EAAIoR,YACHjG,EACFyS,EAAkB1f,aAEX0f,EAAkB1f,IAIzByf,GAAiBtV,EAAWrI,UACvBqI,EAAWrI,GAAKnF,SAAQ,mBAAOgjB,EAAc7d,EAAI9B,OAZtC,CAgBRA,QAGTmI,GACHkX,eAAgBK,OAIhB7W,EAAOpK,OAAShE,EAAQgkB,0BAA2B,KACtCc,EAAgB1W,EAAvBjO,MAENqgB,EAKE1c,EALF0c,KACAvP,EAIEnN,EAJFmN,WAIEnN,EAHFkhB,8BACAH,EAEE/gB,EAFF+gB,sBACAnV,EACE5L,EADF4L,WAGIqV,WACGD,EAA8BA,GAAeD,EAEhDI,OAAyBvX,EAAMkX,uBAkBrCpE,EAAKte,SAAQ,mBAhBS,SAAhBgjB,EAAgB,OACd7d,EAAM4J,EAAS1L,MAEhB8B,EAAIoR,YACHsM,EACFE,EAAkB1f,aAEX0f,EAAkB1f,IAIzByf,GAAiBtV,EAAWrI,UACvBqI,EAAWrI,GAAKnF,SAAQ,mBAAOgjB,EAAc7d,EAAI9B,OAZtC,CAgBY8B,EAAI9B,YAGjCmI,GACHkX,eAAgBK,WAGbvX,EAGT,SAASrB,GAAYvI,OAEjBiN,EAYEjN,EAZFiN,KACAzH,EAWExF,EAXFwF,KACAwF,EAUEhL,EAVFgL,SACAzM,EASEyB,EATFzB,QACA4O,EAQEnN,EARFmN,WAQEnN,EAPFiW,gCAAqB9I,MAOnBnN,EANFqhB,sCACSP,EAKP9gB,EALF4J,MAASkX,iBAKP9gB,EAJFkhB,8BACAnW,EAGE/K,EAHF+K,SACA2R,EAEE1c,EAFF0c,KACA9Q,EACE5L,EADF4L,WAGFtN,EACEC,EACA,CAAC,aAAc,aAAc,YAAa,cAAe,iBACzD,oBAGI+iB,EAAmB/kB,EAAMwS,SAAQ,eAC/BuS,EAAmB,UAEzB9b,EAAKpH,SAAQ,gBACLuiB,EAAaO,EAwFzB,SAASK,EAAiBhe,EAAKud,EAAgBlV,MACzCkV,EAAevd,EAAI9B,aACd,IAGHyE,EAAU0F,EAAWrI,MAEvB2C,GAAWA,EAAQvD,OAAQ,KACzB6e,KACAC,KAAe,OAEnBvb,EAAQ9H,SAAQ,YAEVqjB,IAAiBD,IAIjBD,EAAiBtK,EAAQ6J,EAAgBlV,GAC3C6V,KAEAD,WAGGA,KAA6BC,GAAe,cAvBvD,CAvF2Ble,EAAKud,EAAgBlV,KACpCkV,EAAevd,EAAI9B,IACzB8B,EAAIod,aAAeA,EACnBpd,EAAIqd,eAAgC,OAAfD,EAEjBA,GACFW,EAAiB1e,KAAKW,MAInB+d,IACN,CAAC9b,EAAM0b,EAAeJ,EAAgBlV,IAErCiV,EAAoB/R,QACtBpO,OAAO4N,KAAK2H,GAAoBtT,QAAUjC,OAAO4N,KAAKwS,GAAgBne,QAGpEoe,EAAwBF,EAExBA,GACEngB,OAAO4N,KAAK2H,GAAoBxR,MAAK,mBAAOqc,EAAerf,QAC7Dof,MAICA,GACCnE,GAAQA,EAAK/Z,QAAU+Z,EAAKjY,MAAK,gBAAGhD,cAAUqf,EAAerf,QAC/Dsf,MAAwB,IAItBW,EAA2BziB,EAAaoiB,GAE9C1hB,GAAuB,WACjB+hB,KACF3W,EAAS,CAAE7K,KAAMhE,EAAQ6jB,sBAE1B,CAAChV,EAAUkC,QAER+S,EAAwBzjB,EAAM+C,aAClC,mBAASyL,EAAS,CAAE7K,KAAMhE,EAAQ8jB,sBAAuB3jB,YACzD,CAAC0O,IAGGmV,EAA4B3jB,EAAM+C,aACtC,mBAASyL,EAAS,CAAE7K,KAAMhE,EAAQgkB,0BAA2B7jB,YAC7D,CAAC0O,IAGGkV,EAAoB1jB,EAAM+C,aAC9B,SAACmC,EAAIpF,UAAU0O,EAAS,CAAE7K,KAAMhE,EAAQ+jB,kBAAmBxe,KAAIpF,YAC/D,CAAC0O,IAGGG,EAAcjM,EAAae,GAE3BsgB,EAAgChjB,EACpC0N,IAAWsV,8BACX,CAAEtgB,SAAUkL,MAGRsV,EAAoCljB,EACxC0N,IAAWwV,kCACX,CAAExgB,SAAUkL,MAGdxK,OAAO+C,OAAOzD,EAAU,CACtBshB,mBACAT,oBACAE,wBACAd,oBACAD,wBACAM,gCACAE,oCACAN,8BAIJ,SAAS1X,GAAWjF,SAAOvD,aACzBuD,EAAI0c,kBAAoB,mBAAOjgB,EAASigB,kBAAkB1c,EAAI9B,GAAI0B,IAElEI,EAAI6c,0BAA4B9iB,EAC9B0C,EAASgL,WAAWoV,0BACpB,CAAEpgB,SAAUA,EAAUuD,QC/T1B,IAAMoe,GAAiC,kBAAQ,IACzCC,GAAkC,kBAAS,IAGjD1lB,EAAQ2lB,YAAc,cACtB3lB,EAAQ4lB,aAAe,eACvB5lB,EAAQ6lB,cAAgB,oBAEXC,GAAc,YACzBzkB,EAAMoK,cAAc/E,KAAK+G,IACzBpM,EAAMgL,YAAY3F,KAAK2F,IACvBhL,EAAMiL,WAAW5F,KAAK4F,KAKxB,SAASmB,GAAQC,EAAOU,EAAQC,EAAevK,SAKzCA,EAHFiiB,qCAA0BN,OAGxB3hB,EAFFkiB,sCAA2BN,KAC3BzU,EACEnN,EADFmN,YAGE7C,EAAOpK,OAAShE,EAAQC,eAExBgmB,SAAU,IACPvY,MAIHU,EAAOpK,OAAShE,EAAQ6lB,0BAErBnY,GACHuY,SAAUniB,EAASwK,aAAa2X,UAAY,QAI5C7X,EAAOpK,OAAShE,EAAQ2lB,YAAa,OAC/BtT,EAAiBjE,EAAjBiE,MAAOlS,EAAUiO,EAAVjO,MAET+lB,WACGxY,EAAMuY,SAAS5T,GAClB3E,EAAMuY,SAAS5T,GACf0T,EAAwB9U,EAASoB,gBAGlC3E,GACHuY,cACKvY,EAAMuY,iBACR5T,GAAQzP,EAAiBzC,EAAO+lB,YAKnC9X,EAAOpK,OAAShE,EAAQ4lB,aAAc,eAChCvT,EAA2BjE,EAA3BiE,MAAO9D,EAAoBH,EAApBG,SAAUpO,EAAUiO,EAAVjO,MAEnB+lB,WACGxY,EAAMuY,SAAS5T,GAClB3E,EAAMuY,SAAS5T,GACf0T,EAAwB9U,EAASoB,IAEjC8T,YAC0C,MAAvCD,cAAaE,gBAAbF,IAAyB3X,IAC5B2X,EAAYE,UAAU7X,GACtByX,WACE/U,EAASoB,cAATpB,EAAiBO,YAARa,EAATpB,EAAwBqD,MAAK,mBAAQhJ,EAAKvH,OAAOwB,KAAOgJ,kBAI3Db,GACHuY,cACKvY,EAAMuY,iBACR5T,QACI6T,GACHE,eACMF,EAAYE,WAAa,WAC5B7X,GAAW3L,EAAiBzC,EAAOgmB,gBAQhD,SAAS9Z,GAAYvI,SACkCA,EAA7CuiB,kCAA0BtV,EAAmBjN,EAAnBiN,KAAMlC,EAAa/K,EAAb+K,SAElC8W,EAActlB,EAAM+C,aACxB,SAACiP,EAAOlS,UACN0O,EAAS,CACP7K,KAAMhE,EAAQ2lB,YACdtT,QACAlS,YAEJ,CAAC0O,IAGG+W,EAAevlB,EAAM+C,aACzB,SAACiP,EAAO9D,EAAUpO,UAChB0O,EAAS,CACP7K,KAAMhE,EAAQ4lB,aACdvT,QACA9D,WACApO,YAEJ,CAAC0O,IAGGyX,EAAuBvjB,EAAasjB,GAE1C5iB,GAAuB,WACjB6iB,KACFzX,EAAS,CAAE7K,KAAMhE,EAAQ6lB,kBAE1B,CAAC9U,IAEJvM,OAAO+C,OAAOzD,EAAU,CACtB6hB,cACAC,iBAIJ,SAAStZ,GAAWjF,SAAOvD,eAKrBA,EAHFiiB,qCAA0BN,OAGxB3hB,EAFFkiB,sCAA2BN,KAClBO,EACPniB,EADF4J,MAASuY,SAGP5e,IACFA,EAAIqG,eACKuY,EAAS5e,EAAI9B,IAChB0gB,EAAS5e,EAAI9B,IACbwgB,EAAwB1e,GAE9BA,EAAIkf,SAAW,mBACNziB,EAAS6hB,YAAYte,EAAI9B,GAAI1C,IAGtCwE,EAAImK,MAAMtP,SAAQ,YACXmF,EAAIqG,MAAM0Y,YACb/e,EAAIqG,MAAM0Y,UAAY,IAGxB9a,EAAKoC,eACIrG,EAAIqG,MAAM0Y,UAAU9a,EAAKvH,OAAOwB,IACnC8B,EAAIqG,MAAM0Y,UAAU9a,EAAKvH,OAAOwB,IAChCygB,EAAyB1a,GAE/BA,EAAKib,SAAW,mBACPziB,EAAS8hB,aAAave,EAAI9B,GAAI+F,EAAKvH,OAAOwB,GAAI1C,QAzI7DijB,GAAYvjB,WAAa,cClBzBvC,EAAQwmB,iBAAmB,mBAC3BxmB,EAAQymB,eAAiB,qBAEZC,GAAiB,YAC5BrlB,EAAMoK,cAAc/E,KAAK+G,IACzBpM,EAAM6K,mBAAmBxF,MAAK,SAAC/C,SAAQG,6BAC1BH,GAAMG,EAAS4J,MAAMiZ,iBAElCtlB,EAAM4K,eAAevF,KAAKuF,IAC1B5K,EAAMgL,YAAY3F,KAAK2F,KAKzB,SAASoB,GAAQC,EAAOU,EAAQC,EAAevK,UACzCsK,EAAOpK,OAAShE,EAAQC,QAExB0mB,YAAa,IACVjZ,GAIHU,EAAOpK,OAAShE,EAAQwmB,sBAErB9Y,GACHiZ,YAAa7iB,EAASwK,aAAaqY,aAAe,KAIlDvY,EAAOpK,OAAShE,EAAQymB,oBAErB/Y,GACHiZ,YAAa/jB,EAAiBwL,EAAOuY,YAAajZ,EAAMiZ,sBAK9D,SAAS1a,GACPjH,SAGa2hB,IADX7iB,SACE4J,MAASiZ,gBAKRA,IAAgBA,EAAYlgB,cACxBzB,UAGH4hB,YAAsBD,GAGtBE,YAAkB7hB,GAGlB8hB,EAAiB,oBAIfC,EAAiBH,EAAgB1K,QACjC8K,EAAaH,EAAYpkB,WAAU,mBAAKmE,EAAErB,KAAOwhB,KACnDC,GAAc,GAChBF,EAAepgB,KAAKmgB,EAAYzI,OAAO4I,EAAY,GAAG,KAJnDH,EAAYpgB,QAAUmgB,EAAgBngB,4BASlCqgB,EAAmBD,GAGhC,SAASxa,GAAYvI,OACX+K,EAAa/K,EAAb+K,SAER/K,EAAS2iB,eAAiBpmB,EAAM+C,aAC9B,mBACSyL,EAAS,CAAE7K,KAAMhE,EAAQymB,eAAgBE,kBAElD,CAAC9X,IAlEL6X,GAAenkB,WAAa,iBCH5BjC,EAAcuQ,aAGd7Q,EAAQinB,oBAAsB,sBAC9BjnB,EAAQknB,eAAiB,iBACzBlnB,EAAQmnB,mBAAqB,qBAC7BnnB,EAAQonB,YAAc,kBAETC,GAAmB,YAC9BhmB,EAAMimB,gBAAkB,CAACC,IACzBlmB,EAAMsL,eAAejG,KAAK,CACxBxF,MAAO,CACLsmB,SAAU,cAGdnmB,EAAMoK,cAAc/E,KAAK+G,IACzBpM,EAAMgL,YAAY3F,KAAK2F,IACvBhL,EAAM+K,4BAA4B1F,KAAK0F,KAGnCmb,GAAyB,SAACvmB,SAAS8C,aAAUsM,WACzCvB,EAAa/K,EAAb+K,SAEF4Y,EAAgB,SAACrgB,EAAGgJ,OACpBsX,KAAe,GACJ,eAAXtgB,EAAEpD,KAAuB,IAEvBoD,EAAEugB,SAAWvgB,EAAEugB,QAAQlhB,OAAS,SAGpCihB,KAAe,IAGXE,EA8NV,SAAwBxX,OAChByX,EAAc,UACE,SAAhBC,EAAgB,GAChB1X,EAAOpL,SAAWoL,EAAOpL,QAAQyB,QACnC2J,EAAOpL,QAAQG,IAAI2iB,GAErBD,EAAYnhB,KAAK0J,GAJG,CAMRA,GACPyX,EATT,CA/N2CzX,GACAjL,KAAI,kBAAK,CAACyB,EAAErB,GAAIqB,EAAE2J,eAEnDwX,EAAUL,EAAehX,KAAKsX,MAAM5gB,EAAEugB,QAAQ,GAAGI,SAAW3gB,EAAE2gB,QAE9DE,EAAe,YACnBpZ,EAAS,CAAE7K,KAAMhE,EAAQknB,eAAgBa,QAASG,KAE9CC,EAAc,kBAAMtZ,EAAS,CAAE7K,KAAMhE,EAAQmnB,sBAE7CiB,EAAoB,CACxBC,MAAO,CACLC,UAAW,YACXC,YAAa,SAAAnhB,GAAA,OAAK6gB,EAAa7gB,EAAE2gB,UACjCS,QAAS,UACTC,UAAW,SAAArhB,GACT9D,SAASolB,oBACP,YACAN,EAAkBC,MAAME,aAE1BjlB,SAASolB,oBACP,UACAN,EAAkBC,MAAMI,WAE1BN,MAGJQ,MAAO,CACLL,UAAW,YACXC,YAAa,SAAAnhB,GAAA,OACPA,EAAEwhB,aACJxhB,EAAEyhB,iBACFzhB,EAAE0hB,mBAEJb,EAAa7gB,EAAEugB,QAAQ,GAAGI,aAG5BS,QAAS,WACTC,UAAW,SAAArhB,GACT9D,SAASolB,oBACPN,EAAkBO,MAAML,UACxBF,EAAkBO,MAAMJ,aAE1BjlB,SAASolB,oBACPN,EAAkBO,MAAMH,QACxBJ,EAAkBO,MAAMJ,aAE1BJ,OAKAY,EAASrB,EACXU,EAAkBO,MAClBP,EAAkBC,MAChBW,IjBkMH,cAE2B,kBAArBve,EAAgC,OAAOA,MAE9Cwe,KAAY,QAERC,EAAU,sBAEZD,MAAY,IAKhBE,OAAOC,iBAAiB,OAAQ,KAAMF,GACtCC,OAAOT,oBAAoB,OAAQ,KAAMQ,GACzC,MAAOG,GACPJ,KAAY,OAEdxe,EAAmBwe,EAlBd,IiBjMC,CAAEK,YAENhmB,SAAS8lB,iBACPL,EAAOT,UACPS,EAAOR,YACPS,GAEF1lB,SAAS8lB,iBACPL,EAAOP,QACPO,EAAON,UACPO,GAGFna,EAAS,CACP7K,KAAMhE,EAAQinB,oBACd1Y,SAAU6B,EAAO7K,GACjBgkB,YAAanZ,EAAOG,WACpBqX,iBACAG,mBAIG,CACL/mB,EACA,CACEwoB,YAAa,SAAApiB,GAAA,OAAKA,EAAE+Q,WAAasP,EAAcrgB,EAAGgJ,IAClDqZ,aAAc,SAAAriB,GAAA,OAAKA,EAAE+Q,WAAasP,EAAcrgB,EAAGgJ,IACnDlP,MAAO,CACLgG,OAAQ,cAEVwiB,aACA/e,KAAM,eAOZ,SAAS8C,GAAQC,EAAOU,MAClBA,EAAOpK,OAAShE,EAAQC,eAExBinB,eAAgB,CACdyC,aAAc,KAEbjc,MAIHU,EAAOpK,OAAShE,EAAQonB,wBAErB1Z,GACHwZ,eAAgB,CACdyC,aAAc,SAKhBvb,EAAOpK,OAAShE,EAAQinB,oBAAqB,KACvCc,EAAmD3Z,EAAnD2Z,QAASxZ,EAA0CH,EAA1CG,SAAUgb,EAAgCnb,EAAhCmb,YAAa3B,EAAmBxZ,EAAnBwZ,2BAGnCla,GACHwZ,oBACKxZ,EAAMwZ,gBACT0C,OAAQ7B,EACRH,iBACA2B,cACAM,iBAAkBtb,SAKpBH,EAAOpK,OAAShE,EAAQknB,eAAgB,KAClCa,EAAY3Z,EAAZ2Z,UAC6Cra,EAAMwZ,eAAnD0C,WAAQL,oBAAa3B,eAGvBkC,GADS/B,EAAU6B,GACSL,EAE5BQ,EAAkB,qBALsB,MAO/B7nB,SAAQ,gBAAE8nB,OAAUC,OACjCF,EAAgBC,GAAYtZ,KAAKE,IAC/BqZ,EAAcA,EAAcH,EAC5B,WAKCpc,GACHwZ,oBACKxZ,EAAMwZ,gBACTyC,kBACKjc,EAAMwZ,eAAeyC,gBACrBI,cAMP3b,EAAOpK,OAAShE,EAAQmnB,wBAErBzZ,GACHwZ,oBACKxZ,EAAMwZ,gBACT0C,OAAQ,KACRC,iBAAkB,gBAtE1BxC,GAAiB9kB,WAAa,mBA4E9B,IAAM6J,GAA8B,gBAEhCwC,EAIE9K,EAJF8K,YACAsb,EAGEpmB,EAHFomB,gBACApb,EAEEhL,EAFFgL,SACSoY,EACPpjB,EADF4J,MAASwZ,eAGLlY,EAAcjM,EAAae,GAEjC8K,EAAY1M,SAAQ,gBACZ2O,EAAY/H,OAChBsH,EAAO8Z,yBAAmCjV,IAC1CiV,WAAmCjV,GAIrC7E,EAAOS,UAAYA,EACnBT,EAAO5P,MACL0mB,EAAeyC,aAAavZ,EAAO7K,KACnC6K,EAAOzI,eACPyI,EAAO5P,MACT4P,EAAO+Z,WAAajD,EAAe2C,mBAAqBzZ,EAAO7K,GAE3DsL,IACFT,EAAOkX,gBAAkBlmB,EAAe0N,IAAWwY,gBAAiB,CAClExjB,SAAUkL,IACVoB,gBAMR,SAAS/D,GAAYvI,OACXzB,EAAuDyB,EAAvDzB,QAASwM,EAA8C/K,EAA9C+K,WAA8C/K,EAApCsmB,gCAAwBplB,EAAYlB,EAAZkB,QAEnD5C,EAAkBC,EAAS,CAAC,qBAAsB,wBAE5CgoB,EAAqBtnB,EAAaqnB,GACxC3mB,GAAuB,WACjB4mB,KACFxb,EAAS,CAAE7K,KAAMhE,EAAQonB,gBAE1B,CAACpiB,QAEEslB,EAAgBjqB,EAAM+C,aAC1B,kBAAMyL,EAAS,CAAE7K,KAAMhE,EAAQonB,gBAC/B,CAACvY,IAGHrK,OAAO+C,OAAOzD,EAAU,CACtBwmB,sBCzQEC,GAAa,CACjB/C,SAAU,WACVgD,IAAK,GAGMC,GAAoB,YAC/BppB,EAAMmL,kBAAkB9F,KAAKgkB,IAC7BrpB,EAAMwL,YAAYnG,KAAKgkB,IACvBrpB,EAAMoL,oBAAoB/F,KAAKgkB,IAC/BrpB,EAAMqL,oBAAoBhG,KAAKgkB,IAE/BrpB,EAAMsL,eAAejG,MAAK,SAAC1F,SAAS+C,iBAAa,CAC/C/C,EACA,CACEE,WACKqpB,IACHza,KAAS/L,EAAOsM,eAChB7P,MAAUuD,EAAOwM,uBAKvBlP,EAAMyL,aAAapG,MAAK,SAAC1F,SAASsK,eAAW,CAC3CtK,EACA,CACEE,WACKqpB,IACHza,KAASxE,EAAKvH,OAAOsM,eACrB7P,MAAU8K,EAAKvH,OAAOwM,uBAK5BlP,EAAMuL,eAAelG,MAAK,SAAC1F,SAAS+C,iBAAa,CAC/C/C,EACA,CACEE,WACKqpB,IACHza,KAAS/L,EAAOsM,eAChB7P,MAAUuD,EAAOwM,wBAMzBka,GAAkBloB,WAAa,oBAE/B,IAAMmoB,GAAe,SAAC1pB,WAAwB,CAC5CA,EACA,CACEE,MAAO,CACLsmB,SAAU,WACVhnB,QALyBsD,SAKN6mB,2BCpDnBJ,GAAa,CACjBK,QAAS,eACTC,UAAW,cAGPH,GAAe,SAAC1pB,WAAwB,CAC5CA,EACA,CACEE,MAAO,CACL0pB,QAAS,OACTpqB,QALyBsD,SAKN6mB,2BAKZG,GAAiB,YAC5BzpB,EAAMwL,YAAYnG,KAAKgkB,IACvBrpB,EAAMoL,oBAAoB/F,KAAKgkB,IAC/BrpB,EAAMqL,oBAAoBhG,KAAKgkB,IAE/BrpB,EAAMsL,eAAejG,MAAK,SAAC1F,SAAS+C,iBAAa,CAC/C/C,EACA,CACEE,WACKqpB,IACH/pB,MAAUuD,EAAOwM,uBAKvBlP,EAAMyL,aAAapG,MAAK,SAAC1F,SAASsK,eAAW,CAC3CtK,EACA,CACEE,WACKqpB,IACH/pB,MAAU8K,EAAKvH,OAAOwM,uBAK5BlP,EAAMuL,eAAelG,MAAK,SAAC1F,SAAS+C,iBAAa,CAC/C/C,EACA,CACEE,WACKqpB,IACH/pB,MAAUuD,EAAOwM,wBC7ClB,SAASwa,GAAc1pB,GAC5BA,EAAMkL,cAAc7F,KAAK6F,IACzBlL,EAAMwL,YAAYnG,KAAKgkB,IACvBrpB,EAAMoL,oBAAoB/F,KAAKgkB,IAC/BrpB,EAAMqL,oBAAoBhG,KAAKgkB,IAC/BrpB,EAAMsL,eAAejG,KAAKiG,IAC1BtL,EAAMyL,aAAapG,KAAKoG,IACxBzL,EAAMuL,eAAelG,KAAKkG,ID4C5Bke,GAAevoB,WAAa,iBCzC5BwoB,GAAcxoB,WAAa,gBAE3B,IAAMgK,GAAgB,SAACvL,WAAwB,CAC7CA,EACA,CACEE,MAAO,CACLT,WAJ0BqD,SAIJknB,8BAKtBN,GAAe,SAAC1pB,WAAwB,CAC5CA,EACA,CACEE,MAAO,CACL0pB,QAAS,OACTK,KAAM,WACNxqB,WANyBqD,SAMHknB,8BAKtBre,GAAiB,SAAC3L,SAAS+C,iBAAa,CAC5C/C,EACA,CACEE,MAAO,CACL2pB,UAAW,aACXI,KAAMlnB,EAAO0M,eACN1M,EAAO0M,gCAEdhQ,SAAasD,EAAOuM,mBACpB9P,MAAUuD,EAAOwM,oBAKjBzD,GAAe,SAAC9L,SAASsK,eAAW,CACxCtK,EACA,CACEE,MAAO,CACL2pB,UAAW,aACXI,KAAS3f,EAAKvH,OAAO0M,yBACrBhQ,SAAa6K,EAAKvH,OAAOuM,mBACzB9P,MAAU8K,EAAKvH,OAAOwM,oBAKtB3D,GAAiB,SAAC5L,SAAS+C,iBAAa,CAC5C/C,EACA,CACEE,MAAO,CACL2pB,UAAW,aACXI,KAAMlnB,EAAO0M,eACN1M,EAAO0M,gCAEdhQ,SAAasD,EAAOuM,mBACpB9P,MAAUuD,EAAOwM,oBCnEhB,SAAS2a,GAAc7pB,GAC5BA,EAAMoK,cAAc/E,KAAK+G,IACzBpM,EAAMkL,cAAc7F,KAAK6F,IACzBlL,EAAMsL,eAAejG,KAAKiG,IAG5Bue,GAAc3oB,WAAa,gBAE3B,IAAMgK,GAAgB,SAACvL,WAAwB,CAC7CA,EACA,CACEE,MAAO,CACL0pB,eACAO,sBAL0BrnB,SAKI4J,MAAM0d,WAAWzB,aAAaxkB,KAAI,mBAAKkmB,KAAGvkB,cAKxE6F,GAAiB,SAAC3L,WAAsB,CAC5CA,EACA,CACEuE,oBAH6BxB,OAGHwB,GAC1BrE,MAAO,CACLsmB,sBAKN,SAAS/Z,GAAQC,EAAOU,EAAQC,EAAevK,eACzCsK,EAAOpK,eAEPonB,WAAY,CACVzB,aAAc7lB,EAASkB,QAAQG,KAAI,6BAElCuI,8BAIHU,EAAOpK,KAAgC,KACjCuK,EAAaH,EAAbG,SACF+c,EAAcxnB,EAASmI,eAAexJ,WAAU,mBAAO6V,EAAI/S,KAAOgJ,KAClEgd,EAuCV,SAAyBhd,SACjB/N,WAAQ8C,SAASkoB,8BAA8Bjd,WAAvCjL,EAAoDmoB,wBAE9DjrB,SACKA,EAJX,CAvCoC+N,mBAE5Bgd,OAEG7d,GACH0d,gBACK1d,EAAM0d,YACT7c,WACA+c,cACAI,cAAeH,MAIZ7d,wBAIPU,EAAOpK,KAA2B,OAKhC0J,EAAM0d,WAHRE,gBACAI,kBACA/B,iBAIIgC,EAAWD,GADFhe,EAAMwZ,eAAe0C,OAASxb,EAAO2Z,SAE9C6D,YAAuBjC,UAC7BiC,EAAiBN,GAAkBK,YAG9Bje,GACH0d,gBACK1d,EAAM0d,YACTzB,aAAciC,oVtBwFf,SAA0BC,EAAWC,kBAAc,OAClDC,EAAc1rB,EAAM6C,OAAO,IAE3B8oB,EAAejpB,EAAa8oB,GAC5BI,EAAiBlpB,EAAa+oB,UAE7BzrB,EAAM+C,uCACX,iHAAU2F,4CACHgjB,EAAY5oB,QAAQ+oB,UACvBH,EAAY5oB,QAAQ+oB,QAAU,IAAIC,SAAQ,SAACC,EAASC,GAClDN,EAAY5oB,QAAQipB,QAAUA,EAC9BL,EAAY5oB,QAAQkpB,OAASA,MAI7BN,EAAY5oB,QAAQmpB,SACtBC,aAAaR,EAAY5oB,QAAQmpB,SAGnCP,EAAY5oB,QAAQmpB,QAAUE,WAAWA,EAAXA,QAAW,0FAChCT,EAAY5oB,QAAQmpB,sBAEzBP,EAAY5oB,iBAAsB6oB,iBAAkBjjB,2BAAhCqjB,wEAEpBL,EAAY5oB,QAAQkpB,6CAEbN,EAAY5oB,QAAQ+oB,oFAE5BD,uBAEIF,EAAY5oB,QAAQ+oB,sGAxBlB9oB,GA0BX,CAAC4oB,EAAcC,2SI1IK,SAACjrB,8BAAUqB,uDAEjCrB,EAAQyO,GAAczO,GAGtBqB,GAAW+K,UAAwB/K,OAM7B2M,EAAcjM,EAHF1C,EAAM6C,OAAO,IAGcC,SAG7CqB,OAAO+C,OAAOyH,SACThO,GACHqB,UACAhB,MAAOkK,OAITlJ,EAAQ6H,OAAO0I,SAAS1Q,SAAQ,YAC9BQ,EAAOsM,IAAc3N,cAIjByN,EAAW/L,EAAaiM,IAAc3N,OAC5C2N,IAAcF,SAAWA,SAClBE,IAAc3N,MAGrBmD,OAAO+C,OACLyH,IACAnN,EAAYiN,IAAWtD,WAAYiE,GAAczO,WAY/CgO,IARF+B,SACS0b,IAATznB,QACAsJ,iBACAhO,kBACAoP,eACAC,aACAC,iBACAlE,uBAIIghB,EAAkB3pB,EAAa6M,GAG/BnC,EAAUpN,EAAM+C,aACpB,SAACsK,EAAOU,OAEDA,EAAOpK,WACVE,QAAQC,KAAK,CAAEiK,WACT,IAAIhK,MAAM,qCAIX,UACF0K,IAAWrD,cAEV9J,MAAMC,QAAQ8qB,KACdA,IACA,CAACA,MACL3rB,QACA,SAAC4rB,EAAGC,UAAYA,EAAQD,EAAGve,EAAQV,EAAOsB,MAAkB2d,IAC5Djf,KAGJ,CAACoB,EAAU4d,EAAiB1d,MAIG3O,EAAMwsB,WAAWpf,UAAoB,kBACpEA,EAAQa,EAAc,CAAEtK,KAAMhE,EAAQC,UADjC6sB,OAAcje,OAKfnB,EAAQ7L,YACRiN,IAAWpD,oBAAoBA,IACnCohB,EACA,CAAEhpB,SAAUkL,MAGdxK,OAAO+C,OAAOyH,IAAe,CAC3BtB,QACAmB,iBAII7J,EAAU3E,EAAMwS,SACpB,kBACE9N,EACElD,EAAYiN,IAAW9J,QAASynB,EAAa,CAC3C3oB,SAAUkL,UAIdF,EACAE,EACAyd,UAEG5qB,EAAYiN,IAAWnD,YAAa,GAAI,CAAE7H,SAAUkL,QAG3DA,IAAchK,QAAUA,MAIpB6C,EAAaxH,EAAMwS,SACrB,kBACEhR,EAAYiN,IAAWjH,WAAYxC,EAAeL,GAAU,CAC1DlB,SAAUkL,MACT7J,IAAIC,MAEPJ,EACA8J,EACAE,UAEGnN,EAAYiN,IAAWlD,eAAgB,GAAI,CAC5C9H,SAAUkL,QAIhBA,IAAcnH,WAAaA,QAGQxH,EAAMwS,SAAQ,mBAC3CvJ,EAAO,GACP0H,EAAW,GACTC,EAAW,GAEX8b,YAAsBllB,GAErBklB,EAAgBtmB,QAAQ,KACvB1C,EAASgpB,EAAgB7Q,QAC/BpL,GAAoB,CAClBC,OACAzH,OACA0H,WACAC,WACAlN,SACA4L,WACAD,aACAwB,iBAAkBpC,IAAWjD,YAC7BmD,sBAIG,CAAC1F,EAAM0H,EAAUC,KACvB,CAACpJ,EAAYkJ,EAAMpB,EAAUD,EAAYZ,EAAUE,IAvB/C1F,OAAM0H,OAAUC,OAyBvBzM,OAAO+C,OAAOyH,IAAe,CAC3B1F,OACA0jB,sBAAiB1jB,GACjB0H,WACAC,aAIFjP,EAAU8M,IAAW9C,qBAAsBgD,SAKvC/C,EAAiB5L,EAAMwS,SACzB,kBACEhR,EAAYiN,IAAW7C,eAAgBpE,EAAY,CACjD/D,SAAUkL,MACT7J,KAAI,mBAAKqC,EAAeZ,EAAGtG,SAE9BwO,EACAjH,EACAmH,EACA1O,UAEGuB,EAAYiN,IAAW5C,mBAAoB,GAAI,CAChDpI,SAAUkL,QAMhBnH,EAAaxH,EAAMwS,SAAQ,eACnB7N,YAAciH,UAEpBpE,EAAW3F,SAAQ,YACZ8C,EAAQsP,MAAK,mBAAK1N,EAAErB,KAAOxB,EAAOwB,OACrCP,EAAQ0B,KAAK3C,MAIViB,IACN,CAAC6C,EAAYoE,IAChB+C,IAAcnH,WAAaA,MAkBrBE,EAAe1H,EAAMwS,SACzB,kBACEhR,EACEiN,IAAW/G,aACXH,EAAiBqE,EAAgB3L,GACjC0O,QAGFF,EACA7C,EACA3L,EACA0O,UAEGnN,EAAYiN,IAAW3C,iBAAkB,GAAI,CAC9CrI,SAAUkL,QAIhBA,IAAcjH,aAAeA,MAGvBK,EAAU/H,EAAMwS,SACpB,kBAAO9K,EAAatB,OAASsB,EAAa,GAAGK,QAAU,KACvD,CAACL,IAEHiH,IAAc5G,QAAUA,EAGxB4G,IAAcJ,YAAc7G,EAAahH,QACvC,SAACksB,EAAK9kB,mBAAoB8kB,EAAQ9kB,EAAYC,WAC9C,IAGFpG,EAAU8M,IAAW1C,4BAA6B4C,SAG5Cke,EAAoBjhB,EACvB/B,QAAO,mBAAKtD,EAAEoH,aACd7I,KAAI,mBAAKyB,EAAErB,MACX6R,OACAtQ,KAAK,KAERmF,EAAiB5L,EAAMwS,SACrB,kBAAM5G,EAAe/B,QAAO,mBAAKtD,EAAEoH,gBAElC/B,EAAgBihB,IAEnBle,IAAc/C,eAAiBA,QAO3B4D,GAAsBzH,GAHxB4iB,OACAL,OACAwC,cAGFne,IAAcgc,qBAAuBA,EACrChc,IAAc2b,kBAAoBA,EAClC3b,IAAcme,qBAAuBA,EAErCnrB,EAAU8M,IAAWzC,YAAa2C,eAI7BA,IAAcJ,YAAgBI,IAAcnH,YAAY3F,SAC3D,YAEE6B,EAAOqpB,OAASvpB,EAAamL,IAAejL,GAG5CA,EAAO4I,eAAiBvL,EAAe0N,IAAWnC,eAAgB,CAChE7I,SAAUkL,IACVjL,WAIFA,EAAO6I,eAAiBxL,EAAe0N,IAAWlC,eAAgB,CAChE9I,SAAUkL,IACVjL,cAKNiL,IAAcjH,aAAe1H,EAAMwS,SACjC,kBACE9K,EAAamC,QAAO,SAAC/B,EAAa3B,UAEhC2B,EAAYC,QAAUD,EAAYC,QAAQ8B,QAAO,mBAQ3CnG,EAAOqE,QAPK,SAAVgB,EAAU,UACdhB,EAAQ8B,QAAO,mBACTnG,EAAOqE,QACFgB,EAAQrF,EAAOqE,SAEjBrE,EAAOiK,aACbvH,OANW,CAQC1C,EAAOqE,SAEjBrE,EAAOiK,eAIZ7F,EAAYC,QAAQ3B,SACtB0B,EAAYsE,oBAAsBrL,EAChC0N,IAAWrC,oBACX,CAAE3I,SAAUkL,IAAe7G,cAAa+C,MAAO1E,IAGjD2B,EAAYuE,oBAAsBtL,EAChC0N,IAAWpC,oBACX,CAAE5I,SAAUkL,IAAe7G,cAAa+C,MAAO1E,aAQvD,CAACuB,EAAciH,EAAaF,IAG9BE,IAAcqe,aAAe,UAAIre,IAAcjH,cAAcW,UAK7DsG,IAAc1C,WAAajM,EAAM+C,aAC/B,YACEiE,EAAIwF,YAAczL,EAAe0N,IAAWjC,YAAa,CACvD/I,SAAUkL,IACV3H,QAIFA,EAAI+T,SAAWvT,EAAW1C,KAAI,gBACtBhF,EAAQkH,EAAIoK,OAAO1N,EAAOwB,IAE1B+F,EAAO,CACXvH,SACAsD,MACAlH,gBAIFmL,EAAKwB,aAAe1L,EAAe0N,IAAWhC,aAAc,CAC1DhJ,SAAUkL,IACV1D,SAIFA,EAAK8hB,OAASvpB,EAAamL,IAAejL,EAAQ,CAChDsD,MACAiE,OACAnL,UAGKmL,KAGTjE,EAAImK,MAAQvF,EAAe9G,KAAI,mBAC7BkC,EAAI+T,SAAS9G,MAAK,mBAAQhJ,EAAKvH,OAAOwB,KAAOxB,EAAOwB,SAItDvD,EAAU8M,IAAWxC,WAAYjF,EAAK,CAAEvD,SAAUkL,QAEpD,CAACF,EAAUE,EAAanH,EAAYoE,IAGtC+C,IAAczC,cAAgBnL,EAAe0N,IAAWvC,cAAe,CACrEzI,SAAUkL,MAGZA,IAAcxC,kBAAoBpL,EAChC0N,IAAWtC,kBACX,CACE1I,SAAUkL,MAIdhN,EAAU8M,IAAW/B,iBAAkBiC,KAEhCA,sD,kOmB/RMse,UAzJG,WACd,IAAMC,EAAMC,cACNC,EAAUC,cAFI,EAGgBC,mBAAS,YAHzB,mBAGbC,EAHa,aAI0BD,mBAAS,UAJnC,mBAIbE,EAJa,aAKgCF,mBAAS,KALzC,mBAKbG,EALa,aAMUH,oBAAS,IANnB,mBAMJI,GANI,aAOIJ,mBAAS,IAPb,mBAObK,EAPa,KAOPC,EAPO,OAQUN,oBAAS,GARnB,gCASsBA,oBAAS,IAT/B,gCAUkBA,mBAAS,KAV3B,gCAWkBA,mBAAS,KAX3B,gCAYkBA,mBAAS,KAZ3B,mBAoDdO,GApDc,UAgDLF,EAAKvnB,OAIP,uCAAG,8BAAAwC,EAAA,6DACZ8kB,GAAW,GADC,SAESR,EAAIY,WAFb,OAENC,EAFM,OAGZL,GAAW,GACU,KAAjBK,EAAO9mB,OACHyJ,EAAOqd,EAAOJ,KAAK7oB,KAAI,SAACkpB,GAAD,MAAY,CACnCC,QAASD,EAAMC,QACfC,KAAMF,EAAME,KACZvuB,QACI,mCACI,sBAAMwuB,MAAM,iDAAZ,qBAIZP,EAAQld,IAER0d,MAAML,EAAO9mB,OAhBL,2CAAH,sDA4BP4hB,EAAU,CACZhf,QAAQ,EACRwkB,WAAY,WACZd,aACAe,eAAgB,OAChBd,kBACAC,qBACAc,WAAY,SAACvnB,EAAK6D,GACd2jB,EAAMxnB,EAAI,MAKZwnB,EAAQ,SAACC,GAEXrB,EAAQ,oBAAD,OADIqB,EACJ,gBAgBX,OAJAtrB,qBAAU,WACN0qB,MACD,IAGC,qCACI,cAACa,EAAA,EAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,UAAWrpB,KAAM,mBAC1B,CAAEqpB,MAAO,WAAYrpB,KAAM,kBAAmBspB,QAAQ,IAE1DjhB,MAAO,oCAGX,cAACkhB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,eAACJ,EAAA,EAAD,CAAKhuB,UAAU,OAAf,UACI,cAACiuB,EAAA,EAAD,CAAKI,GAAI,EAAT,SACI,cAACL,EAAA,EAAD,CAAKhuB,UAAU,oFAKnB,cAACiuB,EAAA,EAAD,CAAKI,GAAI,EAAT,SACI,qBAAKruB,UAAU,2BAAf,SACI,eAACsuB,EAAA,EAAD,CAAQC,QAAQ,SAASvuB,UAAU,YAAY+Q,QAAS,WA7BxFub,EAAQ,sCA6BwB,UACI,mBAAGtsB,UAAU,sBADjB,oBAMZ,cAACguB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAcre,KAAMid,EAAMhpB,QAhI3C,CACX,CACIiqB,MAAO,UACPU,KAAM,UACNzG,QAAS,CACLhf,QAAQ,EACRkN,MAAM,IAGd,CACI6X,MAAO,eACPU,KAAM,OACNzG,QAAS,CACLhf,QAAQ,EACRkN,MAAM,KAkHyD8R,QAASA,sB,iCC1JxF,sDAEe,SAAS0G,EAAiBlsB,GACvC,IAAIT,EAAM4sB,YAAgBnsB,GAC1B,OAAON,uBAAY,WACjB,OAAOH,EAAIE,SAAWF,EAAIE,QAAQ2sB,MAAM7sB,EAAK8sB,aAC5C,CAAC9sB,M,iCCNN,WAmBe4sB,IARf,SAAyB1vB,GACvB,IAAI8C,EAAMC,iBAAO/C,GAIjB,OAHAqD,qBAAU,WACRP,EAAIE,QAAUhD,IACb,CAACA,IACG8C,I,iCChBT,sDAYe,SAAS+sB,EAAiBC,EAAaC,EAAOC,EAAUC,QACrD,IAAZA,IACFA,GAAU,GAGZ,IAAIxD,EAAUgD,YAAiBO,GAC/B3sB,qBAAU,WACR,IAAIsK,EAAgC,oBAAhBmiB,EAA6BA,IAAgBA,EAEjE,OADAniB,EAAOsb,iBAAiB8G,EAAOtD,EAASwD,GACjC,WACL,OAAOtiB,EAAO4a,oBAAoBwH,EAAOtD,EAASwD,MAEnD,CAACH,M,iCCxBN,6CAsBe,SAASI,IACtB,IAAIC,EAAUptB,kBAAO,GACjBqtB,EAAYrtB,kBAAO,WACrB,OAAOotB,EAAQntB,WAOjB,OALAK,qBAAU,WACR,OAAO,WACL8sB,EAAQntB,SAAU,KAEnB,IACIotB,EAAUptB,U,iCChCnB,6CA0Be,SAASqtB,IACtB,OAAO7C,mBAAS,Q,iCC3BlB,6CAmBe,SAAS8C,EAAYtwB,GAClC,IAAI8C,EAAMC,iBAAO,MAIjB,OAHAM,qBAAU,WACRP,EAAIE,QAAUhD,KAET8C,EAAIE,U,iCCvBb,iDAoDe4rB,IAhCG,SAAC/tB,GAA+C,IAAD,IACtD0vB,EAAaC,cAAbD,UAEP,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,sBAAKvvB,UAAU,iBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,eAAC,IAAD,CAAYyvB,UAAW,CAAEzvB,UAAW,OAApC,UACI,cAAC,IAAW0vB,KAAZ,CAAiBC,KAAK,mBAAtB,mBACA,cAAC,IAAWD,KAAZ,CAAiBE,QAAgC,IAAxB/vB,EAAMgwB,cAAyBF,KAAI,0BAAoB,UAAA9vB,EAAMiwB,eAAN,eAAe1rB,KAAMmrB,EAAzC,cAA5D,UAA6H,UAAA1vB,EAAMiwB,eAAN,eAAetB,OAAQ,YAEnJ3uB,EAAMguB,gBAAgB7pB,KAAI,SAAC+rB,EAAMhmB,GAAW,IAAD,EACxC,OAAOgmB,EAAKhC,OACR,cAAC,IAAW2B,KAAZ,CAAiB3B,QAAM,EAAvB,SACKgC,EAAKjC,OADmB/jB,GAI7B,cAAC,IAAW2lB,KAAZ,CAA6BC,MAA8B,IAAxB9vB,EAAMgwB,cAA0BE,EAAKtrB,KAArC,0BAA8D,UAAA5E,EAAMiwB,eAAN,eAAe1rB,KAAMmrB,GAAnF,OAA+FQ,EAAKtrB,MAAvI,SACKsrB,EAAKjC,OADY/jB,WAOtC,oBAAI/J,UAAU,aAAd,SAA4BH,EAAMiN,iB,yGC5CtC,IAAIkjB,Q,oBCFdC,EAAY,CAAC,aAmBnB,IAAMC,EAAsBhxB,cAAiB,SAACixB,EAAMruB,GAC9C,IATwB6tB,EAU1BS,EACED,EADFC,UAEEvwB,EArBN,SAAuCwwB,EAAQC,GAAY,GAAc,MAAVD,EAAgB,MAAO,GAAI,IAA2DtoB,EAAK1C,EAA5DsH,EAAS,GAAQ4jB,EAAaltB,OAAO4N,KAAKof,GAAqB,IAAKhrB,EAAI,EAAGA,EAAIkrB,EAAWjrB,OAAQD,IAAO0C,EAAMwoB,EAAWlrB,GAAQirB,EAAS9Y,QAAQzP,IAAQ,IAAa4E,EAAO5E,GAAOsoB,EAAOtoB,IAAQ,OAAO4E,EAqB5R6jB,CAA8BL,EAAMF,GAJU,EAMpCQ,YAAeptB,OAAO+C,OAAO,CACjDsqB,QAAS,KACR7wB,IAFI8wB,EANmD,oBASpDC,EAAgBnC,aAAiB,SAAAxoB,GACrC0qB,EAAYP,UAAUnqB,GACT,MAAbmqB,GAA6BA,EAAUnqB,MAGzC,QAtB4B0pB,EAsBV9vB,EAAM8vB,OArBQ,MAAhBA,EAAKkB,QAqBahxB,EAAM2J,OAAuB,WAAf3J,EAAM2J,KAQlCsnB,cAAK,IAAKztB,OAAO+C,OAAO,CAC1CtE,IAAKA,GACJjC,EAAO,CACRuwB,UAAWA,KAVSU,cAAK,IAAKztB,OAAO+C,OAAO,CAC1CtE,IAAKA,GACJjC,EAAO8wB,EAAa,CACrBP,UAAWQ,QAUjBV,EAAOa,YAAc,SACNb,O,gJCWAc,EA9CM,SAAC,GAOwB,IAN1CC,EAMyC,EANzCA,cACAC,EAKyC,EALzCA,SACAC,EAIyC,EAJzCA,SACAC,EAGyC,EAHzCA,SACAC,EAEyC,EAFzCA,cACAC,EACyC,EADzCA,UAMIC,EAAUC,YAAQ,CAAEP,gBAAeC,aAEpCG,IACCE,EAAUF,GAR2B,MAgBrCE,EAJAE,EAZqC,EAYrCA,aACAC,EAbqC,EAarCA,SACAC,EAdqC,EAcrCA,QACaC,EAfwB,EAerCC,UAAaD,OAGjB,OACI,sBAAMR,SAAUK,EAAaL,GAAU,SAACnrB,GAAOlD,QAAQ+uB,IAAI7rB,MAAOjG,UAAWsxB,EAAWS,YAAU,EAAlG,SACKvxB,MAAMC,QAAQ0wB,GACTA,EAASntB,KAAI,SAACguB,GACV,OAAOA,EAAMnyB,OAASmyB,EAAMnyB,MAAM2uB,KAC5BtvB,IAAM+yB,cAAcD,EAAMnvB,KAA1B,0CAEWmvB,EAAMnyB,OAFjB,IAGQ6xB,WACA3pB,IAAKiqB,EAAMnyB,MAAM2uB,KACjBoD,SACAD,cAGRK,KAEVb,K,qEC7CZe,EAAgB,SAAC,GAAqE,IAAnE1D,EAAkE,EAAlEA,KAAM2D,EAA4D,EAA5DA,YAAaC,EAA+C,EAA/CA,YAAaR,EAAkC,EAAlCA,OAAQF,EAA0B,EAA1BA,SAAU1xB,EAAgB,EAAhBA,UAAgB,EAC/CwsB,oBAAS,GADsC,mBAChF6F,EADgF,KAClEC,EADkE,KAGvF,OACI,mCACI,eAACC,EAAA,EAAD,CAAYvyB,UAAU,OAAtB,UACI,cAACwyB,EAAA,EAAKC,QAAN,yBACI5vB,KAAMwvB,EAAe,OAAS,WAC9BF,YAAaA,EACb3D,KAAMA,EACNpqB,GAAIoqB,EACJkE,GAAG,QACH5wB,IAAK,SAAC6wB,GACEP,GAAaA,EAAYO,IAEjC3yB,UAAWA,EACX4yB,aAAWhB,IAAUA,EAAOpD,KACvBkD,EAAWA,EAASlD,GAAQ,IAXrC,IAYIqE,aAAcrE,KAElB,qBACIxuB,UAAW8yB,IAAW,mBAAoB,uBAAwB,CAC9D,gBAAiBT,IAErBU,gBAAeV,EAAe,OAAS,QAJ3C,SAKI,sBACIryB,UAAU,eACV+Q,QAAS,WACLuhB,GAAiBD,cA4N9BW,EApMG,SAAC,GAeuC,IAdtDlF,EAcqD,EAdrDA,MACAjrB,EAaqD,EAbrDA,KACA2rB,EAYqD,EAZrDA,KACA2D,EAWqD,EAXrDA,YACAT,EAUqD,EAVrDA,SACAE,EASqD,EATrDA,OACA5xB,EAQqD,EARrDA,UACAizB,EAOqD,EAPrDA,eACAC,EAMqD,EANrDA,eACAd,EAKqD,EALrDA,YACAjB,EAIqD,EAJrDA,SACApJ,EAGqD,EAHrDA,QACAoL,EAEqD,EAFrDA,UACGC,EACkD,sKAE/CC,EAAgB,aAATxwB,EAAsB,WAAsB,WAATA,EAAoB,SAAoB,eAATA,EAAwB,aAAe,QAEtH,OACI,mCACc,WAATA,EACG,+CAAOA,KAAMA,EAAM2rB,KAAMA,GAAWkD,EAAWA,EAASlD,GAAQ,IAAS4E,IAEzE,mCACc,aAATvwB,EACG,mCACI,eAAC2vB,EAAA,EAAKc,MAAN,CAAYtzB,UAAWkzB,EAAvB,UACKpF,EACG,qCACK,IACD,cAAC0E,EAAA,EAAKe,MAAN,CAAYvzB,UAAWizB,EAAvB,SAAwCnF,IAF5C,IAEiEqD,EAAU,OAE3E,KACJ,cAAC,EAAD,CACI3C,KAAMA,EACN2D,YAAaA,EACbC,YAAaA,EACbR,OAAQA,EACRF,SAAUA,EACV1xB,UAAWA,IAGd4xB,GAAUA,EAAOpD,GACd,cAACgE,EAAA,EAAKC,QAAQe,SAAd,CAAuB3wB,KAAK,UAAU7C,UAAU,UAAhD,SACI,sBAAMyzB,wBAAyB,CAACC,OAAQ9B,EAAOpD,GAAP,aAE5C,UAIZ,mCACc,WAAT3rB,EACG,mCACI,eAAC2vB,EAAA,EAAKc,MAAN,CAAYtzB,UAAWkzB,EAAvB,UACKpF,EAAQ,cAAC0E,EAAA,EAAKe,MAAN,CAAYvzB,UAAWizB,EAAvB,SAAwCnF,IAAsB,KAEvE,cAAC,IAAD,CACI6D,QAASyB,EAAU,QACnBnH,OAAQ,oBAAG0H,MAASlnB,EAAZ,EAAYA,SAAUzN,EAAtB,EAAsBA,MAAOwvB,EAA7B,EAA6BA,KAAM1sB,EAAnC,EAAmCA,IAAnC,OACJ,cAAC,IAAD,aACI9B,UAAW,iBAAmB4xB,GAAUA,EAAOpD,GAAQ,aAAe,IACtEoF,gBAAgB,eAChBC,SAAU/xB,EACV0sB,KAAMA,EACNzG,QAASA,EACT/oB,MAAO+oB,EAAQ5U,MAAK,SAAC2gB,GAAD,OAAYA,EAAO90B,QAAUA,MAAU,KAC3DyN,SAAU,SAACsnB,GACPtnB,EAASsnB,EAAe/0B,OACrBo0B,EAAWY,eAAe,iBACzBZ,EAAU,aAAiBW,EAAe/0B,SAG9Co0B,KAGZ5E,KAAMA,IAGToD,GAAUA,EAAOpD,GACd,cAACgE,EAAA,EAAKC,QAAQe,SAAd,CAAuB3wB,KAAK,UAA5B,SACI,sBAAM4wB,wBAAyB,CAACC,OAAQ9B,EAAOpD,GAAP,aAE5C,UAIZ,mCACc,aAAT3rB,GAAgC,UAATA,GAA6B,WAATA,EACxC,mCACI,eAAC2vB,EAAA,EAAKc,MAAN,CAAYtzB,UAAWkzB,EAAvB,UACI,cAACV,EAAA,EAAKyB,MAAN,yBACIpxB,KAAMA,EACNirB,MAAOA,EACPU,KAAMA,EACNpqB,GAAIoqB,EACJ1sB,IAAK,SAAC6wB,GACEP,GAAaA,EAAYO,IAEjC3yB,UAAWA,EACX4yB,aAAWhB,IAAUA,EAAOpD,KACvBkD,EAAWA,EAASlD,GAAQ,IAC7B4E,IAGPxB,GAAUA,EAAOpD,GACd,cAACgE,EAAA,EAAKC,QAAQe,SAAd,CAAuB3wB,KAAK,UAA5B,SACI,sBAAM4wB,wBAAyB,CAACC,OAAQ9B,EAAOpD,GAAP,aAE5C,UAIZ,mCACc,eAAT3rB,EACG,mCACI,eAAC2vB,EAAA,EAAKc,MAAN,CAAYtzB,UAAWkzB,EAAvB,UACKpF,EAAQ,cAAC0E,EAAA,EAAKe,MAAN,CAAYvzB,UAAWizB,EAAvB,SAAwCnF,IAAsB,KAGvE,qBAAK9tB,UAAW4xB,GAAUA,EAAOpD,GAAQ,aAAe,GAAxD,SACI,cAAC,IAAD,CACImD,QAASyB,EAAU,QACnBnH,OAAQ,oBAAG0H,MAAmB30B,GAAtB,EAAYyN,SAAZ,EAAsBzN,OAAOwvB,EAA7B,EAA6BA,KAA7B,EAAmC1sB,IAAnC,OACJ,cAAC,IAAD,aACIoyB,WAAW,EACXC,gBAAc,EACdC,WAAW,QACXC,GAAI,EACJC,WAAW,qBACXC,YAAY,OACZ/F,KAAMA,EACNxvB,MAAOA,EACPyN,SAAU,SAAC+nB,GACJpB,EAAWY,eAAe,iBACzBZ,EAAU,aAAiBoB,KAG/BpB,KAGZ5E,KAAMA,MAIboD,GAAUA,EAAOpD,GACd,cAACgE,EAAA,EAAKC,QAAQe,SAAd,CAAuB3wB,KAAK,UAA5B,SACI,sBAAM4wB,wBAAyB,CAACC,OAAQ9B,EAAOpD,GAAP,aAE5C,KACH2E,GAAwB,UAIjC,eAACX,EAAA,EAAKc,MAAN,CAAYtzB,UAAWkzB,EAAvB,UACKpF,EAAQ,cAAC0E,EAAA,EAAKe,MAAN,CAAYvzB,UAAWizB,EAAvB,SAAwCnF,IAAsB,KAEvE,cAAC0E,EAAA,EAAKC,QAAN,qCACI5vB,KAAMA,EACNsvB,YAAaA,EACb3D,KAAMA,EACNpqB,GAAIoqB,EACJkE,GAAIW,EACJvxB,IAAK,SAAC6wB,GACCP,GACCA,EAAYO,IAGpB3yB,UAAWA,EACX4yB,aAAWhB,IAAUA,EAAOpD,KACvBkD,EAAWA,EAASlD,GAAQ,IAC7B4E,GAdR,IAeIP,aAAcrE,EAflB,SAgBK2C,GAAsB,QAG1BS,GAAUA,EAAOpD,GACd,cAACgE,EAAA,EAAKC,QAAQe,SAAd,CAAuB3wB,KAAK,UAA5B,SACI,sBAAM4wB,wBAAyB,CAACC,OAAQ9B,EAAOpD,GAAP,aAE5C,KACH2E,GAAwB,oB,iCCjP7E,qDAUMsB,EAAkBC,sBAAW,SAAC70B,EAA6BiC,GAI7D,OACI,uBACIe,KAAK,OACL7C,UAAU,oBACV+Q,QAASlR,EAAMkR,QACf/R,MAAOa,EAAMb,MACbyN,SATkB,WACtB1J,QAAQ+uB,IAAI,uBASRhwB,IAAKA,OAUX6yB,EAA2BD,sBAAW,SAAC70B,EAAsCiC,GAAvC,OACxC,sBAAK9B,UAAU,cAAc8B,IAAKA,EAAlC,UACI,uBACIe,KAAK,OACL7C,UAAU,kCACV+Q,QAASlR,EAAMkR,QACf/R,MAAOa,EAAMb,MACb41B,UAAQ,IAEZ,qBAAK50B,UAAU,qBAAf,SACI,sBAAMA,UAAU,wDAAhB,SACI,mBAAGA,UAAU,6CAkDd60B,IA5BS,SAACh1B,GAErB,IAAMi1B,GAAuC,KAA9Bj1B,EAAMq0B,YAAa,GAAkB,cAACO,EAAD,IAAsB,cAACE,EAAD,IAE1E,OACI,mCAEI,cAAC,IAAD,CACII,YAAaD,EACbE,cAAen1B,EAAMw0B,GACrBr0B,UAAW8yB,IAAW,eAAgBjzB,EAAMo1B,YAC5CC,SAAUr1B,EAAMb,MAChByN,SAAU,SAAC+nB,GAAD,OAAU30B,EAAM4M,SAAS+nB,IACnCL,eAAgBt0B,EAAMs0B,eACtBC,WAAW,UACXG,YAAa10B,EAAM00B,YACnBD,WAAYz0B,EAAMy0B,YAAc,aAChCa,QAASt1B,EAAMs1B,QACfC,QAASv1B,EAAMu1B,QACfC,YAAax1B,EAAMw1B,YACnBC,mBAAoBz1B,EAAMy1B,mBAC1BC,OAAQ11B,EAAM01B,OACd1C,aAAa,Y,kCCvF7B,uBACI2C,EAAkC,qBAAXC,GAC3BA,EAAOC,WACsB,gBAA7BD,EAAOC,UAAUC,QACbC,EAA4B,qBAAbzzB,SAUJyzB,OAASJ,EAAgBpzB,kBAAkBC,c,kPCd3C,GACH,E,SCODwzB,EAAY,YACZC,EAAS,SACTC,EAAW,WACXC,EAAU,UACVC,EAAU,UA6FjBC,EAA0B,SAAUC,GAGtC,SAASD,EAAWr2B,EAAOiB,GACzB,IAAIs1B,EAEJA,EAAQD,EAAiBE,KAAKC,KAAMz2B,EAAOiB,IAAYw1B,KACvD,IAGIC,EADAC,EAFc11B,MAEuB21B,WAAa52B,EAAM62B,MAAQ72B,EAAM22B,OAuB1E,OArBAJ,EAAMO,aAAe,KAEjB92B,EAAM+2B,GACJJ,GACFD,EAAgBT,EAChBM,EAAMO,aAAeZ,GAErBQ,EAAgBP,EAIhBO,EADE12B,EAAMg3B,eAAiBh3B,EAAMi3B,aACfjB,EAEAC,EAIpBM,EAAM7pB,MAAQ,CACZwqB,OAAQR,GAEVH,EAAMY,aAAe,KACdZ,EA/BTa,YAAef,EAAYC,GAkC3BD,EAAWgB,yBAA2B,SAAkC/G,EAAMjiB,GAG5E,OAFaiiB,EAAKyG,IAEJ1oB,EAAU6oB,SAAWlB,EAC1B,CACLkB,OAAQjB,GAIL,MAmBT,IAAIqB,EAASjB,EAAW3yB,UA0OxB,OAxOA4zB,EAAOC,kBAAoB,WACzBd,KAAKe,cAAa,EAAMf,KAAKK,eAG/BQ,EAAOG,mBAAqB,SAA4B/2B,GACtD,IAAIg3B,EAAa,KAEjB,GAAIh3B,IAAc+1B,KAAKz2B,MAAO,CAC5B,IAAIk3B,EAAST,KAAK/pB,MAAMwqB,OAEpBT,KAAKz2B,MAAM+2B,GACTG,IAAWhB,GAAYgB,IAAWf,IACpCuB,EAAaxB,GAGXgB,IAAWhB,GAAYgB,IAAWf,IACpCuB,EAAatB,GAKnBK,KAAKe,cAAa,EAAOE,IAG3BJ,EAAOK,qBAAuB,WAC5BlB,KAAKmB,sBAGPN,EAAOO,YAAc,WACnB,IACIC,EAAMjB,EAAOF,EADbrL,EAAUmL,KAAKz2B,MAAMsrB,QAWzB,OATAwM,EAAOjB,EAAQF,EAASrL,EAET,MAAXA,GAAsC,kBAAZA,IAC5BwM,EAAOxM,EAAQwM,KACfjB,EAAQvL,EAAQuL,MAEhBF,OAA4B1iB,IAAnBqX,EAAQqL,OAAuBrL,EAAQqL,OAASE,GAGpD,CACLiB,KAAMA,EACNjB,MAAOA,EACPF,OAAQA,IAIZW,EAAOE,aAAe,SAAsBO,EAAUL,QACnC,IAAbK,IACFA,GAAW,GAGM,OAAfL,GAEFjB,KAAKmB,qBAEDF,IAAexB,EACjBO,KAAKuB,aAAaD,GAElBtB,KAAKwB,eAEExB,KAAKz2B,MAAMg3B,eAAiBP,KAAK/pB,MAAMwqB,SAAWjB,GAC3DQ,KAAKlR,SAAS,CACZ2R,OAAQlB,KAKdsB,EAAOU,aAAe,SAAsBD,GAC1C,IAAIG,EAASzB,KAETI,EAAQJ,KAAKz2B,MAAM62B,MACnBsB,EAAY1B,KAAKx1B,QAAUw1B,KAAKx1B,QAAQ21B,WAAamB,EAErDK,EAAQ3B,KAAKz2B,MAAMq4B,QAAU,CAACF,GAAa,CAACG,IAASC,YAAY9B,MAAO0B,GACxEK,EAAYJ,EAAM,GAClBK,EAAiBL,EAAM,GAEvBM,EAAWjC,KAAKoB,cAChBc,EAAeR,EAAYO,EAAS/B,OAAS+B,EAAS7B,OAGrDkB,IAAalB,GAAS+B,EACzBnC,KAAKoC,aAAa,CAChB3B,OAAQf,IACP,WACD+B,EAAOl4B,MAAM84B,UAAUN,OAK3B/B,KAAKz2B,MAAM+4B,QAAQP,EAAWC,GAC9BhC,KAAKoC,aAAa,CAChB3B,OAAQhB,IACP,WACDgC,EAAOl4B,MAAMg5B,WAAWR,EAAWC,GAEnCP,EAAOe,gBAAgBN,GAAc,WACnCT,EAAOW,aAAa,CAClB3B,OAAQf,IACP,WACD+B,EAAOl4B,MAAM84B,UAAUN,EAAWC,cAM1CnB,EAAOW,YAAc,WACnB,IAAIiB,EAASzC,KAETqB,EAAOrB,KAAKz2B,MAAM83B,KAClBY,EAAWjC,KAAKoB,cAChBW,EAAY/B,KAAKz2B,MAAMq4B,aAAUpkB,EAAYqkB,IAASC,YAAY9B,MAEjEqB,IAAQc,GASbnC,KAAKz2B,MAAMm5B,OAAOX,GAClB/B,KAAKoC,aAAa,CAChB3B,OAAQd,IACP,WACD8C,EAAOl5B,MAAMo5B,UAAUZ,GAEvBU,EAAOD,gBAAgBP,EAASZ,MAAM,WACpCoB,EAAOL,aAAa,CAClB3B,OAAQjB,IACP,WACDiD,EAAOl5B,MAAMq5B,SAASb,aAlB1B/B,KAAKoC,aAAa,CAChB3B,OAAQjB,IACP,WACDiD,EAAOl5B,MAAMq5B,SAASb,OAqB5BlB,EAAOM,mBAAqB,WACA,OAAtBnB,KAAKU,eACPV,KAAKU,aAAamC,SAClB7C,KAAKU,aAAe,OAIxBG,EAAOuB,aAAe,SAAsBU,EAAWC,GAIrDA,EAAW/C,KAAKgD,gBAAgBD,GAChC/C,KAAKlR,SAASgU,EAAWC,IAG3BlC,EAAOmC,gBAAkB,SAAyBD,GAChD,IAAIE,EAASjD,KAETvI,GAAS,EAcb,OAZAuI,KAAKU,aAAe,SAAUjI,GACxBhB,IACFA,GAAS,EACTwL,EAAOvC,aAAe,KACtBqC,EAAStK,KAIbuH,KAAKU,aAAamC,OAAS,WACzBpL,GAAS,GAGJuI,KAAKU,cAGdG,EAAO2B,gBAAkB,SAAyB3N,EAASM,GACzD6K,KAAKgD,gBAAgB7N,GACrB,IAAI+N,EAAOlD,KAAKz2B,MAAMq4B,QAAU5B,KAAKz2B,MAAMq4B,QAAQl2B,QAAUm2B,IAASC,YAAY9B,MAC9EmD,EAA0C,MAAXtO,IAAoBmL,KAAKz2B,MAAM65B,eAElE,GAAKF,IAAQC,EAAb,CAKA,GAAInD,KAAKz2B,MAAM65B,eAAgB,CAC7B,IAAIC,EAAQrD,KAAKz2B,MAAMq4B,QAAU,CAAC5B,KAAKU,cAAgB,CAACwC,EAAMlD,KAAKU,cAC/DqB,EAAYsB,EAAM,GAClBC,EAAoBD,EAAM,GAE9BrD,KAAKz2B,MAAM65B,eAAerB,EAAWuB,GAGxB,MAAXzO,GACFE,WAAWiL,KAAKU,aAAc7L,QAb9BE,WAAWiL,KAAKU,aAAc,IAiBlCG,EAAOlL,OAAS,WACd,IAAI8K,EAAST,KAAK/pB,MAAMwqB,OAExB,GAAIA,IAAWlB,EACb,OAAO,KAGT,IAAIgE,EAAcvD,KAAKz2B,MACnBsxB,EAAW0I,EAAY1I,SAgBvB2I,GAfMD,EAAYjD,GACFiD,EAAY/C,aACX+C,EAAYhD,cACnBgD,EAAYrD,OACbqD,EAAYnD,MACbmD,EAAYlC,KACTkC,EAAY1O,QACL0O,EAAYH,eACnBG,EAAYjB,QACTiB,EAAYhB,WACbgB,EAAYlB,UACfkB,EAAYb,OACTa,EAAYZ,UACbY,EAAYX,SACbW,EAAY3B,QACV1H,YAA8BqJ,EAAa,CAAC,WAAY,KAAM,eAAgB,gBAAiB,SAAU,QAAS,OAAQ,UAAW,iBAAkB,UAAW,aAAc,YAAa,SAAU,YAAa,WAAY,aAEjP,OAGE36B,IAAM+yB,cAAc8H,IAAuBC,SAAU,CACnDh7B,MAAO,MACc,oBAAbmyB,EAA0BA,EAAS4F,EAAQ+C,GAAc56B,IAAM+6B,aAAa/6B,IAAMg7B,SAASC,KAAKhJ,GAAW2I,KAIlH5D,EAzSqB,CA0S5Bh3B,IAAMk7B,WA+LR,SAASC,KA7LTnE,EAAWoE,YAAcP,IACzB7D,EAAWqE,UA0LP,GAIJrE,EAAWsE,aAAe,CACxB5D,IAAI,EACJE,cAAc,EACdD,eAAe,EACfL,QAAQ,EACRE,OAAO,EACPiB,MAAM,EACNiB,QAASyB,EACTxB,WAAYwB,EACZ1B,UAAW0B,EACXrB,OAAQqB,EACRpB,UAAWoB,EACXnB,SAAUmB,GAEZnE,EAAWL,UAAYA,EACvBK,EAAWJ,OAASA,EACpBI,EAAWH,SAAWA,EACtBG,EAAWF,QAAUA,EACrBE,EAAWD,QAAUA,EACNC,O,iCCvmBA,SAAS1F,EAA8BH,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEItoB,EAAK1C,EAFLsH,EAAS,GACT4jB,EAAaltB,OAAO4N,KAAKof,GAG7B,IAAKhrB,EAAI,EAAGA,EAAIkrB,EAAWjrB,OAAQD,IACjC0C,EAAMwoB,EAAWlrB,GACbirB,EAAS9Y,QAAQzP,IAAQ,IAC7B4E,EAAO5E,GAAOsoB,EAAOtoB,IAGvB,OAAO4E,EAZT,mC,iCCAA,oBACezN,QAAMu7B,cAAc,O,iCCDpB,SAASC,EAAgBC,EAAGC,GAMzC,OALAF,EAAkBr3B,OAAOw3B,gBAAkB,SAAyBF,EAAGC,GAErE,OADAD,EAAEG,UAAYF,EACPD,IAGcA,EAAGC,GCLb,SAAS3D,EAAe8D,EAAUC,GAC/CD,EAASx3B,UAAYF,OAAO43B,OAAOD,EAAWz3B,WAC9Cw3B,EAASx3B,UAAU23B,YAAcH,EACjC,EAAeA,EAAUC,G,wHCErBG,EAAU,I,MAAIC,GAEdC,EAAU5C,IAAO6C,QAEjBC,EAAO,uCAAG,WAAOC,EAAQC,EAAUC,GAAzB,yCAAA5zB,EAAA,sDAAiC6zB,EAAjC,+BAAyC,KAAMC,EAA/C,+BAAyD,KAAzD,SAERC,IAAeC,OACfN,EAASA,EAAOtpB,cACZ6pB,EAJI,UAISV,GAJT,OAImBI,GACvBO,EAAO,KALH,KAMAR,EANA,OAOC,QAPD,QAWC,SAXD,MAYC,QAZD,MAaC,WAbD,gCAQIS,EAAc,IAAIC,gBAAgBR,GAAQhhB,WAC9CqhB,GAAO,WAAQE,GATf,oCAcAD,EAAOn3B,KAAKC,UAAU42B,GAdtB,oCAmBJz0B,EADA20B,EACU,CAAE,eAAgB,mBAElB,CAAE,eAAgB,oBAG5BD,IACA10B,EAAQk1B,cAAR,iBAAkCR,IAzB9B,UA2BQS,MAAML,EAAS,CAAEP,SAAQv0B,UAAS+0B,SA3B1C,eA2BJK,EA3BI,iBA6BSA,EAAIC,OA7Bb,SA6BJA,EA7BI,QA+BJ,SAAeD,EAAItF,OA/Bf,KAiCDsF,EAAItF,OAjCH,OAkCC,MAlCD,QAqCC,MArCD,QAwCC,MAxCD,QA2CC,MA3CD,QA8CC,MA9CD,gCAmCAwF,IAAaT,KAAK,UAAU,sBAnC5B,oCAsCAS,IAAaT,KAAK,QAAQQ,EAAKE,KAAO,+BAtCtC,oCAyCAD,IAAaT,KAAK,QAAQQ,EAAKE,KAAO,uBAzCtC,oCA4CAD,IAAaT,KAAK,QAAQQ,EAAKE,KAAO,sBA5CtC,oCA+CAD,IAAaT,KAAK,QAAQQ,EAAKE,KAAO,sBA/CtC,wEAqDRX,IAAeY,OArDP,kBAuDDH,GAvDC,yCAyDRT,IAAeY,OAzDP,kBA0DD,CAAEt2B,MAAO,+BA1DR,0DAAH,0DA8DE,eAAO,IAAD,EACXw1B,GAAQ,UAAAR,EAAQuB,yBAAR,eAA2Bf,QAAS,KAElD,MAAO,CAEHgB,SAAU,WACN,OAAOxB,EAAQuB,mBAEnBE,cAAc,WAAD,4BAAE,4BAAA90B,EAAA,sEACMyzB,EAAQ,OAAQ,oBAAqB,GAAII,GAD/C,cACPW,EADO,yBAEJA,GAFI,2CAAF,kDAAC,GAIdO,MAAM,WAAD,4BAAE,WAAOjtB,GAAP,eAAA9H,EAAA,sEAEcyzB,EAAQ,OAAQ,SAAU3rB,EAAM,IAF9C,cAEC0sB,EAFD,yBAGIA,GAHJ,2CAAF,mDAAC,GAKNQ,OAAO,WAAD,4BAAE,4BAAAh1B,EAAA,sEACayzB,EAAQ,OAAQ,UAAW,GAAII,GAD5C,cACAW,EADA,OAEJS,aAAaC,WAAW,SAFpB,kBAGGV,GAHH,2CAAF,kDAAC,GAKPW,QAAQ,WAAD,4BAAE,4BAAAn1B,EAAA,sEACYyzB,EAAQ,OAAQ,WAAY,GAAII,GAD5C,cACDW,EADC,yBAEEA,GAFF,2CAAF,kDAAC,GAIRY,OAAO,WAAD,4BAAE,WAAOttB,GAAP,eAAA9H,EAAA,sEACayzB,EAAQ,OAAQ,YAAa3rB,EAAM,IADhD,cACA0sB,EADA,yBAEGA,GAFH,2CAAF,mDAAC,GAIPa,aAAa,WAAD,4BAAE,WAAOvtB,GAAP,eAAA9H,EAAA,sEACOyzB,EAAQ,OAAQ,iBAAkB3rB,EAAM,IAD/C,cACN0sB,EADM,yBAEHA,GAFG,2CAAF,mDAAC,GAIbc,aAAa,WAAD,4BAAE,4BAAAt1B,EAAA,sEACOyzB,EAAQ,MAAO,oBAAqB,eAAgBI,GAD3D,cACNW,EADM,yBAEHA,GAFG,2CAAF,kDAAC,GAIbe,aAAa,WAAD,4BAAE,WAAOj5B,GAAP,eAAA0D,EAAA,sEACOyzB,EAAQ,MAAD,4BAA6Bn3B,GAAO,GAAIu3B,GADtD,cACNW,EADM,yBAEHA,GAFG,2CAAF,mDAAC,GAKbgB,WAAW,WAAD,4BAAE,4BAAAx1B,EAAA,sEACSyzB,EAAQ,MAAO,UAAW,eAAgBI,GADnD,cACJW,EADI,yBAEDA,GAFC,2CAAF,kDAAC,GAKXiB,uBAAuB,WAAD,4BAAE,4BAAAz1B,EAAA,sEACHyzB,EAAQ,MAAO,wBAAyB,eAAgBI,GADrD,cAChBW,EADgB,yBAEbA,GAFa,2CAAF,kDAAC,GAKvBkB,YAAY,WAAD,4BAAE,4BAAA11B,EAAA,sEACQyzB,EAAQ,MAAO,WAAY,eAAgBI,GADnD,cACLW,EADK,yBAEFA,GAFE,2CAAF,kDAAC,GAKZmB,gBAAgB,WAAD,4BAAE,4BAAA31B,EAAA,sEACIyzB,EAAQ,MAAO,iBAAkB,eAAgBI,GADrD,cACTW,EADS,yBAENA,GAFM,2CAAF,kDAAC,GAKhBoB,gBAAgB,WAAD,4BAAE,4BAAA51B,EAAA,sEACIyzB,EAAQ,MAAD,iBAA0B,aAAcI,GADnD,cACTW,EADS,yBAENA,GAFM,2CAAF,kDAAC,GAKhBqB,oBAAoB,WAAD,4BAAE,WAAOv5B,GAAP,eAAA0D,EAAA,sEACAyzB,EAAQ,MAAD,qBAA8B,aAAcI,GADnD,cACbW,EADa,yBAEVA,GAFU,2CAAF,mDAAC,GAKpBsB,WAAW,WAAD,4BAAE,4BAAA91B,EAAA,sEACSyzB,EAAQ,MAAD,WAAoB,aAAcI,GADlD,cACJW,EADI,yBAEDA,GAFC,2CAAF,kDAAC,GAKXuB,UAAU,WAAD,4BAAE,4BAAA/1B,EAAA,sEACUyzB,EAAQ,MAAD,iBAA0B,eAAgBI,GAD3D,cACHW,EADG,yBAEAA,GAFA,2CAAF,kDAAC,GAKVwB,YAAY,WAAD,4BAAE,4BAAAh2B,EAAA,sEACQyzB,EAAQ,MAAD,WAAoB,eAAgBI,GADnD,cACLW,EADK,yBAEFA,GAFE,2CAAF,kDAAC,GAIZyB,YAAY,WAAD,4BAAE,4BAAAj2B,EAAA,sEACQyzB,EAAQ,MAAD,WAAoB,eAAgBI,GADnD,cACLW,EADK,yBAEFA,GAFE,2CAAF,kDAAC","file":"static/js/44.c63cf8e5.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}","// @flow\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap';\nimport useApi from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport Table from '../components/Table';\n\n// component\nimport PageTitle from '../components/PageTitle';\nimport { FormInput } from '../components';\nimport MUIDataTable from 'mui-datatables';\n\nconst OrderList = () => {\n    const api = useApi();\n    const history = useNavigate();\n    const [responsive, setResponsive] = useState('vertical');\n    const [tableBodyHeight, setTableBodyHeight] = useState('400px');\n    const [tableBodyMaxHeight, setTableBodyMaxHeight] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [list, setList] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [visibleReason, setVisibleReason] = useState(false);\n    const [listReasons, setListReasons] = useState([]);\n    const [optionValue, setOptionValue] = useState('');\n    const [reasonValue, setReasonValue] = useState('');\n\n    const fields = [\n        {\n            label: 'ID USER',\n            name: 'id_user',\n            options: {\n                filter: true,\n                sort: true,\n            },\n        },\n        {\n            label: 'Name / Email',\n            name: 'user',\n            options: {\n                filter: true,\n                sort: true,\n            },\n        },\n    ];\n\n    const sizePerPageList = [\n        {\n            text: '5',\n            value: 5,\n        },\n        {\n            text: '10',\n            value: 10,\n        },\n        {\n            text: '25',\n            value: 25,\n        },\n        {\n            text: 'All',\n            value: list.length,\n        },\n    ];\n\n    const getList = async () => {\n        setLoading(true);\n        const result = await api.getUsers();\n        setLoading(false);\n        if (result.error === '') {\n            let data = result.list.map((tasks) => ({\n                id_user: tasks.id_user,\n                user: tasks.user,\n                actions: (\n                    <>\n                        <span class=\"badge bg-success badge rounded-pill bg-primary\">2</span>\n                    </>\n                ),\n            }));\n            setList(data);\n        } else {\n            alert(result.error);\n        }\n    };\n    // const detectClick = (e) => {\n    //     if (e.target?.nodeName === 'TD') {\n    //         const code = (e.target?.parentNode?.innerText).split('\t')[1];\n    //         goDuc(code);\n    //     } else {\n    //         return;\n    //     }\n    // };\n\n    const options = {\n        filter: true,\n        filterType: 'dropdown',\n        responsive,\n        tableBodyWidth: '100%',\n        tableBodyHeight,\n        tableBodyMaxHeight,\n        onRowClick: (row, index) => {\n            goDuc(row[0]);\n        },\n        // onRowsDelete: (e) => deleteSelectedDuc(e),\n    };\n\n    const goDuc = (id_duc) => {\n        const id = id_duc;\n        history(`/manager/user?id=${id}&type=edit`);\n    };\n    const searchStringInArray = (str, strArray) => {\n        for (var j = 0; j < strArray.length; j++) {\n            if (strArray[j].match(str)) return j;\n        }\n        return -1;\n    };\n\n    const newDuc = () => {\n        history(`/apps/duc/detail?id=null&type=new`);\n    };\n    useEffect(() => {\n        getList();\n    }, []);\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Manager', path: '/managers/users' },\n                    { label: 'Usuarios', path: '/managers/users', active: true },\n                ]}\n                title={'Manutenção de usuários'}\n            />\n\n            <Row>\n                <Col xs={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className=\"mb-2\">\n                                <Col xl={8}>\n                                    <Row className=\"gy-2 gx-2 align-items-center justify-content-xl-start justify-content-between\">\n                                      \n                                       \n                                    </Row>\n                                </Col>\n                                <Col xl={4}>\n                                    <div className=\"text-xl-end mt-xl-0 mt-2\">\n                                        <Button variant=\"danger\" className=\"mb-2 me-2\" onClick={() => newDuc()}>\n                                            <i className=\"mdi mdi-plus me-1\"></i>Usuario\n                                        </Button>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <MUIDataTable data={list} columns={fields} options={options} />\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default OrderList;\n","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\nimport {useParams} from \"react-router-dom\";\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n    company?: any,\n    insideCompany?: boolean\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    const {companyId} = useParams();\n\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/panel/companies\">TUNAP</Breadcrumb.Item>\n                            <Breadcrumb.Item hidden={props.insideCompany === false} href={`/panel/company/${props.company?.id || companyId}/dashboard`}>{props.company?.name || 'Empresa'}</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={props.insideCompany === false ? item.path : `/panel/company/${props.company?.id || companyId}${item.path}`}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","// @flow\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\n\ntype VerticalFromProps = {\n    defaultValues?: Object,\n    resolver?: any,\n    children?: any,\n    onSubmit?: (value: any) => void,\n    customMethods?: any,\n    formClass?: string,\n};\n\nconst VerticalForm = ({\n    defaultValues,\n    resolver,\n    children,\n    onSubmit,\n    customMethods,\n    formClass,\n}: VerticalFromProps): React$Element<any> => {\n    /*\n     * form methods\n     */\n\n    let methods = useForm({ defaultValues, resolver });\n\n    if(customMethods){\n        methods = customMethods;\n    }\n\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit, (e) => {console.log(e);})} className={formClass} noValidate>\n            {Array.isArray(children)\n                ? children.map((child) => {\n                      return child.props && child.props.name\n                          ? React.createElement(child.type, {\n                                ...{\n                                    ...child.props,\n                                    register,\n                                    key: child.props.name,\n                                    errors,\n                                    control,\n                                },\n                            })\n                          : child;\n                  })\n                : children}\n        </form>\n    );\n};\n\nexport default VerticalForm;\n","// @flow\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport {Controller} from \"react-hook-form\";\nimport HyperDatepicker from \"./Datepicker\";\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n    options?: Array<any>,\n    smallHtml?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    options,\n    smallHtml,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : type === 'datepicker' ? 'datepicker' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        <span dangerouslySetInnerHTML={{__html: errors[name]['message']}}/>\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'select' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                        <Controller\n                                            control={otherProps['control']}\n                                            render={({ field: { onChange, value, name, ref } }) => (\n                                                <Select\n                                                    className={\"react-select \" + (errors && errors[name] ? 'is-invalid' : '')}\n                                                    classNamePrefix=\"react-select\"\n                                                    inputRef={ref}\n                                                    name={name}\n                                                    options={options}\n                                                    value={options.find((option) => option.value === value) || null}\n                                                    onChange={(selectedOption) => {\n                                                        onChange(selectedOption.value);\n                                                        if(otherProps.hasOwnProperty('handleChange')){\n                                                            otherProps['handleChange'](selectedOption.value);\n                                                        }\n                                                    }}\n                                                    {...otherProps}\n                                                />\n                                            )}\n                                            name={name}\n                                        />\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                <span dangerouslySetInnerHTML={{__html: errors[name]['message']}}/>\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <>\n                                    {type === 'checkbox' || type === 'radio' || type === 'switch' ? (\n                                        <>\n                                            <Form.Group className={containerClass}>\n                                                <Form.Check\n                                                    type={type}\n                                                    label={label}\n                                                    name={name}\n                                                    id={name}\n                                                    ref={(r) => {\n                                                        if (refCallback) refCallback(r);\n                                                    }}\n                                                    className={className}\n                                                    isInvalid={errors && errors[name] ? true : false}\n                                                    {...(register ? register(name) : {})}\n                                                    {...otherProps}\n                                                />\n\n                                                {errors && errors[name] ? (\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        <span dangerouslySetInnerHTML={{__html: errors[name]['message']}}/>\n                                                    </Form.Control.Feedback>\n                                                ) : null}\n                                            </Form.Group>\n                                        </>\n                                    ) : (\n                                        <>\n                                            {type === 'datepicker' ? (\n                                                <>\n                                                    <Form.Group className={containerClass}>\n                                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n\n                                                        <div className={errors && errors[name] ? 'is-invalid' : ''}>\n                                                            <Controller\n                                                                control={otherProps['control']}\n                                                                render={({ field: { onChange, value, name, ref } }) => (\n                                                                    <HyperDatepicker\n                                                                        hideAddon={true}\n                                                                        showTimeSelect\n                                                                        timeFormat=\"HH:mm\"\n                                                                        tI={1}\n                                                                        dateFormat=\"dd/MM/yyyy h:mm aa\"\n                                                                        timeCaption=\"time\"\n                                                                        name={name}\n                                                                        value={value}\n                                                                        onChange={(date) => {\n                                                                            if(otherProps.hasOwnProperty('handleChange')){\n                                                                                otherProps['handleChange'](date);\n                                                                            }\n                                                                        }}\n                                                                        {...otherProps}\n                                                                    />\n                                                                )}\n                                                                name={name}\n                                                            />\n                                                        </div>\n\n                                                        {errors && errors[name] ? (\n                                                            <Form.Control.Feedback type=\"invalid\">\n                                                                <span dangerouslySetInnerHTML={{__html: errors[name]['message']}}/>\n                                                            </Form.Control.Feedback>\n                                                        ) : null}\n                                                        {smallHtml ? smallHtml : null}\n                                                    </Form.Group>\n                                                </>\n                                            ) : (\n                                                <Form.Group className={containerClass}>\n                                                    {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                                    <Form.Control\n                                                        type={type}\n                                                        placeholder={placeholder}\n                                                        name={name}\n                                                        id={name}\n                                                        as={comp}\n                                                        ref={(r) => {\n                                                            if(refCallback){\n                                                                refCallback(r);\n                                                            }\n                                                        }}\n                                                        className={className}\n                                                        isInvalid={errors && errors[name] ? true : false}\n                                                        {...(register ? register(name) : {})}\n                                                        {...otherProps}\n                                                        autoComplete={name}>\n                                                        {children ? children : null}\n                                                    </Form.Control>\n\n                                                    {errors && errors[name] ? (\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            <span dangerouslySetInnerHTML={{__html: errors[name]['message']}}/>\n                                                        </Form.Control.Feedback>\n                                                    ) : null}\n                                                    {smallHtml ? smallHtml : null}\n                                                </Form.Group>\n                                            )}\n                                        </>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\nimport React, { forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport classNames from 'classnames';\n\ntype DatepickerInputProps = {\n    onClick?: () => void,\n    value?: string,\n};\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef((props: DatepickerInputProps, ref) => {\n    const onDateValueChange = () => {\n        console.log('date value changed');\n    };\n    return (\n        <input\n            type=\"text\"\n            className=\"form-control date\"\n            onClick={props.onClick}\n            value={props.value}\n            onChange={onDateValueChange}\n            ref={ref}\n        />\n    );\n});\n\ntype DatepickerInputWithAddonProps = {\n    onClick?: () => void,\n    value?: string,\n};\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef((props: DatepickerInputWithAddonProps, ref) => (\n    <div className=\"input-group\" ref={ref}>\n        <input\n            type=\"text\"\n            className=\"form-control form-control-light\"\n            onClick={props.onClick}\n            value={props.value}\n            readOnly\n        />\n        <div className=\"input-group-append\">\n            <span className=\"input-group-text bg-primary border-primary text-white\">\n                <i className=\"mdi mdi-calendar-range font-13\"></i>\n            </span>\n        </div>\n    </div>\n));\n\ntype HyperDatepickerProps = {\n    value: Date,\n    onChange: (date: any) => void,\n    hideAddon?: boolean,\n    inputClass?: string,\n    dateFormat?: string,\n    minDate?: Date,\n    maxDate?: Date,\n    showTimeSelect?: boolean,\n    tI?: number,\n    timeCaption?: string,\n    showTimeSelectOnly?: boolean,\n    monthsShown?: number,\n    inline?: boolean,\n};\n\nconst HyperDatepicker = (props: HyperDatepickerProps): React$Element<any> => {\n    // handle custom input\n    const input = (props.hideAddon || false) === true ? <DatepickerInput /> : <DatepickerInputWithAddon />;\n\n    return (\n        <>\n            {/* date picker control */}\n            <DatePicker\n                customInput={input}\n                timeIntervals={props.tI}\n                className={classNames('form-control', props.inputClass)}\n                selected={props.value}\n                onChange={(date) => props.onChange(date)}\n                showTimeSelect={props.showTimeSelect}\n                timeFormat=\"hh:mm a\"\n                timeCaption={props.timeCaption}\n                dateFormat={props.dateFormat || 'MM/dd/yyyy'}\n                minDate={props.minDate}\n                maxDate={props.maxDate}\n                monthsShown={props.monthsShown}\n                showTimeSelectOnly={props.showTimeSelectOnly}\n                inline={props.inline}\n                autoComplete=\"off\"\n            />\n        </>\n    );\n};\n\nexport default HyperDatepicker;\n","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\nexport default React.createContext(null);","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","// const baseUrl = 'https://tunap-intranet-backend.herokuapp.com/api'; //\nimport config from '../../config';\nimport {toastService} from \"../../services/toast\";\nimport {loadingService} from \"../loading\";\nimport {APICore} from \"../../helpers/api/apiCore\";\n\nconst apiCore = new APICore();\n\nconst baseUrl = config.API_URL;\n\nconst request = async (method, endpoint, params, token = null, taketwo = null) => {\n    try {\n        loadingService.show();\n        method = method.toLowerCase();\n        let fullUrl = `${baseUrl}${endpoint}`;\n        let body = null;\n        switch (method) {\n            case 'get':\n                let queryString = new URLSearchParams(params).toString();\n                fullUrl += `?${queryString}`;\n                break;\n            case 'post':\n            case 'put':\n            case 'delete':\n                body = JSON.stringify(params);\n                break;\n        }\n        let headers;\n        if (taketwo) {\n            headers = { 'Content-Type': 'application/pdf' };\n        } else {\n            headers = { 'Content-Type': 'application/json' };\n        }\n\n        if (token) {\n            headers.Authorization = `Bearer ${token}`;\n        }\n        let req = await fetch(fullUrl, { method, headers, body });\n\n        let json = await req.json();\n\n        json['httpCode'] = req.status;\n\n        switch(req.status){\n            case 201:\n                toastService.show('success','Salvo com sucesso.');\n                break;\n            case 500:\n                toastService.show('error',json.msg || 'Ha ocorreu um erro interno.');\n                break;\n            case 400:\n                toastService.show('error',json.msg || 'Dados inválidos.');\n                break;\n            case 401:\n                toastService.show('error',json.msg || 'Não autorizado.');\n                break;\n            case 404:\n                toastService.show('error',json.msg || 'Não encontrado.');\n                break;\n            default:\n                break;\n        }\n\n        loadingService.hide();\n\n        return json;\n    } catch (error) {\n        loadingService.hide();\n        return { error: 'Erro de Conexão com API' };\n    }\n};\n\nexport default () => {\n    const token = apiCore.getLoggedInUser()?.token || null;\n\n    return {\n        // funções basicas de login\n        getToken: () => {\n            return apiCore.getLoggedInUser();\n        },\n        validateToken: async () => {\n            let json = await request('post', '/auth/check-token', {}, token);\n            return json;\n        },\n        login: async (data) => {\n           \n            let json = await request('post', '/login', data, {});\n            return json;\n        },\n        logout: async () => {\n            let json = await request('post', '/logout', {}, token);\n            localStorage.removeItem('token');\n            return json;\n        },\n        checkMe: async () => {\n            let json = await request('post', '/auth/me', {}, token);\n            return json;\n        },\n        signup: async (data) => {\n            let json = await request('post', '/register', data, {});\n            return json;\n        },\n        activateUser: async (data) => {\n            let json = await request('post', '/activate-user', data, {});\n            return json;\n        },\n        getSchedules: async () => {\n            let json = await request('get', '/service-schedule' ,\"company_id=1\", token);\n            return json;\n        },\n        delSchedules: async (id) => {\n            let json = await request('get', `/service-schedule/${id}` , {}, token);\n            return json;\n        },\n        ///api/client?company_id=1\n        getClients: async () => {\n            let json = await request('get', '/client' ,\"company_id=1\", token);\n            return json;\n        },\n        ///api/technical-consultant?company_id=1\n        getTechnicalConsultant: async () => {\n            let json = await request('get', '/technical-consultant' ,\"company_id=1\", token);\n            return json;\n        },\n        ///api/vehicle?company_id=1\n        getVehicles: async () => {\n            let json = await request('get', '/vehicle' ,\"company_id=1\", token);\n            return json;\n        },\n        ///api/vehicle-brand?company_id=1\n        getVehicleBrand: async () => {\n            let json = await request('get', '/vehicle-brand' ,\"company_id=1\", token);\n            return json;\n        },\n        ///api/vehicle-model?brand_id=1\n        getVehicleModel: async () => {\n            let json = await request('get', `/vehicle-model` ,\"brand_id=1\", token);\n            return json;\n        },\n        ///api/checklist-version?brand_id=1\n        getChecklistVersion: async (id) => {\n            let json = await request('get', `/checklist-version` ,\"brand_id=1\", token);\n            return json;\n        },\n       ///api/vehicle?model_id=1\n        getVehicle: async () => {\n            let json = await request('get', `/vehicle` ,\"model_id=1\", token);\n            return json;\n        },\n        //Fecthc route: /api/claim-service?company_id=1\n        getClaims: async () => {\n            let json = await request('get', `/claim-service` ,\"company_id=1\", token);\n            return json;\n        },\n        // get /api/service?company_id=1\n        getServices: async () => {\n            let json = await request('get', `/service` ,\"company_id=1\", token);\n            return json;\n        },\n        getProducts: async () => {\n            let json = await request('get', `/product` ,\"company_id=1\", token);\n            return json;\n        }\n\n        \n\n    };\n};\n"],"sourceRoot":""}