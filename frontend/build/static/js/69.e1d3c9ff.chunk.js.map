{"version":3,"sources":["pages/checklist/Preview.js","components/PageTitle.js"],"names":["api","APICore","Preview","props","useNavigate","useParams","id","type","checklistId","useState","data","setData","vehicleService","setVehicleService","stages","setStages","evidences","setEvidences","checklistData","setChecklistData","showModal","setShowModal","previewImage","setPreviewImage","selectedEvidence","setSelectedEvidence","showImage","evidence","handleImageChange","e","preventDefault","useEffect","length","ajaxCall","get","then","response","brand","client","vehicle","technicalConsultant","technical_consultant","checklistVersion","checklist_version","service_schedule","clientVehicle","client_vehicle","serviceSchedule","items","forEach","checklistItem","value","pivot","observations","validation","filter","stage","processed","index","concat","map","name","error","getData","show","onHide","size","scrollable","centered","Body","className","style","minHeight","src","breadCrumbItems","label","path","active","title","company","xs","lg","to","onClick","width","height","alt","onMouseOver","moment","promised_date","format","fontSize","color","plate","chasis","completed","colSpan","PageTitle","companyId","listProps","Item","href","hidden","insideCompany","item"],"mappings":"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","file":"static/js/69.e1d3c9ff.chunk.js","sourcesContent":["// @flow\nimport React, {useEffect, useState} from 'react';\nimport PageTitle from \"../../components/PageTitle\";\nimport {Card, Col, Row, Badge, Carousel, Modal, ProgressBar} from \"react-bootstrap\";\nimport {APICore} from \"../../helpers/api/apiCore\";\nimport {Link, useNavigate, useParams} from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst api = new APICore();\n\nconst Preview = (props: {company?: any}): React$Element<React$FragmentType> => {\n    const history = useNavigate();\n    const {id, type, checklistId} = useParams();\n    const [data, setData] = useState(null);\n    const [vehicleService, setVehicleService] = useState(null);\n    const [stages, setStages] = useState([]);\n    const [evidences, setEvidences] = useState([]);\n    const [checklistData, setChecklistData] = useState({});\n    const [showModal, setShowModal] = useState(false);\n    const [previewImage, setPreviewImage] = useState(null);\n    const [selectedEvidence, setSelectedEvidence] = useState(null);\n\n    const getData = () => {\n        if(id){\n            let ajaxCall;\n\n            switch(type){\n                case 'service-schedules':\n                    ajaxCall = api.get('/vehicle-service/' + checklistId);\n                    break;\n            }\n\n            ajaxCall.then((response) => {\n                switch(type){\n                    case 'service-schedules':\n                        let data;\n                        const checklistData = {};\n\n                        const {brand,client,vehicle, technical_consultant: technicalConsultant,checklist_version: checklistVersion, service_schedule: {client_vehicle: clientVehicle,...serviceSchedule}, ...vehicleService} = response.data.data;\n                        data = {brand, client, technicalConsultant, vehicle, serviceSchedule, checklistVersion, clientVehicle};\n\n                        vehicleService.items.forEach((checklistItem) => {\n                            checklistData[checklistItem.id] = {\n                                id: checklistItem.id,\n                                value: checklistItem.pivot.value,\n                                evidence: checklistItem.pivot.evidence,\n                                observations: checklistItem.pivot.observations,\n                                type: checklistItem.validation.type\n                            };\n                        });\n\n                        const stages = vehicleService.stages.filter((stage) => stage.pivot.processed);\n                        stages.forEach((stage, index) => {\n                            stages[index].evidences = [].concat(...stage.items.map((checklistItem) => (checklistData[checklistItem.id]?.evidence || []).map((evidence) => {return {evidence, name: checklistItem.name, observations: checklistData[checklistItem.id].observations};})));\n                        });\n\n                        setEvidences([].concat(...stages.map((stage) => stage.evidences)));\n                        setVehicleService(vehicleService);\n                        setStages(stages);\n                        setChecklistData(checklistData);\n                        setData(data);\n                        break;\n                    default:\n                        setData(response.data.data);\n                        break;\n                }\n            },(error) => {\n                setData(null);\n            });\n        } else {\n            setData(null);\n        }\n    };\n\n    const showImage = (evidence) => {\n        setPreviewImage(evidence);\n        setShowModal(true);\n    };\n\n    const handleImageChange = (e, selectedEvidence) => {\n        e.preventDefault();\n        setSelectedEvidence(selectedEvidence);\n    };\n\n    const onHideModal = () => {\n        setPreviewImage(null);\n        setShowModal(false);\n    };\n\n    /*si se cambia alguno de los parametros de id tipo o el vehicle service, se reinicializa todo*/\n    useEffect(() => {\n        if(evidences.length > 0){\n            setSelectedEvidence(evidences[0]);\n        }\n    }, [evidences]);\n\n    /*si se cambia alguno de los parametros de id tipo o el vehicle service, se reinicializa todo*/\n    useEffect(() => {\n        getData();\n    }, [id, type, checklistId]);\n\n    return (\n        <>\n            <Modal show={showModal} onHide={onHideModal} size=\"lg\" scrollable={true} centered={true}>\n                <Modal.Body className=\"p-0\" style={{minHeight: '300px'}}>\n                    <img\n                        className=\"d-block w-100\"\n                        src={previewImage?.evidence}\n                    />\n\n                    <div className=\"carousel-caption\">\n                        <h3>{previewImage?.name}</h3>\n                        <p>{previewImage?.observations}</p>\n                    </div>\n                </Modal.Body>\n            </Modal>\n\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Checklist', path: `/${type}/${id}/checklist` },\n                    { label: 'Visualización', path: `/${type}/${id}/checklist/${checklistId}`, active: true },\n                ]}\n                title={'Checklist'}\n                company={props?.company}\n            />\n\n            <Row>\n                <Col xs={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className=\"align-items-center\">\n                                {evidences.length > 0 ?\n                                    <Col lg={5}>\n                                        <Link to=\"#\" className=\"text-center d-block mb-4\">\n                                            <img\n                                                onClick={(e) => {\n                                                    showImage(selectedEvidence);\n                                                }}\n                                                src={selectedEvidence?.evidence}\n                                                className=\"img-fluid\"\n                                                style={{ width: '350px', height: '300px' }}\n                                                alt={selectedEvidence?.name}\n                                            />\n                                        </Link>\n\n                                        <div className=\"d-flex justify-content-center\">\n                                            {evidences.map((evidence) => (\n                                                <Link\n                                                    to=\"#\"\n                                                    onMouseOver={(e) => {\n                                                        handleImageChange(e, evidence);\n                                                    }}\n                                                    onClick={(e) => {\n                                                        handleImageChange(e, evidence);\n                                                        showImage(evidence);\n                                                    }}>\n                                                    <img\n                                                        src={evidence.evidence}\n                                                        className=\"img-fluid img-thumbnail p-2\"\n                                                        style={{ width: '75px', height: '70px' }}\n                                                        alt={evidence.name}\n                                                    />\n                                                </Link>\n                                            ))\n                                            }\n                                        </div>\n                                    </Col>\n                                    : null\n                                }\n\n                                <Col lg={7}>\n                                    <form className=\"ps-lg-4\">\n                                        <h2 className=\"mt-0\">{data?.client?.name}</h2>\n                                        <p className=\"mb-1\"><b>Data da vistoria:</b> {moment(data?.serviceSchedule?.promised_date).format('DD/MM/YYYY H:mma')}</p>\n\n                                        <div className=\"mt-4\">\n                                            <p style={{fontSize: '1.5rem'}}><b>Veículo</b>: {data?.vehicle?.name}</p>\n                                        </div>\n\n                                        <div className=\"mt-4\">\n                                            <p style={{fontSize: '1.5rem'}}><b>Cor</b>: {data?.clientVehicle?.color}</p>\n                                        </div>\n\n                                        <div className=\"mt-4\">\n                                            <p style={{fontSize: '1.5rem'}}><b>Consultor</b>: {data?.technicalConsultant?.name}</p>\n                                        </div>\n\n                                        <div className=\"mt-4\">\n                                            <p style={{fontSize: '1.5rem'}}><b>Placa</b>: {data?.clientVehicle?.plate}</p>\n                                        </div>\n\n                                        <div className=\"mt-4\">\n                                            <p style={{fontSize: '1.5rem'}}><b>Chassi</b>: {data?.clientVehicle?.chasis}</p>\n                                        </div>\n\n                                        <div className=\"mt-4\">\n                                            <div className=\"row\">\n                                                <div className=\"col-md-4\">\n                                                    <h6 className=\"font-14\">Vistorias finalizadas:</h6>\n                                                    <p className=\"text-sm lh-150\">{(vehicleService?.stages || []).filter((stage) => stage.pivot.completed).length}/{(vehicleService?.stages || []).length}</p>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <h6 className=\"font-14\">Número do checklist:</h6>\n                                                    <p className=\"text-sm lh-150\">{vehicleService?.id}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </Col>\n                            </Row>\n                            {stages.map((stage) => (\n                              <Row>\n                                  <div className=\"table-responsive mt-4\">\n                                      <table className=\"table table-bordered table-centered mb-0\">\n                                          <thead className=\"table-light\">\n                                          <tr>\n                                              <th colSpan={4} className=\"text-center\">{stage.name} {stage.pivot.completed ? '(Finalizado)' : null}</th>\n                                          </tr>\n                                          <tr>\n                                              <th width=\"40%\">Item</th>\n                                              <th width=\"10%\">Imagem ?</th>\n                                              <th width=\"20%\">Resposta</th>\n                                              <th width=\"30%\">Comentário</th>\n                                          </tr>\n                                          </thead>\n                                          <tbody>\n                                          {stage.items.map((checklistItem) => (\n                                              <tr>\n                                                  <td>{checklistItem.name}</td>\n                                                  <td>{checklistData[checklistItem.id]?.evidence && checklistData[checklistItem.id]?.evidence.length > 0 ? 'Sim' : 'Nao'}</td>\n                                                  <td>{checklistData[checklistItem.id]?.type === 'boolean' ? (checklistData[checklistItem.id]?.value ? <Badge className=\"bg-success-lighten text-success\">Sim</Badge> : <Badge className=\"bg-danger-lighten text-danger\">Nao</Badge>) : checklistData[checklistItem.id]?.value}</td>\n                                                  <td>{checklistData[checklistItem.id]?.observations}</td>\n                                              </tr>\n                                          ))\n                                          }\n                                          </tbody>\n                                      </table>\n                                  </div>\n                              </Row>\n                            ))\n                            }\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Preview;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\nimport {useParams} from \"react-router-dom\";\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n    company?: any,\n    insideCompany?: boolean\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    const {companyId} = useParams();\n\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/panel/companies\">TUNAP</Breadcrumb.Item>\n                            <Breadcrumb.Item hidden={props.insideCompany === false} href={`/panel/company/${props.company?.id || companyId}/dashboard`}>{props.company?.name || 'Empresa'}</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={props.insideCompany === false ? item.path : `/panel/company/${props.company?.id || companyId}${item.path}`}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"sourceRoot":""}