{"version":3,"sources":["i18n.js","routes/PrivateRoute.js","routes/Root.js","layouts/Default.js","components/ThemeCustomizer/LayoutTypes.js","components/ThemeCustomizer/LayoutColor.js","components/ThemeCustomizer/LayoutWidth.js","components/ThemeCustomizer/LeftSideBarTheme.js","components/ThemeCustomizer/LeftSideBarType.js","components/ThemeCustomizer/index.js","layouts/Vertical.js","layouts/Detached.js","layouts/Horizontal/index.js","layouts/Full.js","routes/index.js","routes/Routes.js","helpers/fake-backend.js","helpers/api/auth.js","App.js","redux/auth/reducers.js","redux/layout/reducers.js","redux/reducers.js","redux/auth/saga.js","redux/layout/saga.js","redux/sagas.js","redux/store.js","components/Loading.js","index.js","utils/array.js","utils/layout.js","redux/layout/actions.js","redux/layout/constants.js","helpers/api/apiCore.js","redux/auth/actions.js","services/loading.js","services/toast.js","constants/layout.js","config.js","utils/file.js","redux/auth/constants.js","components/Spinner.js"],"names":["resources","es","translation","i18n","use","detector","initReactI18next","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","apiCore","APICore","PrivateRoute","RouteComponent","component","rest","roles","history","useNavigate","useEffect","getLoggedInUser","post","then","error","Root","to","DefaultLayout","props","layoutColor","useSelector","state","Layout","changeBodyAttribute","document","body","classList","add","remove","fallback","className","LayoutTypes","changeLayoutType","layoutType","layoutConstants","Form","Check","Input","type","onChange","e","target","value","name","LAYOUT_VERTICAL","id","checked","Label","htmlFor","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_FULL","LayoutColor","changeLayoutColorScheme","LAYOUT_COLOR_LIGHT","LAYOUT_COLOR_DARK","LayoutWidth","changeWidthMode","layoutWidth","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LeftSideBarTheme","changeLeftSidebarTheme","leftSideBarTheme","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LeftSideBarType","changeLeftSiderbarType","leftSideBarType","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","ThemeCustomizer","dispatch","useDispatch","useState","disableLayoutWidth","setDisableLayoutWidth","disableSidebarTheme","setDisableSidebarTheme","disableSidebarType","setDisableSidebarType","_loadStateFromProps","useCallback","changeLayout","changeLayoutColor","changeLayoutWidth","changeSidebarTheme","changeSidebarType","Fragment","role","onClick","Topbar","React","lazy","LeftSidebar","Footer","RightSidebar","loading","VerticalLayout","children","isMenuOpened","setIsMenuOpened","updateDimensions","window","innerWidth","addEventListener","removeEventListener","isCondensed","isLight","hideUserProfile","openLeftMenuCallBack","prevState","hideLogo","Container","fluid","DetachedLayout","showRightSidebar","navCssClasses","topbarDark","Navbar","HorizontalLayout","FullLayout","layout","Login","Logout","Register","UserRegister","ForgotPassword","ChangePassword","ActivateUser","Companies","TechnicalConsultantList","TechnicalConsultantForm","VehicleBrandList","VehicleBrandForm","VehicleModelList","VehicleModelForm","VehicleList","VehicleForm","ClientVehicleList","ClientVehicleForm","ServiceScheduleList","ServiceScheduleWizard","ClientList","ClientForm","Checklist","ChecklistForm","ChecklistPreview","ChecklistItemList","ChecklistItemForm","ChecklistVersionList","ChecklistVersionForm","ChecklistVersionReport","TireBrandList","TireBrandForm","ClaimServiceList","ClaimServiceForm","ProductList","ProductForm","ServiceList","ServiceForm","ImportForm","CRMDashboard","CRMProjects","CRMManagement","CRMClients","CRMOrderList","ServiceSchedule","ScheduleDetail","Users","UsersManager","ErrorPageNotFound","ServerError","Maintenance","Starter","api","LoadComponent","Component","companyId","useParams","company","setCompany","user","setUser","userSession","hasOwnProperty","get","response","data","AllRoutes","layoutCls","getLayout","useRoutes","path","element","Default","Routes","TOKEN","mock","MockAdapter","axios","onNoMatch","login","params","logout","create","forgotPassword","forgotPasswordConfirm","users","username","password","firstName","lastName","token","onPost","reply","config","Promise","resolve","reject","setTimeout","JSON","parse","filteredUsers","filter","length","message","fullname","split","newUser","push","configureFakeBackend","App","INIT_STATE","Auth","action","console","log","AuthActionTypes","API_RESPONSE_SUCCESS","payload","actionType","LOGIN_USER","userLoggedIn","SIGNUP_USER","userSignUp","LOGOUT_USER","userLogout","FORGOT_PASSWORD","resetPasswordSuccess","passwordReset","FORGOT_PASSWORD_CHANGE","passwordChange","API_RESPONSE_ERROR","registerError","RESET","actualUser","LayoutActionTypes","CHANGE_LAYOUT","CHANGE_LAYOUT_COLOR","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","combineReducers","forgotPasswordChange","watchLoginUser","watchLogout","watchForgotPassword","watchForgotPasswordChange","authSaga","call","loginApi","privilege","setLoggedInUser","setAuthorization","put","authApiResponseSuccess","location","href","authApiResponseError","logoutApi","forgotPasswordApi","takeEvery","all","fork","hideRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","manageBodyClass","cssClass","toggle","rootSaga","layoutSaga","sagaMiddleware","createSagaMiddleware","middlewares","Loading","show","setShow","subscription","loadingService","subscribe","unsubscribe","Spinner","color","toastService","ReactDOM","render","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","configureStore","position","preventDuplicates","preventOpenDuplicates","getElementById","groupByFields","array","f","groups","forEach","o","group","stringify","Object","keys","map","attribute","setAttribute","width","theme","sidebarType","TOGGLE_RIGHT_SIDEBAR","axiosInstance","baseURL","API_URL","responseType","headers","interceptors","request","hide","status","getUserFromSession","internalAxios","msg","AUTH_SESSION_KEY","defaults","common","sessionStorage","getItem","url","queryString","key","join","getFile","getMultiple","urls","reqs","updatePatch","patch","update","delete","uploadFile","prepareFormData","createWithFile","formData","FormData","k","append","updateWithFile","isUserAuthenticated","decoded","jwtDecode","currentTime","Date","now","exp","warn","session","setItem","removeItem","setUserInSession","modifiedUser","userInfo","loginUser","logoutUser","resetAuth","elements","Subject","this","asObservable","next","keepLoading","splice","toast","find","moment","diff","date","process","dataURLtoFile","base64String","filename","arr","mimeType","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","validateFileImage","file","indexOf","validateFileExcel","processingFiles","files","multiple","validateFile","onLoadEnd","readAsDataURLResolve","readAsDataURLReject","result","fileReader","FileReader","onloadend","readAsDataURL","catch","Tag","tag","size","classNames","defaultProps"],"mappings":"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","file":"static/js/main.9402d36b.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport detector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nimport translationEs from './locales/es/translation.json';\n//translations\nconst resources = {\n    es: {\n        translation: translationEs,\n    },\n};\n\ni18n.use(detector)\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: 'en',\n        fallbackLng: 'en', // use en if detected lng is not available\n\n        keySeparator: false, // we do not use keys in form messages.welcome\n\n        interpolation: {\n            escapeValue: false, // react already safes from xss\n        },\n    });\n\nexport default i18n;\n","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {APICore} from \"../helpers/api/apiCore\";\n\nconst apiCore = new APICore();\n \nconst PrivateRoute = ({ component: RouteComponent, roles, ...rest } ) => {\n    const history = useNavigate();\n\n    const checkLogin = () => {\n        if (apiCore.getLoggedInUser()) {\n            apiCore.post('/auth/check-token').then(() => {\n\n            }, (error) => {\n                history('/login');\n            });\n        } else {\n            history('/login');\n        }\n    };\n\n    useEffect(() => {\n         checkLogin();\n    }, []);\n\n    return <RouteComponent   {...rest}/>;\n};\n\nexport default PrivateRoute;\n","import { Navigate } from 'react-router-dom';\n\nconst Root = () => {\n    const getRootUrl = () => {\n        let url = 'panel/companies'\n        return url;\n    };\n\n    const url = getRootUrl();\n\n    return <Navigate to={`/${url}`} />;\n};\n\nexport default Root;\n","// @flow\nimport React, { useEffect, Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\n\n// utils\nimport { changeBodyAttribute } from '../utils';\n\nconst loading = () => <div className=\"\"></div>;\n\ntype DefaultLayoutProps = {};\n\nconst DefaultLayout = (props: DefaultLayoutProps): React$Element<any> => {\n    const { layoutColor } = useSelector((state) => ({\n        layoutColor: state.Layout.layoutColor,\n    }));\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    useEffect(() => {\n        if (document.body) document.body.classList.add('authentication-bg');\n\n        return () => {\n            if (document.body) document.body.classList.remove('authentication-bg');\n        };\n    }, []);\n\n    return (\n        <Suspense fallback={loading()}>\n            <Outlet />\n        </Suspense>\n    );\n};\nexport default DefaultLayout;\n","// @flow\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ntype LayoutTypesProps = {\n    changeLayoutType: (value: any) => void,\n    layoutType: string,\n    layoutConstants: typeof layoutConstants,\n};\n\nconst LayoutTypes = ({\n    changeLayoutType,\n    layoutType,\n    layoutConstants,\n}: LayoutTypesProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <h5 className=\"mt-3\">Layout</h5>\n\n            <hr className=\"mt-1\" />\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutType(e.target.value)}\n                    name=\"layout-type\"\n                    value={layoutConstants.LAYOUT_VERTICAL}\n                    id=\"vertical-layout\"\n                    checked={layoutType === layoutConstants.LAYOUT_VERTICAL}\n                />\n                <Form.Check.Label htmlFor=\"vertical-layout\">Vertical Layout</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutType(e.target.value)}\n                    name=\"layout-type\"\n                    value={layoutConstants.LAYOUT_HORIZONTAL}\n                    id=\"horizontal-layout\"\n                    checked={layoutType === layoutConstants.LAYOUT_HORIZONTAL}\n                />\n                <Form.Check.Label htmlFor=\"horizontal-layout\">Horizontal Layout</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutType(e.target.value)}\n                    name=\"layout-type\"\n                    value={layoutConstants.LAYOUT_DETACHED}\n                    id=\"detached-layout\"\n                    checked={layoutType === layoutConstants.LAYOUT_DETACHED}\n                />\n                <Form.Check.Label htmlFor=\"detached-layout\">Detached Layout</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutType(e.target.value)}\n                    name=\"layout-type\"\n                    value={layoutConstants.LAYOUT_FULL}\n                    id=\"full-mode-layout\"\n                    checked={layoutType === layoutConstants.LAYOUT_FULL}\n                />\n                <Form.Check.Label htmlFor=\"full-mode-layout\">Full Layout</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LayoutTypes;\n","// @flow\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\n\n// constants\nimport * as layoutConstants from '../../constants/layout';\n\ntype LayoutColorProps = {\n    changeLayoutColorScheme: (value: any) => void,\n    layoutColor: string,\n    layoutConstants: typeof layoutConstants,\n};\n\nconst LayoutColor = ({\n    changeLayoutColorScheme,\n    layoutColor,\n    layoutConstants,\n}: LayoutColorProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <h5 className=\"mt-4\">Color Scheme</h5>\n\n            <hr className=\"mt-1\" />\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutColorScheme(e.target.value)}\n                    name=\"layout-color\"\n                    value={layoutConstants.LAYOUT_COLOR_LIGHT}\n                    id=\"light-mode\"\n                    checked={layoutColor === layoutConstants.LAYOUT_COLOR_LIGHT}\n                />\n                <Form.Check.Label htmlFor=\"vertical-layout\">Light Mode</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutColorScheme(e.target.value)}\n                    name=\"layout-color\"\n                    value={layoutConstants.LAYOUT_COLOR_DARK}\n                    id=\"dark-mode\"\n                    checked={layoutColor === layoutConstants.LAYOUT_COLOR_DARK}\n                />\n                <Form.Check.Label htmlFor=\"horizontal-layout\">Dark Mode</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LayoutColor;\n","// @flow\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ninterface LayoutWidthProps {\n    changeWidthMode: (value: any) => void;\n    layoutWidth: string;\n    layoutConstants: typeof layoutConstants.LayoutWidth;\n}\n\nconst LayoutWidth = ({\n    changeWidthMode,\n    layoutWidth,\n    layoutConstants,\n}: LayoutWidthProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <h5 className=\"mt-4\">Width</h5>\n\n            <hr className=\"mt-1\" />\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"width\"\n                    id=\"fluid-check\"\n                    value={layoutConstants.LAYOUT_WIDTH_FLUID}\n                    onChange={(e) => changeWidthMode(e.target.value)}\n                    checked={layoutWidth === layoutConstants.LAYOUT_WIDTH_FLUID}\n                />\n                <Form.Check.Label htmlFor=\"fluid-check\">Fluid</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"width\"\n                    id=\"boxed-check\"\n                    value={layoutConstants.LAYOUT_WIDTH_BOXED}\n                    onChange={(e) => changeWidthMode(e.target.value)}\n                    checked={layoutWidth === layoutConstants.LAYOUT_WIDTH_BOXED}\n                />\n                <Form.Check.Label htmlFor=\"boxed-check\">Boxed</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LayoutWidth;\n","// @flow\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ninterface LeftSideBarThemeProps {\n    changeLeftSidebarTheme: (value: any) => void;\n    leftSideBarTheme: string;\n    layoutConstants: typeof layoutConstants.SideBarTheme;\n}\n\nconst LeftSideBarTheme = ({\n    changeLeftSidebarTheme,\n    leftSideBarTheme,\n    layoutConstants,\n}: LeftSideBarThemeProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <h5 className=\"mt-4\">Left Sidebar Color</h5>\n            <hr className=\"mt-1\" />\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"theme\"\n                    id=\"brand-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT}\n                    onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n                    checked={leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT}\n                />\n                <Form.Check.Label htmlFor=\"brand-check\">Default</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"theme\"\n                    id=\"light-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_THEME_LIGHT}\n                    onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n                    checked={leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_LIGHT}\n                />\n                <Form.Check.Label htmlFor=\"light-check\">Light</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"theme\"\n                    id=\"dark-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_THEME_DARK}\n                    onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n                    checked={leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_DARK}\n                />\n                <Form.Check.Label htmlFor=\"dark-check\">Dark</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LeftSideBarTheme;\n","// @flow\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ninterface LeftSideBarTypeProps {\n    changeLeftSiderbarType: (value: any) => void;\n    leftSideBarType: string;\n    layoutConstants: typeof layoutConstants.SideBarTypes;\n}\n\nconst LeftSideBarType = ({\n    changeLeftSiderbarType,\n    leftSideBarType,\n    layoutConstants,\n}: LeftSideBarTypeProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <Form.Check className=\"form-check form-switch mb-1 mt-3\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"leftsidebar-size\"\n                    id=\"default-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_TYPE_FIXED}\n                    onChange={(e) => changeLeftSiderbarType(e.target.value)}\n                    checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_FIXED}\n                />\n                <Form.Check.Label htmlFor=\"default-check\">Fixed</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"leftsidebar-size\"\n                    id=\"condensed-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED}\n                    onChange={(e) => changeLeftSiderbarType(e.target.value)}\n                    checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED}\n                />\n                <Form.Check.Label htmlFor=\"condensed-check\">Condensed</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"leftsidebar-size\"\n                    id=\"compact-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE}\n                    onChange={(e) => changeLeftSiderbarType(e.target.value)}\n                    checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE}\n                />\n                <Form.Check.Label htmlFor=\"compact-check\">Scrollable</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LeftSideBarType;\n","// @flow\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n// actions\nimport {\n    changeLayout,\n    changeLayoutColor,\n    changeLayoutWidth,\n    changeSidebarTheme,\n    changeSidebarType,\n} from '../../redux/actions';\n\n// constants\nimport * as layoutConstants from '../../constants/layout';\n\n// components\nimport LayoutTypes from './LayoutTypes';\nimport LayoutColor from './LayoutColor';\nimport LayoutWidth from './LayoutWidth';\nimport LeftSideBarTheme from './LeftSideBarTheme';\nimport LeftSideBarType from './LeftSideBarType';\n\nconst ThemeCustomizer = (): React$Element<React$FragmentType> => {\n    const dispatch = useDispatch();\n\n    const { layoutColor, layoutType, layoutWidth, leftSideBarType, leftSideBarTheme } = useSelector((state) => ({\n        layoutColor: state.Layout.layoutColor,\n        layoutType: state.Layout.layoutType,\n        layoutWidth: state.Layout.layoutWidth,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n    }));\n\n    const [disableLayoutWidth, setDisableLayoutWidth] = useState(false);\n    const [disableSidebarTheme, setDisableSidebarTheme] = useState(false);\n    const [disableSidebarType, setDisableSidebarType] = useState(false);\n\n    /**\n     * change state based on props changes\n     */\n    const _loadStateFromProps = useCallback(() => {\n        setDisableLayoutWidth(\n            layoutType !== layoutConstants.LAYOUT_DETACHED && layoutType !== layoutConstants.LAYOUT_FULL\n        );\n\n        setDisableSidebarTheme(\n            layoutType !== layoutConstants.LAYOUT_HORIZONTAL && layoutType !== layoutConstants.LAYOUT_DETACHED\n        );\n        setDisableSidebarType(layoutType !== layoutConstants.LAYOUT_HORIZONTAL);\n    }, [layoutType]);\n\n    useEffect(() => {\n        _loadStateFromProps();\n    }, [_loadStateFromProps]);\n\n    /**\n     * On layout change\n     */\n    const changeLayoutType = (value: any) => {\n        var layout = value;\n        switch (layout) {\n            case 'topnav':\n                dispatch(changeLayout(layoutConstants.LAYOUT_HORIZONTAL));\n                break;\n            case 'detached':\n                dispatch(changeLayout(layoutConstants.LAYOUT_DETACHED));\n                break;\n            case 'full':\n                dispatch(changeLayout(layoutConstants.LAYOUT_FULL));\n                break;\n            default:\n                dispatch(changeLayout(layoutConstants.LAYOUT_VERTICAL));\n                break;\n        }\n    };\n\n    /**\n     * Change the layout color\n     */\n    const changeLayoutColorScheme = (value: any) => {\n        var mode = value;\n        switch (mode) {\n            case 'dark':\n                dispatch(changeLayoutColor(layoutConstants.LAYOUT_COLOR_DARK));\n                break;\n            default:\n                dispatch(changeLayoutColor(layoutConstants.LAYOUT_COLOR_LIGHT));\n                break;\n        }\n    };\n\n    /**\n     * Change the width mode\n     */\n    const changeWidthMode = (value: any) => {\n        var mode = value;\n\n        switch (mode) {\n            case 'boxed':\n                dispatch(changeLayoutWidth(layoutConstants.LAYOUT_WIDTH_BOXED));\n                break;\n            default:\n                dispatch(changeLayoutWidth(layoutConstants.LAYOUT_WIDTH_FLUID));\n                break;\n        }\n    };\n\n    /**\n     * Changes the theme\n     */\n    const changeLeftSidebarTheme = (value: any) => {\n        var theme = value;\n        switch (theme) {\n            case 'default':\n                dispatch(changeSidebarTheme(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\n                break;\n            case 'light':\n                dispatch(changeSidebarTheme(layoutConstants.LEFT_SIDEBAR_THEME_LIGHT));\n                break;\n            default:\n                dispatch(changeSidebarTheme(layoutConstants.LEFT_SIDEBAR_THEME_DARK));\n                break;\n        }\n    };\n\n    /**\n     * Change the leftsiderbar type\n     */\n    const changeLeftSiderbarType = (value: any) => {\n        var type = value;\n        switch (type) {\n            case 'condensed':\n                dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED));\n                break;\n            case 'scrollable':\n                dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\n                break;\n            default:\n                dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\n                break;\n        }\n    };\n\n    /**\n     * Reset everything\n     */\n    const reset = () => {\n        changeLayoutType(layoutConstants.LAYOUT_VERTICAL);\n        changeLayoutColorScheme(layoutConstants.LAYOUT_COLOR_LIGHT);\n        changeWidthMode(layoutConstants.LAYOUT_WIDTH_FLUID);\n        changeLeftSidebarTheme(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT);\n        changeLeftSiderbarType(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED);\n    };\n\n    return (\n        <React.Fragment>\n            <div className=\"p-3\">\n                <div className=\"alert alert-warning\" role=\"alert\">\n                    <strong>Customize </strong> the overall color scheme, sidebar menu, etc.\n                </div>\n\n                {/* Layouts */}\n                <LayoutTypes\n                    changeLayoutType={changeLayoutType}\n                    layoutType={layoutType}\n                    layoutConstants={layoutConstants}\n                />\n\n                {/* color scheme */}\n                <LayoutColor\n                    changeLayoutColorScheme={changeLayoutColorScheme}\n                    layoutColor={layoutColor}\n                    layoutConstants={layoutConstants}\n                />\n\n                {/* Width */}\n                {disableLayoutWidth && (\n                    <LayoutWidth\n                        changeWidthMode={changeWidthMode}\n                        layoutWidth={layoutWidth}\n                        layoutConstants={layoutConstants}\n                    />\n                )}\n\n                {/* Left Sidebar */}\n                {disableSidebarTheme && (\n                    <LeftSideBarTheme\n                        changeLeftSidebarTheme={changeLeftSidebarTheme}\n                        leftSideBarTheme={leftSideBarTheme}\n                        layoutConstants={layoutConstants}\n                    />\n                )}\n\n                {/* Left Sidebar Size */}\n                {disableSidebarType && (\n                    <LeftSideBarType\n                        changeLeftSiderbarType={changeLeftSiderbarType}\n                        leftSideBarType={leftSideBarType}\n                        layoutConstants={layoutConstants}\n                    />\n                )}\n\n                <div className=\"d-grid mt-4\">\n                    <button className=\"btn btn-primary\" id=\"resetBtn\" onClick={() => reset()}>\n                        Reset to Default\n                    </button>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default ThemeCustomizer;\n","// @flow\nimport React, { Suspense, useCallback, useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from 'react-bootstrap';\n\n// actions\nimport { changeSidebarType } from '../redux/actions';\n\n// constants\nimport * as layoutConstants from '../constants/layout';\n\n// components\nimport ThemeCustomizer from '../components/ThemeCustomizer/';\n\n// utils\nimport { changeBodyAttribute } from '../utils';\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('./Topbar'));\nconst LeftSidebar = React.lazy(() => import('./LeftSidebar'));\nconst Footer = React.lazy(() => import('./Footer'));\nconst RightSidebar = React.lazy(() => import('./RightSidebar'));\n\nconst loading = () => <div className=\"\"></div>;\n\ntype VerticalLayoutProps = {\n    children?: any,\n};\n\ntype VerticalLayoutState = {\n    isMenuOpened?: boolean,\n};\n\nconst VerticalLayout = ({ children }: VerticalLayoutProps, state: VerticalLayoutState): React$Element<any> => {\n    const dispatch = useDispatch();\n\n    const { layoutColor, leftSideBarTheme, leftSideBarType, layoutWidth } = useSelector((state) => ({\n        layoutColor: state.Layout.layoutColor,\n        layoutWidth: state.Layout.layoutWidth,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n    }));\n\n    const [isMenuOpened, setIsMenuOpened] = useState(false);\n\n    /*\n     * layout defaults\n     */\n    useEffect(() => {\n        changeBodyAttribute('data-layout', layoutConstants.LAYOUT_VERTICAL);\n    }, []);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-mode', layoutWidth);\n    }, [layoutWidth]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-theme', leftSideBarTheme);\n    }, [leftSideBarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-compact-mode', leftSideBarType);\n    }, [leftSideBarType]);\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = () => {\n        setIsMenuOpened((prevState) => {\n            setIsMenuOpened(!prevState);\n        });\n\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.remove('sidebar-enable');\n            } else {\n                document.body.classList.add('sidebar-enable');\n            }\n        }\n    };\n\n    const updateDimensions = useCallback(() => {\n        // activate the condensed sidebar if smaller devices like ipad or tablet\n        if (window.innerWidth >= 768 && window.innerWidth <= 1028) {\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED));\n        } else if (window.innerWidth > 1028) {\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\n        }\n    }, [dispatch]);\n\n    useEffect(() => {\n        window.addEventListener('resize', updateDimensions);\n\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n        };\n    }, [dispatch, updateDimensions]);\n\n    const isCondensed = leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED;\n    const isLight = leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_LIGHT;\n\n    return (\n        <>\n            <div className=\"wrapper\">\n                <Suspense fallback={loading()}>\n                    <LeftSidebar isCondensed={isCondensed} isLight={isLight} hideUserProfile={true} />\n                </Suspense>\n                <div className=\"content-page\">\n                    <div className=\"content\">\n                        <Suspense fallback={loading()}>\n                            <Topbar openLeftMenuCallBack={openMenu} hideLogo={true} />\n                        </Suspense>\n                        <Container fluid>\n                            <Outlet />\n                        </Container>\n                    </div>\n\n                    <Suspense fallback={loading()}>\n                        <Footer />\n                    </Suspense>\n                </div>\n            </div>\n\n            <Suspense fallback={loading()}>\n                <RightSidebar>\n                    <ThemeCustomizer />\n                </RightSidebar>\n            </Suspense>\n        </>\n    );\n};\nexport default VerticalLayout;\n","// @flow\nimport React, { Suspense, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container } from 'react-bootstrap';\nimport { Outlet } from 'react-router-dom';\n\n// actions\nimport { changeSidebarType } from '../redux/actions';\n\n// constants\nimport * as layoutConstants from '../constants/layout';\n\n// components\nimport ThemeCustomizer from '../components/ThemeCustomizer/';\n\n// utils\nimport { changeBodyAttribute } from '../utils/';\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('./Topbar'));\nconst LeftSidebar = React.lazy(() => import('./LeftSidebar'));\nconst Footer = React.lazy(() => import('./Footer'));\nconst RightSidebar = React.lazy(() => import('./RightSidebar'));\n\nconst loading = () => <div className=\"text-center\"></div>;\n\ntype VerticalLayoutProps = {\n    children?: any,\n};\n\ntype VerticalLayoutState = {\n    isMenuOpened?: boolean,\n};\n\nconst DetachedLayout = ({ children }: VerticalLayoutProps, state: VerticalLayoutState): React$Element<any> => {\n    const dispatch = useDispatch();\n    const { layoutColor, leftSideBarTheme, leftSideBarType, showRightSidebar } = useSelector((state) => ({\n        layoutColor: state.Layout.layoutColor,\n        layoutWidth: state.Layout.layoutWidth,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n        showRightSidebar: state.Layout.showRightSidebar,\n    }));\n\n    const [isMenuOpened, setIsMenuOpened] = useState(false);\n\n    /*\n     * layout defaults\n     */\n    useEffect(() => {\n        changeBodyAttribute('data-layout', layoutConstants.LAYOUT_DETACHED);\n        changeBodyAttribute('data-layout-mode', layoutConstants.LAYOUT_WIDTH_FLUID);\n        changeBodyAttribute('data-leftbar-theme', layoutConstants.LEFT_SIDEBAR_THEME_DARK);\n    }, []);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-compact-mode', leftSideBarType);\n    }, [leftSideBarType]);\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = (e) => {\n        setIsMenuOpened((prevState) => {\n            setIsMenuOpened(!prevState);\n        });\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.add('sidebar-enable');\n            } else {\n                document.body.classList.remove('sidebar-enable');\n            }\n        }\n    };\n\n    const updateDimensions = useCallback(() => {\n        // activate the condensed sidebar if smaller devices like ipad or tablet\n        if (window.innerWidth >= 768 && window.innerWidth <= 1028) {\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED));\n        } else if (window.innerWidth > 1028) {\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\n        }\n    }, [dispatch]);\n\n    useEffect(() => {\n        window.addEventListener('resize', updateDimensions);\n\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n        };\n    }, [dispatch, updateDimensions]);\n\n    const isCondensed = leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED;\n    const isLight = leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_LIGHT;\n\n    return (\n        <>\n            <Suspense fallback={loading()}>\n                <Topbar\n                    isMenuOpened={isMenuOpened}\n                    openLeftMenuCallBack={openMenu}\n                    navCssClasses=\"topnav-navbar topnav-navbar-dark\"\n                    topbarDark={true}\n                />\n            </Suspense>\n            <Container fluid>\n                <div className=\"wrapper\">\n                    <Suspense fallback={loading()}>\n                        <LeftSidebar\n                            isMenuOpened={isMenuOpened}\n                            isCondensed={isCondensed}\n                            isLight={isLight}\n                            hideLogo={true}\n                            hideUserProfile={false}\n                        />\n                    </Suspense>\n\n                    <div className=\"content-page\">\n                        <div className=\"content\">\n                            <Outlet />\n                        </div>\n\n                        <Suspense fallback={loading()}>\n                            <Footer />\n                        </Suspense>\n                    </div>\n                </div>\n            </Container>\n            {showRightSidebar && (\n                <Suspense fallback={loading()}>\n                    <RightSidebar>\n                        <ThemeCustomizer />\n                    </RightSidebar>\n                </Suspense>\n            )}\n        </>\n    );\n};\n\nexport default DetachedLayout;\n","// @flow\nimport React, { Suspense, useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\n\n// constants\nimport * as layoutConstants from '../../constants/layout';\n\n// utils\nimport { changeBodyAttribute } from '../../utils';\n\n// components\nimport ThemeCustomizer from '../../components/ThemeCustomizer/';\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('../Topbar'));\nconst Navbar = React.lazy(() => import('./Navbar'));\nconst Footer = React.lazy(() => import('../Footer'));\nconst RightSidebar = React.lazy(() => import('../RightSidebar'));\n\nconst loading = () => <div className=\"text-center\"></div>;\n\ntype HorizontalLayoutProps = {\n    children?: any,\n};\n\ntype HorizontalLayoutState = {\n    isMenuOpened: boolean,\n};\n\nconst HorizontalLayout = ({ children }: HorizontalLayoutProps, state: HorizontalLayoutState): React$Element<any> => {\n    const [isMenuOpened, setIsMenuOpened] = useState(false);\n\n    const { layoutColor, showRightSidebar, layoutWidth } = useSelector((state) => ({\n        layoutColor: state.Layout.layoutColor,\n        layoutWidth: state.Layout.layoutWidth,\n        showRightSidebar: state.Layout.showRightSidebar,\n    }));\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = () => {\n        setIsMenuOpened(!isMenuOpened);\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.remove('sidebar-enable');\n            } else {\n                document.body.classList.add('sidebar-enable');\n            }\n        }\n    };\n\n    /*\n     * layout defaults\n     */\n    useEffect(() => {\n        changeBodyAttribute('data-layout', layoutConstants.LAYOUT_HORIZONTAL);\n        changeBodyAttribute('data-leftbar-theme', layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT);\n        changeBodyAttribute('data-leftbar-compact-mode', layoutConstants.LEFT_SIDEBAR_TYPE_FIXED);\n    }, []);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-mode', layoutWidth);\n    }, [layoutWidth]);\n\n    return (\n        <>\n            <div className=\"wrapper\">\n                <div className=\"content-page\">\n                    <div className=\"content\">\n                        <Suspense fallback={loading()}>\n                            <Topbar\n                                isMenuOpened={isMenuOpened}\n                                openLeftMenuCallBack={openMenu}\n                                navCssClasses=\"topnav-navbar topnav-navbar-dark\"\n                                topbarDark={true}\n                            />\n                        </Suspense>\n\n                        <Suspense fallback={loading()}>\n                            <Navbar isMenuOpened={isMenuOpened} />\n                        </Suspense>\n\n                        <Container fluid>\n                            <Outlet />\n                        </Container>\n                    </div>\n\n                    <Suspense fallback={loading()}>\n                        <Footer />\n                    </Suspense>\n\n                    {showRightSidebar && (\n                        <Suspense fallback={loading()}>\n                            <RightSidebar>\n                                <ThemeCustomizer />\n                            </RightSidebar>\n                        </Suspense>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default HorizontalLayout;\n","// @flow\nimport React, { Suspense, useCallback, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from 'react-bootstrap';\nimport { Outlet } from 'react-router-dom';\n\n// actions\nimport { changeSidebarType } from '../redux/actions';\n\n// constants\nimport * as layoutConstants from '../constants/layout';\n\n// components\nimport ThemeCustomizer from '../components/ThemeCustomizer/';\n\n// utils\nimport { changeBodyAttribute } from '../utils';\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('./Topbar'));\nconst LeftSidebar = React.lazy(() => import('./LeftSidebar'));\nconst Footer = React.lazy(() => import('./Footer'));\nconst RightSidebar = React.lazy(() => import('./RightSidebar'));\n\nconst loading = () => <div className=\"\"></div>;\n\ntype VerticalLayoutProps = {\n    children?: any,\n};\n\ntype VerticalLayoutState = {\n    isMenuOpened?: boolean,\n};\n\nconst FullLayout = ({ children }: VerticalLayoutProps, state: VerticalLayoutState): React$Element<any> => {\n    const dispatch = useDispatch();\n\n    const { layoutColor, leftSideBarTheme, leftSideBarType, layoutWidth } = useSelector((state) => ({\n        layoutColor: state.Layout.layoutColor,\n        layoutWidth: state.Layout.layoutWidth,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n    }));\n\n    const [isMenuOpened, setIsMenuOpened] = useState(false);\n\n    /*useEffect(() => {\n        if (document.body) document.body.classList.add('hide-menu');\n        return () => {\n            if (document.body) document.body.classList.remove('hide-menu');\n        };\n    }, []);*/\n\n    /*\n     * layout defaults\n     */\n    useEffect(() => {\n        changeBodyAttribute('data-layout', layoutConstants.LAYOUT_FULL);\n    }, []);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-mode', layoutWidth);\n    }, [layoutWidth]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-theme', leftSideBarTheme);\n    }, [leftSideBarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-compact-mode', leftSideBarType);\n    }, [leftSideBarType]);\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = () => {\n        setIsMenuOpened((prevState) => {\n            setIsMenuOpened(!prevState);\n        });\n\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.remove('sidebar-enable');\n            } else {\n                document.body.classList.add('sidebar-enable');\n            }\n        }\n    };\n\n    const updateDimensions = useCallback(() => {\n        // activate the condensed sidebar if smaller devices like ipad or tablet\n        if (window.innerWidth >= 768 && window.innerWidth <= 1028) {\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED));\n        } else if (window.innerWidth > 1028) {\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\n        }\n    }, [dispatch]);\n\n    useEffect(() => {\n        window.addEventListener('resize', updateDimensions);\n\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n        };\n    }, [dispatch, updateDimensions]);\n\n    const isCondensed = leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED;\n    const isLight = leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_LIGHT;\n\n    return (\n        <>\n            <div className=\"wrapper\">\n                <Suspense fallback={loading()}>\n                    <LeftSidebar isCondensed={isCondensed} isLight={isLight} hideUserProfile={true} layout={layoutConstants.LAYOUT_FULL}/>\n                </Suspense>\n                <div className=\"content-page\">\n                    <div className=\"content\">\n                        <Suspense fallback={loading()}>\n                            <Topbar openLeftMenuCallBack={openMenu} hideLogo={true} />\n                        </Suspense>\n                        <Container fluid>\n                            <Outlet />\n                        </Container>\n                    </div>\n\n                    <Suspense fallback={loading()}>\n                        <Footer />\n                    </Suspense>\n                </div>\n            </div>\n\n            <Suspense fallback={loading()}>\n                <RightSidebar>\n                    <ThemeCustomizer />\n                </RightSidebar>\n            </Suspense>\n        </>\n    );\n};\nexport default FullLayout;\n","import React, { Suspense, useEffect, useState, useNa } from 'react';\nimport {useParams, useRoutes, useNavigate} from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport PrivateRoute from './PrivateRoute';\nimport Root from './Root';\nimport * as layoutConstants from '../constants/layout';\n\n// All layouts/containers\nimport DefaultLayout from '../layouts/Default';\nimport VerticalLayout from '../layouts/Vertical';\nimport DetachedLayout from '../layouts/Detached';\nimport HorizontalLayout from '../layouts/Horizontal';\nimport FullLayout from '../layouts/Full';\nimport {APICore} from \"../helpers/api/apiCore\";\n\n// lazy load all the views\n\n// auth\nconst Login = React.lazy(() => import('../pages/Login'));\nconst Logout = React.lazy(() => import('../pages/Logout'));\nconst Register = React.lazy(() => import('../pages/Register'));\nconst UserRegister = React.lazy(() => import('../pages/UserRegister'));\nconst ForgotPassword = React.lazy(() => import('../pages/ForgotPassword'));\nconst ChangePassword = React.lazy(() => import('../pages/ChangePassword'));\nconst ActivateUser = React.lazy(() => import('../pages/ActivateUser'));\n\n//panel\nconst Companies = React.lazy(() => import('../pages/Companies'));\n\n//panel/company\nconst TechnicalConsultantList = React.lazy(() => import('../pages/technical-consultant/List'));\nconst TechnicalConsultantForm = React.lazy(() => import('../pages/technical-consultant/Form'));\n\nconst VehicleBrandList = React.lazy(() => import('../pages/vehicle-brand/List'));\nconst VehicleBrandForm = React.lazy(() => import('../pages/vehicle-brand/Form'));\n\nconst VehicleModelList = React.lazy(() => import('../pages/vehicle-model/List'));\nconst VehicleModelForm = React.lazy(() => import('../pages/vehicle-model/Form'));\n\nconst VehicleList = React.lazy(() => import('../pages/vehicle/List'));\nconst VehicleForm = React.lazy(() => import('../pages/vehicle/Form'));\n\nconst ClientVehicleList = React.lazy(() => import('../pages/client-vehicle/List'));\nconst ClientVehicleForm = React.lazy(() => import('../pages/client-vehicle/Form'));\n\nconst ServiceScheduleList = React.lazy(() => import('../pages/service-schedule/List'));\nconst ServiceScheduleWizard = React.lazy(() => import('../pages/service-schedule/Wizard'));\n\nconst ClientList = React.lazy(() => import('../pages/client/List'));\nconst ClientForm = React.lazy(() => import('../pages/client/Form'));\n\nconst Checklist = React.lazy(() => import('../pages/checklist/List'));\nconst ChecklistForm = React.lazy(() => import('../pages/checklist/Form'));\nconst ChecklistPreview= React.lazy(() => import('../pages/checklist/Preview'));\n\nconst ChecklistItemList = React.lazy(() => import('../pages/checklist-item/List'));\nconst ChecklistItemForm = React.lazy(() => import('../pages/checklist-item/Form'));\n\nconst ChecklistVersionList = React.lazy(() => import('../pages/checklist-version/List'));\nconst ChecklistVersionForm = React.lazy(() => import('../pages/checklist-version/Form'));\nconst ChecklistVersionReport = React.lazy(() => import('../pages/checklist-version/Report'));\n\nconst TireBrandList = React.lazy(() => import('../pages/tire-brand/List'));\nconst TireBrandForm = React.lazy(() => import('../pages/tire-brand/Form'));\n\nconst ClaimServiceList = React.lazy(() => import('../pages/claim-service/List'));\nconst ClaimServiceForm = React.lazy(() => import('../pages/claim-service/Form'));\n\nconst ProductList = React.lazy(() => import('../pages/product/List'));\nconst ProductForm = React.lazy(() => import('../pages/product/Form'));\n\nconst ServiceList = React.lazy(() => import('../pages/service/List'));\nconst ServiceForm = React.lazy(() => import('../pages/service/Form'));\n\nconst ImportForm = React.lazy(() => import('../pages/import/Form'));\n\n// dashboard\n\n// -crm\nconst CRMDashboard = React.lazy(() => import('../pages/apps/CRM/Dashboard'));\nconst CRMProjects = React.lazy(() => import('../pages/apps/CRM/Projects'));\nconst CRMManagement = React.lazy(() => import('../pages/apps/CRM/Management'));\nconst CRMClients = React.lazy(() => import('../pages/apps/CRM/Clients'));\nconst CRMOrderList = React.lazy(() => import('../pages/apps/CRM/OrderList'));\n\n//Services Schedules\nconst ServiceSchedule = React.lazy(() => import('../pages/ServiceSchedule'));\n\nconst ScheduleDetail = React.lazy(() => import('../pages/ScheduleDetail'));\n\n\n// Users Manager\nconst Users = React.lazy(() => import('../pages/Users'));\nconst UsersManager = React.lazy(() => import('../pages/UsersManager')); //UsersManager\n\n// pages\n\nconst ErrorPageNotFound = React.lazy(() => import('../pages/error/PageNotFound'));\nconst ServerError = React.lazy(() => import('../pages/error/ServerError'));\n\nconst Maintenance = React.lazy(() => import('../pages/other/Maintenance'));\nconst Starter = React.lazy(() => import('../pages/other/Starter'));\n\n\nconst loading = () => <div className=\"\"></div>;\nconst api = new APICore();\n\nconst LoadComponent = ({ component: Component }) => {\n    const history = useNavigate();\n    const {companyId} = useParams();\n    const [company, setCompany] = useState({id: companyId});\n    const [user, setUser] = useState(null);\n\n    const getCompany = (id) => {\n        if(id){\n            api.get('/company/' + id).then((response) => {\n                setCompany(response.data.data);\n            }, (error) => {\n                setCompany(null);\n                history('/panel/companies');\n            });\n        } else {\n            setCompany(null);\n        }\n    };\n\n    useEffect(() => {\n        const userSession = api.getLoggedInUser();\n\n        if(userSession && userSession.hasOwnProperty('token')){\n            setUser(userSession);\n        }\n    }, []);\n\n    useEffect(() => {\n        getCompany(companyId);\n    }, [companyId]);\n\n    return (\n        <Suspense fallback={loading()}>\n            <Component user={user} company={company}/>\n        </Suspense>\n    );\n};\n\nconst AllRoutes = () => {\n    const { layout } = useSelector((state) => ({\n        layout: state.Layout,\n    }));\n\n    const getLayout = () => {\n        let layoutCls = VerticalLayout;\n\n        switch (layout.layoutType) {\n            case layoutConstants.LAYOUT_HORIZONTAL:\n                layoutCls = HorizontalLayout;\n                break;\n            case layoutConstants.LAYOUT_DETACHED:\n                layoutCls = DetachedLayout;\n                break;\n            case layoutConstants.LAYOUT_FULL:\n                layoutCls = FullLayout;\n                break;\n            default:\n                layoutCls = VerticalLayout;\n                break;\n        }\n        return layoutCls;\n    };\n    let Layout = getLayout();\n\n    return useRoutes([\n        { path: '/', element: <Root /> },\n        { path: '/login', element: <LoadComponent component={Login} /> },\n        {\n            // public routes\n            path: '/',\n            element: <DefaultLayout />,\n            children: [\n                { path: 'logout', element: <LoadComponent component={Logout} /> },\n                { path: 'register', element: <LoadComponent component={Register} /> },\n                { path: 'user-register', element: <LoadComponent component={UserRegister} /> },\n                { path: 'forgot-password', element: <LoadComponent component={ForgotPassword} /> },\n                { path: 'change-password/:code', element: <LoadComponent component={ChangePassword} /> },\n                { path: 'activate-user/:code', element: <LoadComponent component={ActivateUser} /> },\n                {\n                    path: 'error-404',\n                    element: <LoadComponent component={ErrorPageNotFound} />,\n                },\n                {\n                    path: 'error-500',\n                    element: <LoadComponent component={ServerError} />,\n                },\n                {\n                    path: 'maintenance',\n                    element: <LoadComponent component={Maintenance} />,\n                }\n            ],\n        },\n        {\n            path: 'panel',\n            element: <PrivateRoute roles={'Admin'} component={FullLayout} />,\n            children: [\n                { path: 'companies', element: <LoadComponent component={Companies} /> },\n                {\n                    path: 'checklist-items',\n                    children: [\n                        {\n                            path: 'list',\n                            element: <LoadComponent component={ChecklistItemList} />,\n                        },\n                        {\n                            path: 'create',\n                            element: <LoadComponent component={ChecklistItemForm} />,\n                        },\n                        {\n                            path: ':id/edit',\n                            element: <LoadComponent component={ChecklistItemForm} />,\n                        },\n                    ]\n                },\n                {\n                    path: 'checklist-versions',\n                    children: [\n                        {\n                            path: 'list',\n                            element: <LoadComponent component={ChecklistVersionList} />,\n                        },\n                        {\n                            path: 'create',\n                            element: <LoadComponent component={ChecklistVersionForm} />,\n                        },\n                        {\n                            path: ':id/edit',\n                            element: <LoadComponent component={ChecklistVersionForm} />,\n                        },\n                        {\n                            path: ':id/report',\n                            element: <LoadComponent component={ChecklistVersionReport} />,\n                        },\n                    ]\n                },\n            ]\n        },\n        {\n            path: 'panel/company/:companyId',\n            element: <PrivateRoute roles={'Admin'} component={Layout} />,\n            children: [\n                {\n                    path: 'dashboard',\n                    element: <LoadComponent component={CRMDashboard} />,\n                },\n                {\n                    path: 'technical-consultants',\n                    children: [\n                        {\n                            path: 'list',\n                            element: <LoadComponent component={TechnicalConsultantList} />,\n                        },\n                        {\n                            path: 'create',\n                            element: <LoadComponent component={TechnicalConsultantForm} />,\n                        },\n                        {\n                            path: ':id/edit',\n                            element: <LoadComponent component={TechnicalConsultantForm} />,\n                        },\n                    ]\n                },\n                {\n                    path: 'vehicle-brands',\n                    children: [\n                        {\n                            path: 'list',\n                            element: <LoadComponent component={VehicleBrandList} />,\n                        },\n                        {\n                            path: 'create',\n                            element: <LoadComponent component={VehicleBrandForm} />,\n                        },\n                        {\n                            path: ':id/edit',\n                            element: <LoadComponent component={VehicleBrandForm} />,\n                        },\n                    ]\n                },\n                {\n                    path: 'vehicle-models',\n                    children: [\n                        {\n                            path: 'list',\n                            element: <LoadComponent component={VehicleModelList} />,\n                        },\n                        {\n                            path: 'create',\n                            element: <LoadComponent component={VehicleModelForm} />,\n                        },\n                        {\n                            path: ':id/edit',\n                            element: <LoadComponent component={VehicleModelForm} />,\n                        },\n                    ]\n                },\n                {\n                    path: 'vehicles',\n                    children: [\n                        {\n                            path: 'list',\n                            element: <LoadComponent component={VehicleList} />,\n                        },\n                        {\n                            path: 'create',\n                            element: <LoadComponent component={VehicleForm} />,\n                        },\n                        {\n                            path: ':id/edit',\n                            element: <LoadComponent component={VehicleForm} />,\n                        },\n                    ]\n                },\n\n                {\n                    path: 'client-vehicles',\n                    children: [\n                        {\n                            path: 'list',\n                            element: <LoadComponent component={ClientVehicleList} />,\n                        },\n                        {\n                            path: 'create',\n                            element: <LoadComponent component={ClientVehicleForm} />,\n                        },\n                        {\n                            path: ':id/edit',\n                            element: <LoadComponent component={ClientVehicleForm} />,\n                        },\n                    ]\n                },\n                {\n                    path: 'service-schedules',\n                    children: [\n                        {\n                            path: 'list',\n                            element: <LoadComponent component={ServiceScheduleList } />,\n                        },\n                        {\n                            path: 'create',\n                            element: <LoadComponent component={ServiceScheduleWizard} />,\n                        },\n                        {\n                            path: ':id/edit',\n                            element: <LoadComponent component={ServiceScheduleWizard} />,\n                        },\n                    ]\n                },\n                {\n                    path: 'clients',\n                    children: [\n                        {\n                            path: 'list',\n                            element: <LoadComponent component={ClientList} />,\n                        },\n                        {\n                            path: 'create',\n                            element: <LoadComponent component={ClientForm} />,\n                        },\n                        {\n                            path: ':id/edit',\n                            element: <LoadComponent component={ClientForm} />,\n                        },\n                    ]\n                },\n\n                {\n                    path: 'tire-brands',\n                    children: [\n                        {\n                            path: 'list',\n                            element: <LoadComponent component={TireBrandList} />,\n                        },\n                        {\n                            path: 'create',\n                            element: <LoadComponent component={TireBrandForm} />,\n                        },\n                        {\n                            path: ':id/edit',\n                            element: <LoadComponent component={TireBrandForm} />,\n                        },\n                    ]\n                },\n\n                {\n                    path: 'claim-services',\n                    children: [\n                        {\n                            path: 'list',\n                            element: <LoadComponent component={ClaimServiceList} />,\n                        },\n                        {\n                            path: 'create',\n                            element: <LoadComponent component={ClaimServiceForm} />,\n                        },\n                        {\n                            path: ':id/edit',\n                            element: <LoadComponent component={ClaimServiceForm} />,\n                        },\n                    ]\n                },\n\n                {\n                    path: 'products',\n                    children: [\n                        {\n                            path: 'list',\n                            element: <LoadComponent component={ProductList} />,\n                        },\n                        {\n                            path: 'create',\n                            element: <LoadComponent component={ProductForm} />,\n                        },\n                        {\n                            path: ':id/edit',\n                            element: <LoadComponent component={ProductForm} />,\n                        },\n                    ]\n                },\n\n                {\n                    path: 'services',\n                    children: [\n                        {\n                            path: 'list',\n                            element: <LoadComponent component={ServiceList} />,\n                        },\n                        {\n                            path: 'create',\n                            element: <LoadComponent component={ServiceForm} />,\n                        },\n                        {\n                            path: ':id/edit',\n                            element: <LoadComponent component={ServiceForm} />,\n                        },\n                    ]\n                },\n\n                {\n                    path: 'import',\n                    children: [\n                        {\n                            path: 'upload',\n                            element: <LoadComponent component={ImportForm} />,\n                        },\n                    ]\n                },\n\n\n                {\n                    path: ':type/:id/checklist',\n                    element: <LoadComponent component={Checklist} />,\n                },\n\n                {\n                    path: ':type/:id/checklist/create/:checklistVersionId',\n                    element: <LoadComponent component={ChecklistForm} />,\n                },\n\n                {\n                    path: ':type/:id/checklist/:checklistId/edit/:stageId',\n                    element: <LoadComponent component={ChecklistForm} />,\n                },\n\n                {\n                    path: ':type/:id/checklist/:checklistId',\n                    element: <LoadComponent component={ChecklistPreview} />,\n                },\n            ]\n        },\n        {\n            // auth protected routes\n            path: '/',\n            element: <PrivateRoute roles={'Admin'} component={Layout} />,\n            children: [\n                {\n                    path: 'apps',\n                    children: [\n                        {\n                            path: 'duc',\n                            children: [\n                                {\n                                    path: 'dashboard',\n                                    element: <LoadComponent component={CRMDashboard} />,\n                                },\n                                {\n                                    path: 'projects',\n                                    element: <LoadComponent component={CRMProjects} />,\n                                },\n                                {\n                                    path: 'management',\n                                    element: <LoadComponent component={CRMManagement} />,\n                                },\n                                {\n                                    path: 'clients',\n                                    element: <LoadComponent component={CRMClients} />,\n                                },\n\n                            ],\n                        },\n                        {\n                            path: 'schedule',\n                            children: [\n                                {\n                                    path: 'dashboard',\n                                    element: <LoadComponent component={CRMDashboard} />,\n                                },\n                                {\n                                    path: 'listas',\n                                    element: <LoadComponent component={CRMOrderList} />,\n                                },\n                                {\n                                    path: 'lista',\n                                    element: <LoadComponent component={CRMProjects} />,\n                                },\n                                {\n                                    path: 'services',\n                                    element: <LoadComponent component={ServiceSchedule} />,\n                                },\n                                {\n                                    path: 'detail',\n                                    element: <LoadComponent component={ScheduleDetail} />,\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    path: 'manager',\n                    children: [\n                        {\n                            path: 'users',\n                            element: <LoadComponent component={Users} />,\n                        },\n                        {\n                            path: 'user',//user-details\n                            element: <LoadComponent component={UsersManager} />,\n                        },\n                    ],\n                },\n                {\n                    path: 'pages',\n                    children: [\n                        {\n                            path: 'starter',\n                            element: <LoadComponent component={Starter} />,\n                        },\n                    ],\n                },\n            ],\n        },\n    ]);\n};\n\nexport { AllRoutes };\n","import { BrowserRouter } from 'react-router-dom';\nimport { AllRoutes } from './index';\n\nconst Routes = () => {\n    return (\n        <BrowserRouter>\n            <AllRoutes />\n        </BrowserRouter>\n    );\n};\n\nexport default Routes;\n","import axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\n\nconst TOKEN =\n    'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJIeXBlciJ9.P27f7JNBF-vOaJFpkn-upfEh3zSprYfyhTOYhijykdI';\n\nvar mock = new MockAdapter(axios, { onNoMatch: 'passthrough' });\n\nexport function configureFakeBackend() {\n    let users = [\n        {\n            id: 1,\n            username: 'test',\n            password: 'test',\n            firstName: 'Test',\n            lastName: 'User',\n            role: 'Admin',\n            token: TOKEN,\n        },\n    ];\n\n    mock.onPost('/login/').reply(function (config) {\n        return new Promise(function (resolve, reject) {\n            setTimeout(function () {\n                // get parameters from post request\n                let params = JSON.parse(config.data);\n\n                // find if any user matches login credentials\n                let filteredUsers = users.filter((user) => {\n                    return user.username === params.username && user.password === params.password;\n                });\n\n                if (filteredUsers.length) {\n                    // if login details are valid return user details and fake jwt token\n                    let user = filteredUsers[0];\n                    resolve([200, user]);\n                } else {\n                    // else return error\n                    resolve([401, { message: 'Username or password is incorrect' }]);\n                }\n            }, 1000);\n        });\n    });\n\n    mock.onPost('/logout/').reply(function (config) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve([200, 'You have successfully logged out!']);\n            });\n        });\n    });\n\n    mock.onPost('/register/').reply(function (config) {\n        return new Promise(function (resolve, reject) {\n            setTimeout(function () {\n                // get parameters from post request\n                let params = JSON.parse(config.data);\n\n                // add new users\n                let [firstName, lastName] = params.fullname.split(' ');\n                let newUser = {\n                    id: users.length + 1,\n                    username: firstName,\n                    password: params.password,\n                    firstName: firstName,\n                    lastName: lastName,\n                    role: 'Admin',\n                    token: TOKEN,\n                };\n                users.push({ newUser });\n\n                resolve([200, newUser]);\n            }, 1000);\n        });\n    });\n\n    mock.onPost('/forget-password/').reply(function (config) {\n        return new Promise(function (resolve, reject) {\n            setTimeout(function () {\n                // get parameters from post request\n                let params = JSON.parse(config.data);\n\n                // find if any user matches login credentials\n                let filteredUsers = users.filter((user) => {\n                    return user.username === params.username;\n                });\n\n                if (filteredUsers.length) {\n                    // if login details are valid return user details and fake jwt token\n                    let responseJson = {\n                        message: \"We've sent you a link to reset password to your registered email.\",\n                    };\n                    resolve([200, responseJson]);\n                } else {\n                    // else return error\n                    resolve([\n                        401,\n                        {\n                            message: 'Sorry, we could not find any registered user with entered username',\n                        },\n                    ]);\n                }\n            }, 1000);\n        });\n    });\n}\n","// @flow\nimport { APICore } from './apiCore';\n\nconst api = new APICore();\n\n// account\nfunction login(params: any): any {\n    const baseUrl = '/login';\n    return api.post(`${baseUrl}`, params);\n}\n\nfunction logout(): any {\n    const baseUrl = '/logout';\n    return api.create(`${baseUrl}`, {});\n}\n\nfunction signup(params: any): any {\n    const baseUrl = '/register/';\n    return api.create(`${baseUrl}`, params);\n}\n\nfunction forgotPassword(params: any): any {\n    const baseUrl = '/forget-password/';\n    return api.create(`${baseUrl}`, params);\n}\n\nfunction forgotPasswordConfirm(params: any): any {\n    const baseUrl = '/password/reset/confirm/';\n    return api.create(`${baseUrl}`, params);\n}\n\nexport { login, logout, signup, forgotPassword, forgotPasswordConfirm };\n","// @flow\nimport React from 'react';\nimport Routes from './routes/Routes';\n\n// setup fake backend\nimport { configureFakeBackend } from './helpers';\n\n// Themes\n\n// For Saas import Saas.scss\nimport './assets/scss/Saas.scss';\n\n// For Modern demo import Modern.scss\n// import './assets/scss/Modern.scss';\n\n// For Creative demo import Creative.scss\n// import './assets/scss/Creative.scss';\n\n// configure fake backend\nconfigureFakeBackend();\n\ntype AppProps = {};\n\n/**\n * Main app component\n */\nconst App = (props: AppProps): React$Element<any> => {\n    return <Routes></Routes>;\n};\n\nexport default App;\n","// @flow\nimport { AuthActionTypes } from './constants';\n\nimport { APICore } from '../../helpers/api/apiCore';\n\nconst api = new APICore();\n\nconst INIT_STATE = {\n    user: api.getLoggedInUser(),\n    loading: false,\n};\n\ntype AuthAction = {\n    type: string,\n    payload: { actionType?: string, data?: any, error?: string },\n};\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state: State = INIT_STATE, action: AuthAction): any => {\n    console.log(action);\n    switch (action.type) {\n        case AuthActionTypes.API_RESPONSE_SUCCESS:\n            switch (action.payload.actionType) {\n                case AuthActionTypes.LOGIN_USER: {\n                    return {\n                        ...state,\n                        user: action.payload.data,\n                        userLoggedIn: true,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.SIGNUP_USER: {\n                    return {\n                        ...state,\n                        loading: false,\n                        userSignUp: true,\n                    };\n                }\n                case AuthActionTypes.LOGOUT_USER: {\n                    return {\n                        ...state,\n                        user: null,\n                        loading: false,\n                        userLogout: true,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD: {\n                    return {\n                        ...state,\n                        resetPasswordSuccess: action.payload.data,\n                        loading: false,\n                        passwordReset: true,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD_CHANGE: {\n                    return {\n                        ...state,\n                        loading: false,\n                        passwordChange: true,\n                    };\n                }\n                default:\n                    return { ...state };\n            }\n\n        case AuthActionTypes.API_RESPONSE_ERROR:\n            switch (action.payload.actionType) {\n                case AuthActionTypes.LOGIN_USER: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        userLoggedIn: false,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.SIGNUP_USER: {\n                    return {\n                        ...state,\n                        registerError: action.payload.error,\n                        userSignUp: false,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        loading: false,\n                        passwordReset: false,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD_CHANGE: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        loading: false,\n                        passwordChange: false,\n                    };\n                }\n                default:\n                    return { ...state };\n            }\n\n        case AuthActionTypes.LOGIN_USER:\n            return { ...state, loading: true, userLoggedIn: false };\n        case AuthActionTypes.LOGOUT_USER:\n            return { ...state, loading: true, userLogout: false };\n        case AuthActionTypes.SIGNUP_USER:\n            return { ...state, loading: true, userSignUp: false };\n        case AuthActionTypes.FORGOT_PASSWORD:\n            return { ...state, loading: true, passwordReset: false };\n        case AuthActionTypes.FORGOT_PASSWORD_CHANGE:\n            return { ...state, loading: true, passwordChange: false };\n        case AuthActionTypes.RESET:\n            return {\n                ...state,\n                loading: false,\n                error: false,\n                userSignUp: false,\n                userLoggedIn: false,\n                passwordReset: false,\n                passwordChange: false,\n                resetPasswordSuccess: null,\n            };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// @flow\nimport { LayoutActionTypes } from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutColor: layoutConstants.LAYOUT_COLOR_LIGHT,\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_LIGHT,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    showRightSidebar: false,\n    actualUser: '',\n};\n\nconst Layout = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case LayoutActionTypes.CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_LAYOUT_COLOR:\n            return {\n                ...state,\n                layoutColor: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case LayoutActionTypes.SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: true,\n            };\n        case LayoutActionTypes.HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: false,\n            };\n        case 'actualUser':\n            return {\n                ...state,\n                actualUser: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport { combineReducers } from 'redux';\n\nimport Auth from './auth/reducers';\nimport Layout from './layout/reducers';\n\nexport default (combineReducers({\n    Auth,\n    Layout,\n}): any);\n","// @flow\nimport { all, fork, put, takeEvery, call } from 'redux-saga/effects';\n\nimport {\n    login as loginApi,\n    logout as logoutApi,\n    forgotPassword as forgotPasswordApi,\n    forgotPasswordConfirm,\n} from '../../helpers/';\n\nimport { APICore, setAuthorization } from '../../helpers/api/apiCore';\nimport { authApiResponseSuccess, authApiResponseError } from './actions';\nimport { AuthActionTypes } from './constants';\n\nconst api = new APICore();\n\n/**\n * Login the user\n * @param {*} payload - username and password\n */\nfunction* login({ payload: { username, password } }) {\n    try {\n        const response = yield call(loginApi, { username, password });\n        const {id, name, token, privilege} = response.data;\n        const user = {\n          id,name,token, privilege\n        };\n\n        // NOTE - You can change this according to response format from your api\n        api.setLoggedInUser(user);\n        setAuthorization(user['token']);\n        yield put(authApiResponseSuccess(AuthActionTypes.LOGIN_USER, user));\n\n        window.location.href = '/panel/companies';\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.LOGIN_USER, error));\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n    }\n}\n\n/**\n * Logout the user\n */\nfunction* logout() {\n    try {\n        yield call(logoutApi);\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n        /*socketsService.disconnect();*/\n\n        yield put(authApiResponseSuccess(AuthActionTypes.LOGOUT_USER, {}));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.LOGOUT_USER, error));\n    }\n}\n\nfunction* forgotPassword({ payload: { username } }) {\n    try {\n        const response = yield call(forgotPasswordApi, { username });\n        yield put(authApiResponseSuccess(AuthActionTypes.FORGOT_PASSWORD, response.data));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.FORGOT_PASSWORD, error));\n    }\n}\n\nfunction* forgotPasswordChange({ payload: { data } }) {\n    try {\n        const response = yield call(forgotPasswordConfirm, data);\n        yield put(authApiResponseSuccess(AuthActionTypes.FORGOT_PASSWORD_CHANGE, response.data));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.FORGOT_PASSWORD_CHANGE, error));\n    }\n}\n\nexport function* watchLoginUser(): any {\n    yield takeEvery(AuthActionTypes.LOGIN_USER, login);\n}\n\nexport function* watchLogout(): any {\n    yield takeEvery(AuthActionTypes.LOGOUT_USER, logout);\n}\n\nexport function* watchForgotPassword(): any {\n    yield takeEvery(AuthActionTypes.FORGOT_PASSWORD, forgotPassword);\n}\n\nexport function* watchForgotPasswordChange(): any {\n    yield takeEvery(AuthActionTypes.FORGOT_PASSWORD_CHANGE, forgotPasswordChange);\n}\n\nfunction* authSaga(): any {\n    yield all([\n        fork(watchLoginUser),\n        fork(watchLogout),\n        fork(watchForgotPassword),\n        fork(watchForgotPasswordChange),\n    ]);\n}\n\nexport default authSaga;\n","// @flow\nimport { all, call, fork, takeEvery } from 'redux-saga/effects';\n\nimport { LayoutActionTypes } from './constants';\n\n/**\n * Toggle the class on body\n * @param {*} cssClass\n */\nfunction manageBodyClass(cssClass, action = 'toggle') {\n    switch (action) {\n        case 'add':\n            if (document.body) document.body.classList.add(cssClass);\n            break;\n        case 'remove':\n            if (document.body) document.body.classList.remove(cssClass);\n            break;\n        default:\n            if (document.body) document.body.classList.toggle(cssClass);\n            break;\n    }\n\n    return true;\n}\n\n/**\n * ---------------------------------------------------------------------------------------------------------------------------\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\n * For now, we are just applying the required logic on frontend side\n * ----------------------------------------------------------------------------------------------------------------------------\n */\n\n/**\n * Show the rightsidebar\n */\nfunction* showRightSidebar() {\n    try {\n        yield call(manageBodyClass, 'end-bar-enabled', 'add');\n    } catch (error) {}\n}\n\n/**\n * Hides the rightsidebar\n */\nfunction* hideRightSidebar() {\n    try {\n        yield call(manageBodyClass, 'end-bar-enabled', 'remove');\n    } catch (error) {}\n}\n\n/**\n * Watchers\n */\n\nexport function* watchShowRightSidebar(): any {\n    yield takeEvery(LayoutActionTypes.SHOW_RIGHT_SIDEBAR, showRightSidebar);\n}\n\nexport function* watchHideRightSidebar(): any {\n    yield takeEvery(LayoutActionTypes.HIDE_RIGHT_SIDEBAR, hideRightSidebar);\n}\n\nfunction* LayoutSaga(): any {\n    yield all([fork(watchShowRightSidebar), fork(watchHideRightSidebar)]);\n}\n\nexport default LayoutSaga;\n","// @flow\nimport { all } from 'redux-saga/effects';\n\nimport authSaga from './auth/saga';\nimport layoutSaga from './layout/saga';\n\nexport default function* rootSaga(): any {\n    yield all([authSaga(), layoutSaga()]);\n}\n","// @flow\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}): any {\n    // const composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'];\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n","import React, { useEffect, useState } from 'react';\nimport {loadingService} from \"../services/loading\";\nimport Spinner from \"./Spinner\";\n\nconst Loading = () => {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    const subscription = loadingService.init().subscribe((data) => {\n      setShow(data);\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  return <div className={`loading-content ${show ? 'd-flex' : ''}`}>\n    <Spinner color=\"white\"/>\n  </div>\n};\n\nexport default Loading;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './i18n';\n\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {ToastContainer} from \"react-toastify\";\nimport {toastService} from \"./services/toast\";\nimport Loading from \"./components/Loading\";\n\ntoastService.init().subscribe((data) => {\n\n});\n\nReactDOM.render(\n    <Provider store={configureStore({})}>\n        <ToastContainer position=\"top-right\" preventDuplicates={true} preventOpenDuplicates={true}/>\n        <Loading />\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n","// @flow\nconst groupByFields = (array: Array<any>, f: any): Array<any> => {\n    /*\n    params description :\n        f : function which returnf the array of fields \n        e.g. :  (item) => {\n            return [itemField1, itemField2];\n        }\n        array : array of data to group e.g. : [{...}, {...}]       \n    */\n    var groups = {};\n    array.forEach((o) => {\n        var group = JSON.stringify(f(o));\n        groups[group] = groups[group] || [];\n        groups[group].push(o);\n    });\n    return Object.keys(groups).map((group) => {\n        return groups[group];\n    });\n};\n\nexport { groupByFields };\n","// @flow\n\n/**\n * Changes the body attribute\n */\nconst changeBodyAttribute = (attribute: string, value: string): void => {\n    if (document.body) document.body.setAttribute(attribute, value);\n};\n\nexport { changeBodyAttribute };\n","// @flow\nimport { LayoutActionTypes } from './constants';\n \n\ntype LayoutAction = { type: string, payload?: string | null };\n\nexport const changeLayout = (layout: string): LayoutAction => ({\n    type: LayoutActionTypes.CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutColor = (color: string): LayoutAction => ({\n    type: LayoutActionTypes.CHANGE_LAYOUT_COLOR,\n    payload: color,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\n    type: LayoutActionTypes.CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\n    type: LayoutActionTypes.CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\n    type: LayoutActionTypes.CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const showRightSidebar = (): LayoutAction => ({\n    type: LayoutActionTypes.SHOW_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const hideRightSidebar = (): LayoutAction => ({\n    type: LayoutActionTypes.HIDE_RIGHT_SIDEBAR,\n    payload: null,\n});\nexport const getActualUser = async (user) => ({\n    type: 'actualUser',\n    payload: user,\n});\n\n","export const LayoutActionTypes = {\n    CHANGE_LAYOUT: '@@layout/CHANGE_LAYOUT',\n    CHANGE_LAYOUT_COLOR: '@@layout/CHANGE_LAYOUT_COLOR',\n    CHANGE_LAYOUT_WIDTH: '@@layout/CHANGE_LAYOUT_WIDTH',\n    CHANGE_SIDEBAR_THEME: '@@layout/CHANGE_SIDEBAR_THEME',\n    CHANGE_SIDEBAR_TYPE: '@@layout/CHANGE_SIDEBAR_TYPE',\n\n    TOGGLE_RIGHT_SIDEBAR: '@@layout/TOGGLE_RIGHT_SIDEBAR',\n    SHOW_RIGHT_SIDEBAR: '@@layout/SHOW_RIGHT_SIDEBAR',\n    HIDE_RIGHT_SIDEBAR: '@@layout/HIDE_RIGHT_SIDEBAR',\n};\n","import jwtDecode from 'jwt-decode';\nimport axios from 'axios';\nimport internalAxios from 'axios';\n\nimport config from '../../config';\nimport {loadingService} from \"../../services/loading\";\nimport {toastService} from \"../../services/toast\";\nimport {prepareFormData} from \"../../utils/file\";\n\nconst axiosInstance = axios.create({\n    baseURL: `${config.API_URL}`,\n    responseType: \"json\",\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\naxiosInstance.interceptors.request.use(\n    request => {\n        loadingService.show();\n\n        return request;\n    },\n    error => {\n        loadingService.hide();\n\n        toastService.show('error', '¡Request Error!');\n\n        return Promise.reject(error);\n    }\n);\n\n// intercepting to capture errors\naxiosInstance.interceptors.response.use(\n    (response) => {\n        loadingService.hide();\n\n        if(response.status === 201){\n            toastService.show('success', 'Salvou');\n        }\n\n        return response;\n    },\n    (error) => {\n        loadingService.hide();\n\n        if(error.response.status === 401){\n            const user = getUserFromSession();\n\n            if(user){\n                internalAxios.post(config.API_URL + '/auth/check-token',{}, {headers: {\n                    'Authorization': 'Bearer ' + user?.token\n                }}).then(() => {\n\n            }, (error) => {\n                    window.location.href =  '/login';\n            });\n            } else {\n                window.location.href =  '/login';\n            }\n        }\n\n        if(error.response?.data.hasOwnProperty('msg')){\n            toastService.show('error', error.response.data.msg);\n        }\n\n        return Promise.reject(error);\n    }\n);\n\nconst AUTH_SESSION_KEY = 'hyper_user';\n\n/**\n * Sets the default authorization\n * @param {*} token\n */\nconst setAuthorization = (token) => {\n    if (token) axiosInstance.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n    else delete axiosInstance.defaults.headers.common['Authorization'];\n};\n\nconst getUserFromSession = () => {\n    const user = sessionStorage.getItem(AUTH_SESSION_KEY);\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\nclass APICore {\n    /**\n     * Fetches data from given url\n     */\n    get = (url, params) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n            response = axiosInstance.get(`${url}?${queryString}`, params);\n        } else {\n            response = axiosInstance.get(`${url}`, params);\n        }\n        return response;\n    };\n\n    getFile = (url, params) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n            response = axiosInstance.get(`${url}?${queryString}`, { responseType: 'blob' });\n        } else {\n            response = axiosInstance.get(`${url}`, { responseType: 'blob' });\n        }\n        return response;\n    };\n\n    getMultiple = (urls, params) => {\n        const reqs = [];\n        let queryString = '';\n        if (params) {\n            queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n        }\n\n        for (const url of urls) {\n            reqs.push(axiosInstance.get(`${url}?${queryString}`));\n        }\n        return axiosInstance.all(reqs);\n    };\n\n    post = (url, data) => {\n        return axiosInstance.post(url, data);\n    };\n\n    /**\n     * post given data to url\n     */\n    create = (url, data) => {\n        return axiosInstance.post(url, data);\n    };\n\n    /**\n     * Updates patch data\n     */\n    updatePatch = (url, data) => {\n        return axiosInstance.patch(url, data);\n    };\n\n    /**\n     * Updates data\n     */\n    update = (url, data) => {\n        return axiosInstance.put(url, data);\n    };\n\n    /**\n     * Deletes data\n     */\n    delete = (url) => {\n        return axiosInstance.delete(url);\n    };\n\n    uploadFile = (url, data) => {\n        const config = {\n            headers: {\n                ...axiosInstance.defaults.headers,\n                'content-type': 'multipart/form-data',\n            },\n        };\n        return axiosInstance.post(url, prepareFormData(data), config);\n    };\n\n    /**\n     * post given data to url with file\n     */\n    createWithFile = (url, data) => {\n        const formData = new FormData();\n        for (const k in data) {\n            formData.append(k, data[k]);\n        }\n\n        const config = {\n            headers: {\n                ...axiosInstance.defaults.headers,\n                'content-type': 'multipart/form-data',\n            },\n        };\n        return axiosInstance.post(url, formData, config);\n    };\n\n    /**\n     * post given data to url with file\n     */\n    updateWithFile = (url, data) => {\n        const formData = new FormData();\n        for (const k in data) {\n            formData.append(k, data[k]);\n        }\n\n        const config = {\n            headers: {\n                ...axiosInstance.defaults.headers,\n                'content-type': 'multipart/form-data',\n            },\n        };\n        return axiosInstance.patch(url, formData, config);\n    };\n\n    isUserAuthenticated = () => {\n        const user = this.getLoggedInUser();\n        if (!user || (user && !user.token)) {\n            return false;\n        }\n        const decoded = jwtDecode(user.token);\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n            console.warn('access token expired');\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    setLoggedInUser = (session) => {\n        if (session) sessionStorage.setItem(AUTH_SESSION_KEY, JSON.stringify(session));\n        else {\n            sessionStorage.removeItem(AUTH_SESSION_KEY);\n        }\n    };\n\n    /**\n     * Returns the logged in user\n     */\n    getLoggedInUser = () => {\n        return getUserFromSession();\n    };\n\n    setUserInSession = (modifiedUser) => {\n        let userInfo = sessionStorage.getItem(AUTH_SESSION_KEY);\n        if (userInfo) {\n            const { token, user } = JSON.parse(userInfo);\n            this.setLoggedInUser({ token, ...user, ...modifiedUser });\n        }\n    };\n}\n\n/*\nCheck if token available in session\n*/\nlet user = getUserFromSession();\nif (user) {\n    const { token } = user;\n    if (token) {\n        setAuthorization(token);\n    }\n}\n\nexport { APICore, setAuthorization };\n","// @flow\nimport { AuthActionTypes } from './constants';\n\ntype AuthAction = { type: string, payload: {} | string };\n\n// common success\nexport const authApiResponseSuccess = (actionType: string, data: any): AuthAction => ({\n    type: AuthActionTypes.API_RESPONSE_SUCCESS,\n    payload: { actionType, data },\n});\n// common error\nexport const authApiResponseError = (actionType: string, error: string): AuthAction => ({\n    type: AuthActionTypes.API_RESPONSE_ERROR,\n    payload: { actionType, error },\n});\n\nexport const loginUser = (username: string, password: string): AuthAction => ({\n    type: AuthActionTypes.LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const logoutUser = (): AuthAction => ({\n    type: AuthActionTypes.LOGOUT_USER,\n    payload: {},\n});\n\nexport const forgotPassword = (username: string): AuthAction => ({\n    type: AuthActionTypes.FORGOT_PASSWORD,\n    payload: { username },\n});\n\nexport const forgotPasswordChange = (username: string): AuthAction => ({\n    type: AuthActionTypes.FORGOT_PASSWORD_CHANGE,\n    payload: { username },\n});\n\nexport const resetAuth = (): AuthAction => ({\n    type: AuthActionTypes.RESET,\n    payload: {},\n});\n","import {Subject} from \"rxjs\";\n\nclass Service {\n  elements = [];\n  loading =  new Subject();\n\n  init(){\n    return this.loading.asObservable();\n  }\n\n  hideAll(){\n    this.elements = [];\n    this.loading.next(false);\n  }\n\n  show() {\n    this.elements.push(1);\n    this.loading.next(true);\n  }\n\n  hide() {\n\n    if(this.keepLoading()){\n      this.elements.splice(0,1);\n    }\n\n    this.loading.next(this.keepLoading());\n  }\n\n  keepLoading() {\n    return this.elements.length > 0;\n  }\n\n}\n\nexport const loadingService = new Service();\n","import {Subject} from \"rxjs\";\nimport moment from \"moment\";\nimport {toast} from \"react-toastify\";\n\nclass Service {\n  elements = [];\n  toast =  new Subject();\n\n  init(){\n    return this.toast.asObservable();\n  }\n\n  show(type, message) {\n\n    /*\n\n    success\ninfo\nerror\nwarning\nwarn\ndark\n    */\n    const found = this.elements.find((element) => element.type === type && element.message === message && moment().diff(moment(element.date), 'seconds') <= 5);\n\n    if(!found){\n      toast[type](message);\n\n      this.elements.push({\n        type,\n        message,\n        date: new Date()\n      });\n\n      this.elements = this.elements.filter((element) => moment().diff(moment(element.date), 'seconds') <= 5);\n    }\n  }\n}\n\nexport const toastService = new Service();\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\nexport const LAYOUT_DETACHED = 'detached';\nexport const LAYOUT_FULL = 'full';\n\nexport const LAYOUT_COLOR_LIGHT = 'light';\nexport const LAYOUT_COLOR_DARK = 'dark';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","const config = {\n    API_URL: process.env.REACT_APP_API_URL,\n};\n\nexport default config;\n","export const createAndFireInputFile = (multiple = false, fileValidationCallback = null, callbackOnLoadEnd = null) => {\n  return new Promise((resolve, reject) => {\n    const input = document.createElement('input');\n    if(multiple){\n      input.setAttribute('multiple', '');\n    }\n    input.setAttribute('type', 'file');\n    input.setAttribute('value', null);\n    input.setAttribute('id', 'temp-input-file');\n    input.onchange = (inputOnChangeEvent) => {\n      if(inputOnChangeEvent.target.files.length > 0){\n        const files = multiple ? Array.from(inputOnChangeEvent.target.files) : [inputOnChangeEvent.target.files[0]];\n\n        processingFiles(files,resolve, reject, multiple, fileValidationCallback, callbackOnLoadEnd);\n      } else {\n        reject('No seleccionaste ningun archivo.');\n      }\n    };\n    input.style.display = 'none';\n    document.body.appendChild(input);\n    document.getElementById('temp-input-file').click();\n\n    setTimeout(() => {\n      document.getElementById('temp-input-file').remove();\n    }, 100);\n  });\n};\n\nexport const dataURLtoFile = (base64String, filename) => {\n\n  var arr = base64String.split(','),\n      mimeType = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n\n  while(n--){\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n\n  return new File([u8arr], filename, {type:mimeType});\n};\n\nexport const validateFileImage = (file) => {\n  const isValid = file.type.indexOf('image') === 0;\n\n  if(!isValid){\n    return 'El archivo ' + file.name + ' no es una imagen.';\n  } else {\n    return true;\n  }\n};\n\nexport const validateFileExcel = (file) => {\n  const isValid = ['text/csv','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-excel'].indexOf(file.type) >= 0;\n\n  if(!isValid){\n    return 'El archivo ' + file.name + ' no es excel.';\n  } else {\n    return true;\n  }\n};\n\nexport const processingFiles = (files,resolve,reject, multiple = false, validateFile = null, onLoadEnd = null) => {\n  if(files.length > 0){\n    Promise.all(files.map( (file) => {\n      return new Promise ((readAsDataURLResolve, readAsDataURLReject) => {\n        if(validateFile){\n          const result = validateFile(file);\n\n          if(result === true){\n            readAsDataURLResolve(file);\n          } else {\n            readAsDataURLReject(result);\n          }\n        } else {\n          readAsDataURLResolve(file);\n        }\n      });\n    })).then((files) => {\n      files.forEach((file) => {\n        if(onLoadEnd){\n          const fileReader = new FileReader();\n\n          fileReader.onloadend = (e) => {\n            onLoadEnd(e);\n          };\n\n          fileReader.readAsDataURL(file);\n        }\n      });\n\n      resolve(multiple ? files : files[0]);\n    }).catch((error) => {\n      reject(error);\n    });\n  } else {\n    reject('Nenhum arquivo selecionado');\n  }\n};\n\nexport const prepareFormData = (data) => {\n  const formData = new FormData();\n\n  for (const key in data) {\n    if (data.hasOwnProperty(key)) {\n      formData.append(key, typeof data[key] === 'object' && data[key] instanceof File === false && data[key] !== null ? JSON.stringify(data[key]) : data[key]);\n    }\n  }\n\n  return formData;\n};\n\nexport const getFileExtension = (file) => {\n  return file.split('.').reverse()[0].toLowerCase();\n};\n","export const AuthActionTypes = {\n    API_RESPONSE_SUCCESS: '@@auth/API_RESPONSE_SUCCESS',\n    API_RESPONSE_ERROR: '@@auth/API_RESPONSE_ERROR',\n\n    LOGIN_USER: '@@auth/LOGIN_USER',\n    LOGOUT_USER: '@@auth/LOGOUT_USER',\n    SIGNUP_USER: '@@auth/SIGNUP_USER',\n    FORGOT_PASSWORD: '@@auth/FORGOT_PASSWORD',\n    FORGOT_PASSWORD_CHANGE: '@@auth/FORGOT_PASSWORD_CHANGE',\n\n    RESET: '@@auth/RESET',\n};\n","// @flow\nimport React from 'react';\nimport classNames from 'classnames';\n\ntype SpinnerProps = {\n    tag?: string,\n    className?: string,\n    size?: 'lg' | 'md' | 'sm',\n    type?: 'bordered' | 'grow',\n    color?: string,\n    children?: any,\n};\n\n/**\n * Spinner\n */\nconst Spinner = (props: SpinnerProps): React$Element<any> => {\n    const children = props.children || null;\n    const Tag = props.tag || 'div';\n    const color = props.color || 'secondary';\n    const size = props.size || '';\n\n    return (\n        <Tag\n            role=\"status\"\n            className={classNames(\n                {\n                    'spinner-border': props.type === 'bordered',\n                    'spinner-grow': props.type === 'grow',\n                },\n                [`text-${color}`],\n                { [`avatar-${size}`]: size },\n                props.className\n            )}>\n            {children}\n        </Tag>\n    );\n};\n\nSpinner.defaultProps = {\n    tag: 'div',\n    type: 'bordered',\n};\n\nexport default Spinner;\n"],"sourceRoot":""}