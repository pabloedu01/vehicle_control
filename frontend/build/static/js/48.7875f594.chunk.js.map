{"version":3,"sources":["pages/client-vehicle/Form.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/hooks/esm/usePrevious.js","components/PageTitle.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","components/VerticalForm.js","components/FormInput.js","components/Datepicker.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","utils/selectOptionsForm.js"],"names":["api","APICore","Form","props","history","useNavigate","id","useParams","useState","data","setData","brands","setBrands","models","setModels","vehicles","setVehicles","schemaResolver","yupResolver","yup","shape","brand_id","required","model_id","vehicle_id","chasis","nullable","color","number_motor","renavan","plate","mileage","methods","useForm","resolver","defaultValues","handleSubmit","register","control","otherProps","errors","formState","getModels","get","getValues","then","response","getAllOptions","model","error","getVehicles","vehicle","useEffect","company_id","company","brand","getBrands","isTag","clientVehicle","defaultData","getData","setValue","breadCrumbItems","label","path","active","title","xs","className","classNames","Body","onSubmit","formData","ajaxCall","update","post","Object","assign","handleDoneAction","pushButton","status","hasOwnProperty","fieldName","setError","type","message","join","e","noValidate","md","name","containerClass","options","handleChange","placeholder","variant","useEventCallback","fn","ref","useCommittedRef","useCallback","current","apply","arguments","value","useRef","useEventListener","eventTarget","event","listener","capture","handler","target","addEventListener","removeEventListener","useMounted","mounted","isMounted","useCallbackRef","usePrevious","PageTitle","companyId","listProps","Item","href","hidden","insideCompany","map","item","index","WeakMap","_excluded","Anchor","React","_ref","onKeyDown","source","excluded","key","i","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","useButtonProps","tagName","buttonProps","handleKeyDown","trim","role","_jsx","displayName","VerticalForm","children","customMethods","formClass","console","log","Array","isArray","child","createElement","PasswordInput","refCallback","showPassword","setShowPassword","InputGroup","Control","as","r","isInvalid","autoComplete","data-password","onClick","FormInput","labelClassName","smallHtml","comp","Group","Label","Feedback","dangerouslySetInnerHTML","__html","render","field","onChange","classNamePrefix","inputRef","find","option","selectedOption","Check","hideAddon","showTimeSelect","timeFormat","tI","dateFormat","timeCaption","date","DatepickerInput","forwardRef","DatepickerInputWithAddon","readOnly","HyperDatepicker","input","customInput","timeIntervals","inputClass","selected","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","isReactNative","global","navigator","product","isDOM","document","useLayoutEffect","Row","bsPrefix","Component","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","BreadcrumbItem","linkAs","LinkComponent","linkProps","prefix","undefined","defaultProps","Breadcrumb","formattedOptions","items","fieldValue","fieldLabel","getOptionSelected","addedOptionDisappeared","optionSelected","concat","sameParent"],"mappings":"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","file":"static/js/48.7875f594.chunk.js","sourcesContent":["// @flow\nimport React, {useEffect, useState} from 'react';\nimport PageTitle from \"../../components/PageTitle\";\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\nimport {APICore} from \"../../helpers/api/apiCore\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport {useForm} from \"react-hook-form\";\nimport {FormInput} from \"../../components\";\nimport {getAllOptions} from \"../../utils/selectOptionsForm\";\nimport classNames from 'classnames';\n\nconst api = new APICore();\n\nconst Form = (props: {company?: any, clientVehicle?: any, isTag?: boolean, previousButton?: any, pushButton?: any, handleDoneAction?:any}): React$Element<React$FragmentType> => {\n    const history = useNavigate();\n    const {id} = useParams();\n    const [data, setData] = useState();\n    const [brands, setBrands] = useState([]);\n    const [models, setModels] = useState([]);\n    const [vehicles, setVehicles] = useState([]);\n\n    /*\n     * form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            brand_id: yup.number().required('Por favor, digite Marca'),\n            model_id: yup.number().required('Por favor, digite Modelo'),\n            vehicle_id: yup.number().required('Por favor, digite Vehiculo'),\n            chasis: yup.string().nullable(),\n            color: yup.string().nullable(),\n            number_motor: yup.string().nullable(),\n            renavan: yup.string().nullable(),\n            plate: yup.string().required('Por favor, digite Placa'),\n            mileage: yup.string().nullable(),\n        })\n    );\n\n    /*\n     * form methods\n     */\n    const methods = useForm({ resolver: schemaResolver, defaultValues: {} });\n\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    const otherProps = {\n      register,errors,control\n    };\n\n    const onSubmit = (formData) => {\n        let ajaxCall;\n\n        if(props?.clientVehicle || id){\n            ajaxCall = api.update('/client-vehicle/' + (props?.clientVehicle?.id || id),formData);\n        } else {\n            ajaxCall = api.post('/client-vehicle',Object.assign(formData,{company_id: props.company?.id}));\n        }\n\n        ajaxCall.then((response) => {\n            if(props?.handleDoneAction){\n                props?.handleDoneAction(response.data.data, props?.pushButton);\n            } else {\n                history(`/panel/company/${props.company?.id}/client-vehicles/list`);\n            }\n        }, (error) => {\n            if(error.response.status === 400 && error.response.data.hasOwnProperty('errors')){\n                for(let fieldName in error.response.data.errors){\n                    if(error.response.data.errors.hasOwnProperty(fieldName)){\n                        methods.setError(fieldName, {type: 'custom', message: error.response.data.errors[fieldName].join('<br>')});\n                    }\n                }\n            }\n        });\n    };\n\n    const getData = () => {\n        const defaultData = {\n            brand_id: null,\n            model_id: null,\n            vehicle_id: null,\n            chasis: null,\n            color: null,\n            number_motor: null,\n            renavan: null,\n            plate: null,\n            mileage: null,\n        };\n\n        if(props?.isTag !== true && id){\n            api.get('/client-vehicle/' + id).then((response) => {\n                const {vehicle:{model: {brand_id, brand}, model},vehicle:{model_id},vehicle_id,chasis,color,number_motor,renavan,plate,mileage, vehicle} = response.data.data;\n\n                setData({\n                    vehicle_id,chasis,color,number_motor,renavan,plate,mileage,model_id,brand_id, brand, model, vehicle\n                });\n            },(error) => {\n                setData(defaultData);\n            });\n        } else {\n            if(props?.clientVehicle){\n                const {vehicle:{model: {brand_id, brand}, model},vehicle:{model_id},vehicle_id,chasis,color,number_motor,renavan,plate,mileage, vehicle} = props?.clientVehicle;\n\n                setData({\n                    vehicle_id,chasis,color,number_motor,renavan,plate,mileage,model_id,brand_id, brand, model, vehicle\n                });\n            } else {\n                setData(defaultData);\n            }\n        }\n    };\n\n    const getBrands = () => {\n        api.get('/vehicle-brand/active-brands',{company_id: props.company?.id}).then((response) => {\n            setBrands(getAllOptions(response.data.data, data?.brand));\n        },(error) => {\n            setBrands([]);\n        });\n    };\n\n    const getModels = (brand_id?) => {\n        api.get('/vehicle-model/active-vehicle-models',{brand_id: brand_id ?? methods.getValues('brand_id')}).then((response) => {\n            setModels(getAllOptions(response.data.data, data?.model, (brand_id ?? methods.getValues('brand_id')) === data?.brand_id));\n        },(error) => {\n            setModels([]);\n        });\n    };\n\n    const getVehicles = (model_id?) => {\n        api.get('/vehicle/active-vehicles',{model_id: model_id ?? methods.getValues('model_id')}).then((response) => {\n            setVehicles(getAllOptions(response.data.data, data?.vehicle,(model_id ?? methods.getValues('model_id')) === data?.model_id));\n        },(error) => {\n            setVehicles([]);\n        });\n    };\n\n    const handleChangeBrand = () => {\n        getModels();\n\n        methods.setValue('model_id', null);\n        methods.setValue('vehicle_id', null);\n        setVehicles([]);\n    };\n\n    const handleChangeModel = () => {\n        getVehicles();\n\n        methods.setValue('vehicle_id', null);\n    };\n\n    useEffect(() => {\n        if(data){\n            getBrands();\n\n            if(props?.isTag !== true && id || props?.clientVehicle){\n                getModels(data.brand_id);\n                getVehicles(data.model_id);\n            }\n        }\n    }, [data]);\n\n    useEffect(() => {\n        getData();\n    }, [id, props?.clientVehicle]);\n\n    useEffect(() => {\n        methods.setValue('chasis', data?.chasis ?? null);\n        methods.setValue('color', data?.color ?? null);\n        methods.setValue('number_motor', data?.number_motor ?? null);\n        methods.setValue('renavan', data?.renavan ?? null);\n        methods.setValue('plate', data?.plate ?? null);\n        methods.setValue('mileage', data?.mileage ?? null);\n        methods.setValue('brand_id', data?.brand_id ?? null);\n        methods.setValue('model_id', data?.model_id ?? null);\n        methods.setValue('vehicle_id', data?.vehicle_id ?? null);\n    }, [data]);\n\n    return (\n        <>\n            {props?.isTag !== true ?\n                <PageTitle\n                    breadCrumbItems={[\n                        { label: 'Veículo de passagem', path: '/client-vehicles/list' },\n                        { label: 'Cadastro', path: `/client-vehicles/${id ? id + '/edit' : 'create'}`, active: true },\n                    ]}\n                    title={'Formulário de Veículo do Cliente'}\n                    company={props.company}\n                /> : null\n            }\n\n            <Row>\n                <Col xs={12}>\n                    <Card className={classNames({'mb-0': props?.isTag === true})}>\n                        <Card.Body>\n                            <form onSubmit={handleSubmit(onSubmit, (e) => {})} noValidate>\n                                <Row>\n                                    <Col md={6}>\n                                        <FormInput\n                                            label=\"Marca\"\n                                            type=\"select\"\n                                            name=\"brand_id\"\n                                            containerClass={'mb-3'}\n                                            options={brands}\n                                            handleChange={handleChangeBrand}\n                                            {...otherProps}\n                                        />\n\n                                        <FormInput\n                                            label=\"Modelo\"\n                                            type=\"select\"\n                                            name=\"model_id\"\n                                            containerClass={'mb-3'}\n                                            options={models}\n                                            handleChange={handleChangeModel}\n                                            {...otherProps}\n                                        />\n\n                                        <FormInput\n                                            label=\"Vehiculo\"\n                                            type=\"select\"\n                                            name=\"vehicle_id\"\n                                            containerClass={'mb-3'}\n                                            options={vehicles}\n                                            {...otherProps}\n                                        />\n\n                                        <FormInput\n                                            label=\"Placa\"\n                                            type=\"text\"\n                                            name=\"plate\"\n                                            placeholder=\"Digite Placa\"\n                                            containerClass={'mb-3'}\n                                            {...otherProps}\n                                        />\n\n                                        <FormInput\n                                            label=\"KM\"\n                                            type=\"text\"\n                                            name=\"mileage\"\n                                            placeholder=\"Digite KM\"\n                                            containerClass={'mb-3'}\n                                            {...otherProps}\n                                        />\n\n                                    </Col>\n\n                                    <Col md={6}>\n                                        <FormInput\n                                            label=\"Chasis\"\n                                            type=\"text\"\n                                            name=\"chasis\"\n                                            placeholder=\"Digite Chasis\"\n                                            containerClass={'mb-3'}\n                                            {...otherProps}\n                                        />\n\n                                        <FormInput\n                                            label=\"Color\"\n                                            type=\"text\"\n                                            name=\"color\"\n                                            placeholder=\"Digite Color\"\n                                            containerClass={'mb-3'}\n                                            {...otherProps}\n                                        />\n\n                                        <FormInput\n                                            label=\"Motor\"\n                                            type=\"text\"\n                                            name=\"number_motor\"\n                                            placeholder=\"Digite Motor\"\n                                            containerClass={'mb-3'}\n                                            {...otherProps}\n                                        />\n\n                                        <FormInput\n                                            label=\"Renavan\"\n                                            type=\"text\"\n                                            name=\"renavan\"\n                                            placeholder=\"Digite Renavan\"\n                                            containerClass={'mb-3'}\n                                            {...otherProps}\n                                        />\n\n\n                                    </Col>\n                                </Row>\n\n                                <div className=\"mb-3 mb-0\">\n                                    <Button variant=\"primary\" type=\"submit\">\n                                        Cadastro\n                                    </Button>\n                                </div>\n                            </form>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Form;\n","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\nimport {useParams} from \"react-router-dom\";\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n    company?: any,\n    insideCompany?: boolean\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    const {companyId} = useParams();\n\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/panel/companies\">TUNAP</Breadcrumb.Item>\n                            <Breadcrumb.Item hidden={props.insideCompany === false} href={`/panel/company/${props.company?.id || companyId}/dashboard`}>{props.company?.name || 'Empresa'}</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={props.insideCompany === false ? item.path : `/panel/company/${props.company?.id || companyId}${item.path}`}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","// @flow\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\n\ntype VerticalFromProps = {\n    defaultValues?: Object,\n    resolver?: any,\n    children?: any,\n    onSubmit?: (value: any) => void,\n    customMethods?: any,\n    formClass?: string,\n};\n\nconst VerticalForm = ({\n    defaultValues,\n    resolver,\n    children,\n    onSubmit,\n    customMethods,\n    formClass,\n}: VerticalFromProps): React$Element<any> => {\n    /*\n     * form methods\n     */\n\n    let methods = useForm({ defaultValues, resolver });\n\n    if(customMethods){\n        methods = customMethods;\n    }\n\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit, (e) => {console.log(e);})} className={formClass} noValidate>\n            {Array.isArray(children)\n                ? children.map((child) => {\n                      return child.props && child.props.name\n                          ? React.createElement(child.type, {\n                                ...{\n                                    ...child.props,\n                                    register,\n                                    key: child.props.name,\n                                    errors,\n                                    control,\n                                },\n                            })\n                          : child;\n                  })\n                : children}\n        </form>\n    );\n};\n\nexport default VerticalForm;\n","// @flow\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport {Controller} from \"react-hook-form\";\nimport HyperDatepicker from \"./Datepicker\";\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n    options?: Array<any>,\n    smallHtml?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    options,\n    smallHtml,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : type === 'datepicker' ? 'datepicker' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        <span dangerouslySetInnerHTML={{__html: errors[name]['message']}}/>\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'select' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                        <Controller\n                                            control={otherProps['control']}\n                                            render={({ field: { onChange, value, name, ref } }) => (\n                                                <Select\n                                                    className={\"react-select \" + (errors && errors[name] ? 'is-invalid' : '')}\n                                                    classNamePrefix=\"react-select\"\n                                                    inputRef={ref}\n                                                    name={name}\n                                                    options={options}\n                                                    value={options.find((option) => option.value === value) || null}\n                                                    onChange={(selectedOption) => {\n                                                        onChange(selectedOption.value);\n                                                        if(otherProps.hasOwnProperty('handleChange')){\n                                                            otherProps['handleChange'](selectedOption.value);\n                                                        }\n                                                    }}\n                                                    {...otherProps}\n                                                />\n                                            )}\n                                            name={name}\n                                        />\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                <span dangerouslySetInnerHTML={{__html: errors[name]['message']}}/>\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <>\n                                    {type === 'checkbox' || type === 'radio' || type === 'switch' ? (\n                                        <>\n                                            <Form.Group className={containerClass}>\n                                                <Form.Check\n                                                    type={type}\n                                                    label={label}\n                                                    name={name}\n                                                    id={name}\n                                                    ref={(r) => {\n                                                        if (refCallback) refCallback(r);\n                                                    }}\n                                                    className={className}\n                                                    isInvalid={errors && errors[name] ? true : false}\n                                                    {...(register ? register(name) : {})}\n                                                    {...otherProps}\n                                                />\n\n                                                {errors && errors[name] ? (\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        <span dangerouslySetInnerHTML={{__html: errors[name]['message']}}/>\n                                                    </Form.Control.Feedback>\n                                                ) : null}\n                                            </Form.Group>\n                                        </>\n                                    ) : (\n                                        <>\n                                            {type === 'datepicker' ? (\n                                                <>\n                                                    <Form.Group className={containerClass}>\n                                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n\n                                                        <div className={errors && errors[name] ? 'is-invalid' : ''}>\n                                                            <Controller\n                                                                control={otherProps['control']}\n                                                                render={({ field: { onChange, value, name, ref } }) => (\n                                                                    <HyperDatepicker\n                                                                        hideAddon={true}\n                                                                        showTimeSelect\n                                                                        timeFormat=\"HH:mm\"\n                                                                        tI={1}\n                                                                        dateFormat=\"dd/MM/yyyy h:mm aa\"\n                                                                        timeCaption=\"time\"\n                                                                        name={name}\n                                                                        value={value}\n                                                                        onChange={(date) => {\n                                                                            if(otherProps.hasOwnProperty('handleChange')){\n                                                                                otherProps['handleChange'](date);\n                                                                            }\n                                                                        }}\n                                                                        {...otherProps}\n                                                                    />\n                                                                )}\n                                                                name={name}\n                                                            />\n                                                        </div>\n\n                                                        {errors && errors[name] ? (\n                                                            <Form.Control.Feedback type=\"invalid\">\n                                                                <span dangerouslySetInnerHTML={{__html: errors[name]['message']}}/>\n                                                            </Form.Control.Feedback>\n                                                        ) : null}\n                                                        {smallHtml ? smallHtml : null}\n                                                    </Form.Group>\n                                                </>\n                                            ) : (\n                                                <Form.Group className={containerClass}>\n                                                    {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                                    <Form.Control\n                                                        type={type}\n                                                        placeholder={placeholder}\n                                                        name={name}\n                                                        id={name}\n                                                        as={comp}\n                                                        ref={(r) => {\n                                                            if(refCallback){\n                                                                refCallback(r);\n                                                            }\n                                                        }}\n                                                        className={className}\n                                                        isInvalid={errors && errors[name] ? true : false}\n                                                        {...(register ? register(name) : {})}\n                                                        {...otherProps}\n                                                        autoComplete={name}>\n                                                        {children ? children : null}\n                                                    </Form.Control>\n\n                                                    {errors && errors[name] ? (\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            <span dangerouslySetInnerHTML={{__html: errors[name]['message']}}/>\n                                                        </Form.Control.Feedback>\n                                                    ) : null}\n                                                    {smallHtml ? smallHtml : null}\n                                                </Form.Group>\n                                            )}\n                                        </>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\nimport React, { forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport classNames from 'classnames';\n\ntype DatepickerInputProps = {\n    onClick?: () => void,\n    value?: string,\n};\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef((props: DatepickerInputProps, ref) => {\n    const onDateValueChange = () => {\n        console.log('date value changed');\n    };\n    return (\n        <input\n            type=\"text\"\n            className=\"form-control date\"\n            onClick={props.onClick}\n            value={props.value}\n            onChange={onDateValueChange}\n            ref={ref}\n        />\n    );\n});\n\ntype DatepickerInputWithAddonProps = {\n    onClick?: () => void,\n    value?: string,\n};\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef((props: DatepickerInputWithAddonProps, ref) => (\n    <div className=\"input-group\" ref={ref}>\n        <input\n            type=\"text\"\n            className=\"form-control form-control-light\"\n            onClick={props.onClick}\n            value={props.value}\n            readOnly\n        />\n        <div className=\"input-group-append\">\n            <span className=\"input-group-text bg-primary border-primary text-white\">\n                <i className=\"mdi mdi-calendar-range font-13\"></i>\n            </span>\n        </div>\n    </div>\n));\n\ntype HyperDatepickerProps = {\n    value: Date,\n    onChange: (date: any) => void,\n    hideAddon?: boolean,\n    inputClass?: string,\n    dateFormat?: string,\n    minDate?: Date,\n    maxDate?: Date,\n    showTimeSelect?: boolean,\n    tI?: number,\n    timeCaption?: string,\n    showTimeSelectOnly?: boolean,\n    monthsShown?: number,\n    inline?: boolean,\n};\n\nconst HyperDatepicker = (props: HyperDatepickerProps): React$Element<any> => {\n    // handle custom input\n    const input = (props.hideAddon || false) === true ? <DatepickerInput /> : <DatepickerInputWithAddon />;\n\n    return (\n        <>\n            {/* date picker control */}\n            <DatePicker\n                customInput={input}\n                timeIntervals={props.tI}\n                className={classNames('form-control', props.inputClass)}\n                selected={props.value}\n                onChange={(date) => props.onChange(date)}\n                showTimeSelect={props.showTimeSelect}\n                timeFormat=\"hh:mm a\"\n                timeCaption={props.timeCaption}\n                dateFormat={props.dateFormat || 'MM/dd/yyyy'}\n                minDate={props.minDate}\n                maxDate={props.maxDate}\n                monthsShown={props.monthsShown}\n                showTimeSelectOnly={props.showTimeSelectOnly}\n                inline={props.inline}\n                autoComplete=\"off\"\n            />\n        </>\n    );\n};\n\nexport default HyperDatepicker;\n","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","export const formattedOptions = (items, fieldValue = 'id', fieldLabel = 'name') => {\n  return items.map((item) => {\n    return {\n      value: item[fieldValue],\n      label: item[fieldLabel]\n    };\n  })\n};\n\nexport const getOptionSelected = (options, value) => {\n  return value !== null ? options.find((option) => option.value === value) : undefined;\n};\n\nexport const addedOptionDisappeared = (options, optionSelected, data, fieldValue = 'id', fieldLabel = 'name') => {\n  if(optionSelected || !data){\n    return options;\n  } else {\n    return options.concat(optionSelected ? [] : [{value: data[fieldValue], label: data[fieldLabel] + ' ' + (data.hasOwnProperty('active') && data.active !== true ? '(Not active)' : '(Deleted)')}] );\n  }\n};\n\nexport const getAllOptions = (items, data, sameParent = true, fieldValue = 'id', fieldLabel = 'name') => {\n  const options = formattedOptions(items, fieldValue, fieldLabel);\n\n  if(sameParent){\n    const optionSelected = data ? getOptionSelected(options, data[fieldValue]) : undefined;\n\n    return addedOptionDisappeared(options, optionSelected, data, fieldValue, fieldLabel)\n  }\n  else{\n    return options;\n  }\n};\n\nexport const setCreateOption = (options, label = 'Novo') => {\n  return [{value: 0, label: '--- ' + label + ' ---'}].concat(options);\n};\n"],"sourceRoot":""}